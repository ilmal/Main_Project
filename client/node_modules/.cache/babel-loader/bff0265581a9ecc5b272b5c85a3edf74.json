{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useStore } from \"react-redux\";\nimport { useState } from \"react\";\nimport { serverTimeInfo } from \"../../../redux/actions\";\nimport StartStop from \"./startStop\";\n\nconst TimeUpdate = async timeReset => {\n  _s();\n\n  const store = useStore();\n  const [userData, setUserData] = useState(store.getState());\n  store.subscribe(() => {\n    setUserData(store.getState());\n  });\n  await serverTimeInfo(store.dispatch, timeReset, userData.serverTime.timeOfReset); //  shutting down server if shutdown variable is true, and server is runnig\n\n  if (userData.serverTIME.serverShutDown && userData.serverPods.status === \"True\") {\n    StartStop(\"shutDown\");\n  }\n};\n\n_s(TimeUpdate, \"eFW9BJtZu+NjadMgwFzGB8dKwIs=\", false, function () {\n  return [useStore];\n});\n\n_c = TimeUpdate;\nexport default TimeUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeUpdate\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/userHome/server/timeUpdate.jsx"],"names":["useStore","useState","serverTimeInfo","StartStop","TimeUpdate","timeReset","store","userData","setUserData","getState","subscribe","dispatch","serverTime","timeOfReset","serverTIME","serverShutDown","serverPods","status"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,UAAU,GAAG,MAAOC,SAAP,IAAqB;AAAA;;AACpC,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACK,KAAK,CAACG,QAAN,EAAD,CAAxC;AAEAH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AAClBF,IAAAA,WAAW,CAACF,KAAK,CAACG,QAAN,EAAD,CAAX;AACH,GAFD;AAIA,QAAMP,cAAc,CAACI,KAAK,CAACK,QAAP,EAAiBN,SAAjB,EAA4BE,QAAQ,CAACK,UAAT,CAAoBC,WAAhD,CAApB,CARoC,CAUpC;;AACA,MAAIN,QAAQ,CAACO,UAAT,CAAoBC,cAApB,IAAsCR,QAAQ,CAACS,UAAT,CAAoBC,MAApB,KAA+B,MAAzE,EAAiF;AAC7Ed,IAAAA,SAAS,CAAC,UAAD,CAAT;AACH;AACJ,CAdD;;GAAMC,U;UACYJ,Q;;;KADZI,U;AAgBN,eAAeA,UAAf","sourcesContent":["import { useStore } from \"react-redux\"\nimport { useState } from \"react\"\nimport { serverTimeInfo } from \"../../../redux/actions\"\nimport StartStop from \"./startStop\";\n\n\nconst TimeUpdate = async (timeReset) => {\n    const store = useStore()\n    const [userData, setUserData] = useState(store.getState())\n\n    store.subscribe(() => {\n        setUserData(store.getState())\n    })\n\n    await serverTimeInfo(store.dispatch, timeReset, userData.serverTime.timeOfReset)\n\n    //  shutting down server if shutdown variable is true, and server is runnig\n    if (userData.serverTIME.serverShutDown && userData.serverPods.status === \"True\") {\n        StartStop(\"shutDown\")\n    }\n}\n\nexport default TimeUpdate"]},"metadata":{},"sourceType":"module"}