{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/components/userHome/server/changeServerConfig.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport store from \"../../../store\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeServerConfig = props => {\n  _s();\n\n  // stateful settings\n  const state = useSelector(state => state);\n  const [change, setChange] = useState(false);\n  const [whitelist, setWhitelist] = useState([]);\n  const [opslist, setOpslist] = useState([]);\n  let i = 0;\n\n  const toggle = () => {\n    setChange(prev => !prev);\n  };\n\n  useEffect(() => {\n    if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value != null) {\n      setWhitelist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value.split(\",\"));\n    }\n\n    if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value != null) {\n      setOpslist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value.split(\",\"));\n    }\n  }, [state]); //data for Difficulty and Versions\n\n  const versions = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\", \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\", \"1.12.2\", \"1.12.1\", \"1.12\"];\n  let versionBoiler = versions.map(d => {\n    i++;\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  });\n  const difficulties = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"];\n  const difficultiesBoiler = difficulties.map(d => {\n    i++;\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }); //data for Whitelist\n\n  const changeWhite = async data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (whitelist.includes(data.target.value)) {\n          throw \"name already given\";\n        }\n\n        setWhitelist(whitelist.concat(data.target.value));\n        data.target.value = \"\";\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const WhitelistList = () => {\n    let i = 0;\n    return whitelist.map(e => {\n      i += 1;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: e\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const WhitelistListChange = () => {\n    let i = 0;\n    return whitelist.map(e => {\n      i += 1;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"whiteArray\",\n        onClick: removeFromWhiteList,\n        children: e\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    });\n  }; //data for Ops\n\n\n  const changeOps = data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (opslist.includes(data.target.value)) {\n          throw \"name already given\";\n        }\n\n        setOpslist(opslist.concat(data.target.value));\n        data.target.value = \"\";\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const OpslistList = () => {\n    let i = 0;\n    return opslist.map(e => {\n      i += 1;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: e\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const OpslistListChange = () => {\n    let i = 0;\n    return opslist.map(e => {\n      i += 1;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"opsArray\",\n        onClick: removeFromOpsList,\n        children: e\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const removeFromOpsList = e => {\n    let newOpsList = opslist.filter(item => item !== e.target.innerText);\n    setOpslist(newOpsList);\n  };\n\n  const removeFromWhiteList = e => {\n    let newwhitelist = whitelist.filter(item => item !== e.target.innerText);\n    setWhitelist(newwhitelist);\n  };\n\n  const saveData = async e => {\n    e.preventDefault();\n    console.log(\"saving data\");\n    console.log(\"serverName: \", e.target.serverName.value);\n    console.log(\"serverVersion: \", e.target.serverVersion.value);\n    console.log(\"serverDifficulty: \", e.target.serverDifficulty.value);\n    console.log(\"serverWhitelist: \", whitelist);\n    console.log(\"serverOpsList: \", opslist); // reformatting whitelist and op-list\n\n    const whitelistString = whitelist.join(\",\");\n    const opslistString = opslist.join(\",\");\n    await axios.post(`/mcConf/updateData`, {\n      id: store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id,\n      serverName: e.target.serverName.value,\n      serverVersion: e.target.serverVersion.value,\n      serverDifficulty: e.target.serverDifficulty.value,\n      serverWhitelist: whitelistString,\n      serverOpsList: opslistString\n    }).then(response => {\n      console.log(\"response from updateData: \", response.data.data);\n    });\n    window.location.reload();\n  };\n\n  const defaultFunc = () => {\n    let configSize = \"userHomeChangeConfig userHomeSegment\";\n\n    if (opslist.length > 4 || whitelist.length > 4) {\n      configSize = \"userHomeChangeConfigExtendOne userHomeSegment\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: configSize,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"whitelist: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ops: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(OpslistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeBtn userHomeChangeDefaults\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggle,\n          children: \"change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  };\n\n  const changeFunc = () => {\n    let configSize = \"userHomeChangeConfig userHomeSegment\";\n\n    if (opslist.length > 4 || whitelist.length > 4) {\n      configSize = \"userHomeChangeConfigExtendOne userHomeSegment\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: configSize,\n      onSubmit: saveData,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"serverName\",\n          className: \"userHomeChangeServer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"serverVersion\",\n          id: \"\",\n          children: versionBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"serverDifficulty\",\n          id: \"\",\n          children: difficultiesBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Whitelists:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WhitelistListChange, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"serverWhitelist\",\n          onKeyPress: changeWhite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ops:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OpslistListChange, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"serverOps\",\n          onKeyPress: changeOps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeBtn userHomeChangeDefaults\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  };\n\n  switch (change) {\n    case true:\n      return changeFunc();\n\n    default:\n      return defaultFunc();\n  }\n};\n\n_s(ChangeServerConfig, \"8Tz3VJHl2WCq0yvzSx14pVJPoTw=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChangeServerConfig;\nexport default ChangeServerConfig; // import React, {\n//     Component\n// } from \"react\"\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n//     }\n//     changeFunc = () => {\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n// export default ChangeServerConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeServerConfig\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/userHome/server/changeServerConfig.jsx"],"names":["React","useEffect","useState","store","useSelector","axios","ChangeServerConfig","props","state","change","setChange","whitelist","setWhitelist","opslist","setOpslist","i","toggle","prev","getState","serverInfo","userHomeData","serverIndex","data","value","split","versions","versionBoiler","map","d","difficulties","difficultiesBoiler","changeWhite","key","preventDefault","target","includes","concat","result","console","log","WhitelistList","e","WhitelistListChange","removeFromWhiteList","changeOps","OpslistList","OpslistListChange","removeFromOpsList","newOpsList","filter","item","innerText","newwhitelist","saveData","serverName","serverVersion","serverDifficulty","whitelistString","join","opslistString","post","id","server_id","serverWhitelist","serverOpsList","then","response","window","location","reload","defaultFunc","configSize","length","changeFunc"],"mappings":"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":["import React, { useEffect, useState } from \"react\"\nimport store from \"../../../store\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\n\nconst ChangeServerConfig = (props) => {\n    // stateful settings\n    const state = useSelector(state => state)\n    const [change, setChange] = useState(false)\n    const [whitelist, setWhitelist] = useState([])\n    const [opslist, setOpslist] = useState([])\n    let i = 0;\n\n    const toggle = () => {\n        setChange((prev) => !prev)\n    }\n\n    useEffect(() => {\n        if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value != null) {\n            setWhitelist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value.split(\",\"))\n        }\n        if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value != null) {\n            setOpslist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value.split(\",\"))\n        }\n    }, [state])\n\n    //data for Difficulty and Versions\n    const versions = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n        \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n        \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    let versionBoiler = versions.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    const difficulties = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"]\n\n    const difficultiesBoiler = difficulties.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    //data for Whitelist\n    const changeWhite = async (data) => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (whitelist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setWhitelist(whitelist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const WhitelistList = () => {\n\n        let i = 0;\n        return whitelist.map((e) => {\n            i += 1\n            return <span key={i}>{e}</span>\n        })\n    }\n\n    const WhitelistListChange = () => {\n        let i = 0;\n        return whitelist.map((e) => {\n            i += 1\n            return <span className=\"whiteArray\" onClick={removeFromWhiteList} key={i}>{e}</span>\n        })\n    }\n\n    //data for Ops\n    const changeOps = data => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (opslist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setOpslist(opslist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const OpslistList = () => {\n        let i = 0;\n        return opslist.map((e) => {\n            i += 1\n            return <span key={i}>{e}</span>\n        })\n    }\n\n    const OpslistListChange = () => {\n        let i = 0;\n        return opslist.map((e) => {\n            i += 1\n            return <span className=\"opsArray\" onClick={removeFromOpsList} key={i}>{e}</span>\n        })\n    }\n\n    const removeFromOpsList = (e) => {\n        let newOpsList = opslist.filter(item => item !== e.target.innerText)\n        setOpslist(newOpsList)\n    }\n\n    const removeFromWhiteList = (e) => {\n        let newwhitelist = whitelist.filter(item => item !== e.target.innerText)\n        setWhitelist(newwhitelist)\n    }\n\n    const saveData = async (e) => {\n        e.preventDefault()\n        console.log(\"saving data\")\n\n        console.log(\"serverName: \", e.target.serverName.value)\n        console.log(\"serverVersion: \", e.target.serverVersion.value)\n        console.log(\"serverDifficulty: \", e.target.serverDifficulty.value)\n        console.log(\"serverWhitelist: \", whitelist)\n        console.log(\"serverOpsList: \", opslist)\n\n        // reformatting whitelist and op-list\n        const whitelistString = whitelist.join(\",\")\n        const opslistString = opslist.join(\",\")\n\n        await axios.post(`/mcConf/updateData`, {\n            id: store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id,\n            serverName: e.target.serverName.value,\n            serverVersion: e.target.serverVersion.value,\n            serverDifficulty: e.target.serverDifficulty.value,\n            serverWhitelist: whitelistString,\n            serverOpsList: opslistString\n        }).then(response => {\n            console.log(\"response from updateData: \", response.data.data)\n        })\n        window.location.reload()\n    }\n\n    const defaultFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <div className={configSize}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value}</span>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Version: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value}</span>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Difficulty: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value}</span>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>whitelist: </p>\n                    <span><WhitelistList /></span>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>ops: </p>\n                    <span><OpslistList /></span>\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>change</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    const changeFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <form className={configSize} onSubmit={saveData}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <input type=\"text\" name=\"serverName\" className=\"userHomeChangeServer\" />\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Server Version: </p>\n                    <select name=\"serverVersion\" id=\"\">\n                        {versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Server Difficulty: </p>\n                    <select name=\"serverDifficulty\" id=\"\">\n                        {difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>Whitelists:</p>\n                    <WhitelistListChange />\n                    <input type=\"text\" name=\"serverWhitelist\" onKeyPress={changeWhite} />\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>Ops:</p>\n                    <OpslistListChange />\n                    <input type=\"text\" name=\"serverOps\" onKeyPress={changeOps} />\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button type=\"submit\">save</button>\n                </div>\n            </form>\n        );\n    }\n\n    switch (change) {\n        case true:\n            return changeFunc()\n        default:\n            return defaultFunc()\n    }\n}\n\nexport default ChangeServerConfig\n\n\n\n// import React, {\n//     Component\n// } from \"react\"\n\n\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n\n//     }\n\n\n//     changeFunc = () => {\n\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n\n// export default ChangeServerConfig;"]},"metadata":{},"sourceType":"module"}