{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { combineReducers } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nconst initailState = {\n  user: \"default\",\n  auth: null,\n  serverPods: \"default\",\n  serverSVC: \"default\",\n  env: [{\n    name: \"\",\n    value: \"\"\n  }, {\n    name: \"\",\n    value: \"\"\n  }, {\n    name: \"\",\n    value: \"\"\n  }, {\n    name: \"\",\n    value: \"\"\n  }, {\n    name: \"\",\n    value: \"\"\n  }, {\n    name: \"\",\n    value: \"\"\n  }, {\n    name: \"\",\n    value: \"\"\n  }, {\n    name: \"\",\n    value: \"\"\n  }],\n  errMessage: false,\n  message: false\n};\n\nconst reducer = (state = initailState, action) => {\n  _s();\n\n  switch (action.type) {\n    case \"FETCH_USER_SUCCESS\":\n      return { ...state,\n        user: action.payload\n      };\n\n    case \"AUTH_SUCCESS\":\n      return { ...state,\n        auth: action.payload\n      };\n\n    case \"LOGIN\":\n      const history = useHistory();\n      document.cookie = `loginAuth=${action.payload.loginAuth};path=/`;\n      document.cookie = `userID=${action.payload.userID};path=/`;\n      history.push(\"/user/home\");\n      window.location.reload();\n\n    case \"SERVER_PODS_DATA\":\n      return { ...state,\n        serverPods: action.payload\n      };\n\n    case \"SERVER_SVC_DATA\":\n      return { ...state,\n        serverSVC: action.payload\n      };\n\n    case \"MC_CONF_GET_DATA\":\n      return { ...state,\n        env: action.payload.env\n      };\n\n    case \"ERR_MESSAGE\":\n      return { ...state,\n        errMessage: action.payload\n      };\n\n    case \"CLEAR_ERR_MESSAGES\":\n      return { ...state,\n        errMessage: false\n      };\n\n    case \"MESSAGE\":\n      return { ...state,\n        message: action.payload\n      };\n\n    case \"CLEAR_MESSAGES\":\n      return { ...state,\n        message: false\n      };\n\n    case \"DUMP\":\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_s(reducer, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\nexport default reducer;","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/redux/reducers/index.jsx"],"names":["combineReducers","useHistory","initailState","user","auth","serverPods","serverSVC","env","name","value","errMessage","message","reducer","state","action","type","payload","history","document","cookie","loginAuth","userID","push","window","location","reload"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\"\nimport { useHistory } from \"react-router-dom\";\n\nconst initailState = {\n    user: \"default\",\n    auth: null,\n    serverPods: \"default\",\n    serverSVC: \"default\",\n    env: [\n        { name: \"\", value: \"\" },\n        { name: \"\", value: \"\" },\n        { name: \"\", value: \"\" },\n        { name: \"\", value: \"\" },\n        { name: \"\", value: \"\" },\n        { name: \"\", value: \"\" },\n        { name: \"\", value: \"\" },\n        { name: \"\", value: \"\" }\n    ],\n    errMessage: false,\n    message: false\n}\n\nconst reducer = (state = initailState, action) => {\n    switch (action.type) {\n        case \"FETCH_USER_SUCCESS\":\n            return {\n                ...state,\n                user: action.payload\n            }\n        case \"AUTH_SUCCESS\":\n            return {\n                ...state,\n                auth: action.payload\n            }\n        case \"LOGIN\":\n\n            const history = useHistory()\n\n            document.cookie = `loginAuth=${action.payload.loginAuth};path=/`\n            document.cookie = `userID=${action.payload.userID};path=/`\n            history.push(\"/user/home\");\n            window.location.reload();\n        case \"SERVER_PODS_DATA\":\n            return {\n                ...state,\n                serverPods: action.payload\n            }\n        case \"SERVER_SVC_DATA\":\n            return {\n                ...state,\n                serverSVC: action.payload\n            }\n        case \"MC_CONF_GET_DATA\":\n            return {\n                ...state,\n                env: action.payload.env\n            }\n        case \"ERR_MESSAGE\":\n            return {\n                ...state,\n                errMessage: action.payload\n            }\n        case \"CLEAR_ERR_MESSAGES\":\n            return {\n                ...state,\n                errMessage: false\n            }\n        case \"MESSAGE\":\n            return {\n                ...state,\n                message: action.payload\n            }\n        case \"CLEAR_MESSAGES\":\n            return {\n                ...state,\n                message: false\n            }\n        case \"DUMP\":\n            return {\n                ...state,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}