{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/components/payments/paymentLoginSignup.jsx\",\n    _s = $RefreshSig$();\n\n// modules\nimport { useState, useEffect } from \"react\"; // redux\n\nimport { store } from \"../../index\";\nimport { signup, login, resendConfirmationMail } from \"../../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [showSignup, setShowSignup] = useState(true);\n  const [verifySignup, setVerifySignup] = useState(false);\n  const [clientNoMail, setClientNoMail] = useState(false);\n  const [user, setUser] = useState({\n    email: \"loading\"\n  }); // updating store \n\n  useEffect(() => {\n    if (store.getState().user != \"This user doesn't exist\") {\n      setUser(store.getState().user);\n    }\n  }, []); // enable disable scroll paymentHandler\n\n  useEffect(() => {\n    if (verifySignup) return document.body.style.overflow = \"hidden\";\n    return document.body.style.overflow = \"scroll\";\n  }, [verifySignup]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (showSignup) {\n      // if the request is from the signup page\n      // console.log(\"email: \", e.target.email.value)\n      // console.log(\"pass1: \", e.target.pass1.value)\n      // console.log(\"pass2: \", e.target.pass2.value)\n      // making sure the passwords match\n      if (e.target.pass1.value != e.target.pass2.value) {\n        console.error(\"password do not match! Err at /payments/paymentLoginSignup.jsx\");\n        return store.dispatch({\n          type: \"ERR_MESSAGE\",\n          payload: \"The passwords do not match!\"\n        });\n      } //generating a success message for the client\n      // store.dispatch({\n      //     type: \"MESSAGE\",\n      //     payload: \"Signup success!\"\n      // })\n      // sending the name, email, pass and store to the redux action\n\n\n      console.log(\"sending data\"); // setting state for showing verify signup true\n\n      setVerifySignup(true);\n      return signup(e.target.email.value.split(\"@\")[0], e.target.email.value, e.target.pass1.value, store.dispatch);\n    } // if the request is from the login page\n    // console.log(\"email: \", e.target.email.value)\n    // console.log(\"pass: \", e.target.pass.value)\n\n\n    return login(e.target.email.value, e.target.pass.value, store.dispatch);\n  };\n\n  const loginComponent = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"paymentLoginMainContainer\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"paymentLoginSignupHeader\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentLoginSignupsHeaderSeperator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        className: \"paymentLoginEmail\",\n        type: \"email\",\n        placeholder: \"Name/Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pass\",\n        className: \"paymentLoginPassword\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentLoginSignupButtonLinkContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setShowSignup(!showSignup),\n          children: \"Don't have an account? Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n\n  const signupComponent = () => {\n    // showing signup verification if state verifySignup is true\n    if (verifySignup) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentVerificationSignupMainBody\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentVerificationSignupBody\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentVerificationMessageBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Follow the link sent to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", user.email, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 55\n            }, this), \" and verify you account!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noMailLine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), clientNoMail ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noMail\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Make sure to check the spam folder!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Still can't find it? Just send another one!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => store.dispatch(resendConfirmationMail),\n              children: [\"Send another mail to \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setClientNoMail(true),\n              children: \"Can't find the email?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"paymentSignupMainContainer\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"paymentLoginSignupHeader\",\n        children: \"SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentLoginSignupsHeaderSeperator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        className: \"paymentSignupEmail\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pass1\",\n        className: \"paymentSignupPassword1\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pass2\",\n        className: \"paymentSignupPassword2\",\n        type: \"password\",\n        placeholder: \"Retype Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentLoginSignupButtonLinkContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setShowSignup(!showSignup),\n          children: \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  };\n\n  if (showSignup) return signupComponent();\n  return loginComponent();\n}, \"RhWZfdXyOQHIPvbzQrtxFVSgeZY=\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/payments/paymentLoginSignup.jsx"],"names":["useState","useEffect","store","signup","login","resendConfirmationMail","showSignup","setShowSignup","verifySignup","setVerifySignup","clientNoMail","setClientNoMail","user","setUser","email","getState","document","body","style","overflow","handleSubmit","e","preventDefault","target","pass1","value","pass2","console","error","dispatch","type","payload","log","split","pass","loginComponent","signupComponent"],"mappings":"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","sourcesContent":["// modules\nimport { useState, useEffect } from \"react\"\n\n// redux\nimport { store } from \"../../index\"\nimport { signup, login, resendConfirmationMail } from \"../../redux/actions/index\"\n\n\n\nexport default () => {\n\n    const [showSignup, setShowSignup] = useState(true)\n    const [verifySignup, setVerifySignup] = useState(false)\n    const [clientNoMail, setClientNoMail] = useState(false)\n    const [user, setUser] = useState({ email: \"loading\" })\n\n    // updating store \n    useEffect(() => {\n        if (store.getState().user != \"This user doesn't exist\") {\n            setUser(store.getState().user)\n        }\n    }, [])\n\n\n    // enable disable scroll paymentHandler\n    useEffect(() => {\n        if (verifySignup) return document.body.style.overflow = \"hidden\"\n        return document.body.style.overflow = \"scroll\"\n    }, [verifySignup])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (showSignup) {\n            // if the request is from the signup page\n            // console.log(\"email: \", e.target.email.value)\n            // console.log(\"pass1: \", e.target.pass1.value)\n            // console.log(\"pass2: \", e.target.pass2.value)\n\n            // making sure the passwords match\n            if (e.target.pass1.value != e.target.pass2.value) {\n                console.error(\"password do not match! Err at /payments/paymentLoginSignup.jsx\")\n                return store.dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: \"The passwords do not match!\"\n                })\n            }\n            //generating a success message for the client\n            // store.dispatch({\n            //     type: \"MESSAGE\",\n            //     payload: \"Signup success!\"\n            // })\n\n            // sending the name, email, pass and store to the redux action\n            console.log(\"sending data\")\n\n            // setting state for showing verify signup true\n            setVerifySignup(true)\n\n            return signup(e.target.email.value.split(\"@\")[0], e.target.email.value, e.target.pass1.value, store.dispatch)\n        }\n        // if the request is from the login page\n        // console.log(\"email: \", e.target.email.value)\n        // console.log(\"pass: \", e.target.pass.value)\n\n        return login(e.target.email.value, e.target.pass.value, store.dispatch)\n    }\n\n    const loginComponent = () => {\n        return (\n            <form className=\"paymentLoginMainContainer\" onSubmit={handleSubmit}>\n                <span className=\"paymentLoginSignupHeader\">LOGIN</span>\n                <div className=\"paymentLoginSignupsHeaderSeperator\" />\n                <input name=\"email\" className=\"paymentLoginEmail\" type=\"email\" placeholder=\"Name/Email\" required />\n                <input name=\"pass\" className=\"paymentLoginPassword\" type=\"password\" placeholder=\"Password\" required />\n                <div className=\"paymentLoginSignupButtonLinkContainer\">\n                    <button>Login</button>\n                    <span onClick={() => setShowSignup(!showSignup)}>Don't have an account? Sign up</span>\n                </div>\n            </form>\n        )\n    }\n\n    const signupComponent = () => {\n        // showing signup verification if state verifySignup is true\n        if (verifySignup) return (\n            <div className=\"paymentVerificationSignupMainBody\">\n                <div className=\"paymentVerificationSignupBody\">\n                    <div className=\"paymentVerificationMessageBody\">\n                        <span>Follow the link sent to <span> {user.email} </span> and verify you account!</span>\n                        <div className=\"noMailLine\" />\n                        {clientNoMail ?\n                            <div className=\"noMail\">\n                                <span>Make sure to check the spam folder!</span>\n                                <span>Still can't find it? Just send another one!</span>\n                                <button onClick={() => store.dispatch(resendConfirmationMail)}>Send another mail to {user.email}</button>\n                            </div>\n                            :\n                            <div>\n                                <span onClick={() => setClientNoMail(true)}>Can't find the email?</span>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n        return (\n            <form className=\"paymentSignupMainContainer\" onSubmit={handleSubmit}>\n                <span className=\"paymentLoginSignupHeader\">SIGNUP</span>\n                <div className=\"paymentLoginSignupsHeaderSeperator\" />\n                <input name=\"email\" className=\"paymentSignupEmail\" type=\"email\" placeholder=\"Email\" required />\n                <input name=\"pass1\" className=\"paymentSignupPassword1\" type=\"password\" placeholder=\"Password\" required />\n                <input name=\"pass2\" className=\"paymentSignupPassword2\" type=\"password\" placeholder=\"Retype Password\" required />\n                <div className=\"paymentLoginSignupButtonLinkContainer\">\n                    <button>Signup</button>\n                    <span onClick={() => setShowSignup(!showSignup)}>Already have an account? Login</span>\n                </div>\n            </form>\n        )\n    }\n\n    if (showSignup) return signupComponent();\n    return loginComponent();\n}\n\n"]},"metadata":{},"sourceType":"module"}