{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraft.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport MinecraftLevels from \"./minecraftLevels\";\nimport store from \"../../../store\";\nimport { availableServerTeirs } from \"../../../redux/actions\";\nimport { usehistory } from \"history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MinecraftCreate = () => {\n  _s();\n\n  history = useHistory(); //const [isCardPressed, setisCardPressed] = useState(\"not pressed\")\n\n  const [isCardPressed, setisCardPressed] = useState(() => {\n    if (localStorage.getItem(\"isCardPressed\")) return localStorage.getItem(\"isCardPressed\");\n    return \"not pressed\";\n  });\n  useEffect(() => {\n    localStorage.setItem(\"isCardPressed\", isCardPressed);\n  }, [isCardPressed]);\n  useEffect(async () => {\n    await store.dispatch(availableServerTeirs);\n  }, []);\n  const [update, setUpdate] = useState(false);\n  store.subscribe(() => {\n    setUpdate(!update);\n  });\n  useEffect(() => {\n    // effect for handling users with an \"_id\" queryparam, this is for renewing past servers\n    console.log(\"look at mee!\"); // check if user is logged in\n\n    if (store.getState().user === \"default\") {\n      history.push(\"/\"), window.location.reload();\n    }\n\n    for (let i = 0; i > store.getState().user.past_servers; i++) {\n      var _store$getState$query;\n\n      console.log(\"HEHEHEHEHEH\");\n      if (((_store$getState$query = store.getState().querySelectors) === null || _store$getState$query === void 0 ? void 0 : _store$getState$query._id) === store.getState().user.past_servers[i].server_id) return setisCardPressed(store.getState().user.past_servers[i].plan.toLowerCase());\n    }\n  }, [update]); // ----------- stripe -------------\n\n  const PUBLIC_KEY = \"pk_test_51JCk7wGWd5hOwkfP4Q7UpN498uJW5oa2q7vb97viqghzRSpqilFLqtCB161iX4LOg68mkwqwHaptGyl0rgaB5NSf0080vAPRe9\";\n  const stripeLoad = loadStripe(PUBLIC_KEY); //---------------------------------\n\n  const landingPageFunc = () => {\n    // element for sold out layout. To use, add this func at the start of the element\n    // also add the className \"serverLandingPageCardSoldOutTemplate\" to the parent element\n    // in future make this automatic, add value in db then extract value and based on that\n    // update the parent ele class and insert this func to the element (future work)\n    const isSoldOut = selectedTeir => {\n      let result = false;\n      if (store.getState().availableServerTeirs === null) return null;\n      Object.keys(store.getState().availableServerTeirs).forEach(teir => {\n        if (teir.toUpperCase() === selectedTeir && !store.getState().availableServerTeirs[teir].value) {\n          result = true;\n        }\n      });\n\n      if (result) {\n        //console.log(\"CLASSNAME: \", document.getElementsByClassName(selectedTeir.toLowerCase()))\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"serverLandingPageCardSoldOutDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"serverLandingPageCardSoldOutBlurDivTop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"serverLandingPageCardSoldOutMiddleDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"serverLandingPageCardSoldOutMiddleDivInner\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Sorry,\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"this server is currently out of stock.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"serverLandingPageCardSoldOutBlurDivBottom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this);\n      }\n\n      return null;\n    };\n\n    console.log(\"PRODUCT INFO: \", store.getState());\n    const element_array = [];\n    Object.keys(store.getState().productInfo).forEach(element => {\n      element_array.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isSoldOut(element.toUpperCase()) !== null ? \"minecraftCards\" + \" \" + element + \" \" + \"serverLandingPageCardSoldOutTemplate\" : \"minecraftCards\" + \" \" + element,\n        onClick: () => setisCardPressed(element),\n        children: [isSoldOut(element.toUpperCase()), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titleContainer\" + \" \" + `${element.toLowerCase()}TitleContainer`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"priceContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u20AC\", store.getState().productInfo[element].price, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"priceMonth\",\n              children: \"/ month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 78\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"specsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cpuSpec\",\n            children: \"CPU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"memSpec\",\n            children: \"MEMORY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cpuSpecValue\",\n            children: [store.getState().productInfo[element].cpu, \" cores\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"memSpecValue\",\n            children: [store.getState().productInfo[element].mem, \"gb\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seperationline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"The basic server is the perfect option for a small group of friends, works great for 3 players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this));\n    });\n    return element_array;\n  };\n\n  if (isCardPressed !== \"not pressed\") {\n    switch (isCardPressed) {\n      case \"test\":\n        return /*#__PURE__*/_jsxDEV(Elements, {\n          stripe: stripeLoad,\n          children: /*#__PURE__*/_jsxDEV(MinecraftLevels, {\n            level: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this);\n\n      case \"basic\":\n        return /*#__PURE__*/_jsxDEV(Elements, {\n          stripe: stripeLoad,\n          children: /*#__PURE__*/_jsxDEV(MinecraftLevels, {\n            level: \"basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this);\n\n      case \"normal\":\n        return /*#__PURE__*/_jsxDEV(Elements, {\n          stripe: stripeLoad,\n          children: /*#__PURE__*/_jsxDEV(MinecraftLevels, {\n            level: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this);\n\n      case \"premium\":\n        return /*#__PURE__*/_jsxDEV(Elements, {\n          stripe: stripeLoad,\n          children: /*#__PURE__*/_jsxDEV(MinecraftLevels, {\n            level: \"premium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this);\n\n      default:\n        //window.location.reload();\n        break;\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minecraftBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Choose your Minecraft Server!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: landingPageFunc()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(MinecraftCreate, \"MuwBvO05Y9piJE113GKA8L1JgsM=\", true);\n\n_c = MinecraftCreate;\nexport default MinecraftCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MinecraftCreate\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraft.jsx"],"names":["useState","useEffect","loadStripe","Elements","MinecraftLevels","store","availableServerTeirs","usehistory","MinecraftCreate","history","useHistory","isCardPressed","setisCardPressed","localStorage","getItem","setItem","dispatch","update","setUpdate","subscribe","console","log","getState","user","push","window","location","reload","i","past_servers","querySelectors","_id","server_id","plan","toLowerCase","PUBLIC_KEY","stripeLoad","landingPageFunc","isSoldOut","selectedTeir","result","Object","keys","forEach","teir","toUpperCase","value","element_array","productInfo","element","price","cpu","mem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\"\n\nimport MinecraftLevels from \"./minecraftLevels\"\nimport store from \"../../../store\";\nimport { availableServerTeirs } from \"../../../redux/actions\"\nimport { usehistory } from \"history\";\n\nconst MinecraftCreate = () => {\n\n    history = useHistory()\n\n    //const [isCardPressed, setisCardPressed] = useState(\"not pressed\")\n    const [isCardPressed, setisCardPressed] = useState(() => {\n        if (localStorage.getItem(\"isCardPressed\")) return localStorage.getItem(\"isCardPressed\")\n        return \"not pressed\"\n    })\n\n    useEffect(() => {\n        localStorage.setItem(\"isCardPressed\", isCardPressed)\n    }, [isCardPressed])\n\n    useEffect(async () => {\n        await store.dispatch(availableServerTeirs)\n    }, [])\n\n    const [update, setUpdate] = useState(false)\n\n    store.subscribe(() => {\n        setUpdate(!update)\n    })\n\n    useEffect(() => { // effect for handling users with an \"_id\" queryparam, this is for renewing past servers\n        console.log(\"look at mee!\")\n\n        // check if user is logged in\n        if (store.getState().user === \"default\") { history.push(\"/\"), window.location.reload() }\n\n        for (let i = 0; i > store.getState().user.past_servers; i++) {\n            console.log(\"HEHEHEHEHEH\")\n            if (store.getState().querySelectors?._id === store.getState().user.past_servers[i].server_id) return setisCardPressed(store.getState().user.past_servers[i].plan.toLowerCase())\n        }\n    }, [update])\n\n    // ----------- stripe -------------\n\n    const PUBLIC_KEY = \"pk_test_51JCk7wGWd5hOwkfP4Q7UpN498uJW5oa2q7vb97viqghzRSpqilFLqtCB161iX4LOg68mkwqwHaptGyl0rgaB5NSf0080vAPRe9\"\n\n    const stripeLoad = loadStripe(PUBLIC_KEY)\n\n    //---------------------------------\n\n    const landingPageFunc = () => {\n        // element for sold out layout. To use, add this func at the start of the element\n        // also add the className \"serverLandingPageCardSoldOutTemplate\" to the parent element\n\n        // in future make this automatic, add value in db then extract value and based on that\n        // update the parent ele class and insert this func to the element (future work)\n\n        const isSoldOut = (selectedTeir) => {\n            let result = false\n            if (store.getState().availableServerTeirs === null) return null\n            Object.keys(store.getState().availableServerTeirs).forEach((teir) => {\n                if (teir.toUpperCase() === selectedTeir && !store.getState().availableServerTeirs[teir].value) {\n                    result = true\n                }\n            })\n\n            if (result) {\n                //console.log(\"CLASSNAME: \", document.getElementsByClassName(selectedTeir.toLowerCase()))\n                return (\n                    <div className=\"serverLandingPageCardSoldOutDiv\">\n                        <div className=\"serverLandingPageCardSoldOutBlurDivTop\" />\n                        <div className=\"serverLandingPageCardSoldOutMiddleDiv\">\n                            <div className=\"serverLandingPageCardSoldOutMiddleDivInner\">\n                                <span>Sorry,</span>\n                                <span>this server is currently out of stock.</span>\n                            </div>\n                        </div>\n                        <div className=\"serverLandingPageCardSoldOutBlurDivBottom\" />\n                    </div>\n                )\n            }\n            return null\n        }\n\n        console.log(\"PRODUCT INFO: \", store.getState())\n        const element_array = []\n        Object.keys(store.getState().productInfo).forEach(element => {\n            element_array.push(\n                <div className={(isSoldOut(element.toUpperCase()) !== null) ? \"minecraftCards\" + \" \" + element + \" \" + \"serverLandingPageCardSoldOutTemplate\" : \"minecraftCards\" + \" \" + element} onClick={() => setisCardPressed(element)}>\n                    {isSoldOut(element.toUpperCase())}\n                    <div className={\"titleContainer\" + \" \" + `${element.toLowerCase()}TitleContainer`}>\n                        <span>{element.toUpperCase()}</span>\n                    </div>\n                    <div className=\"priceContainer\">\n                        <span>€{store.getState().productInfo[element].price} <span className=\"priceMonth\">/ month</span></span>\n                    </div>\n                    <div className=\"specsContainer\">\n                        <span className=\"cpuSpec\">CPU</span>\n                        <span className=\"memSpec\">MEMORY</span>\n                        <span className=\"cpuSpecValue\">{store.getState().productInfo[element].cpu} cores</span>\n                        <span className=\"memSpecValue\">{store.getState().productInfo[element].mem}gb</span>\n                    </div>\n                    <div className=\"seperationline\" />\n                    <div className=\"description\"> {/* NEED TO CHANGE THIS TO THE BD AND EXTRACT DATA FROM THERE*/}\n                        <span>The basic server is the perfect option for a small group of friends, works great for 3 players</span>\n                    </div>\n                </div>\n            )\n        })\n        return element_array\n    }\n\n    if (isCardPressed !== \"not pressed\") {\n        switch (isCardPressed) {\n            case \"test\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"test\" />\n                    </Elements>\n                )\n            case \"basic\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"basic\" />\n                    </Elements>)\n            case \"normal\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"normal\" />\n                    </Elements>)\n            case \"premium\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"premium\" />\n                    </Elements>)\n            default:\n                //window.location.reload();\n                break;\n        }\n    } else {\n        return (\n            <div className=\"minecraftBody\">\n                <span>Choose your Minecraft Server!</span>\n                <div className=\"container\">\n                    {landingPageFunc()}\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default MinecraftCreate;\n"]},"metadata":{},"sourceType":"module"}