{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useStore } from \"react-redux\";\nimport { useState } from \"react\";\n\nconst PlayTimeComponent = () => {\n  _s();\n\n  const store = useStore();\n  const [userData, setUserData] = useState(store.getState());\n  store.subscribe(() => {\n    setUserData(store.getState());\n  });\n\n  const refreshPlayTimeFunc = () => {\n    // cheking if server is running\n    if (userData.serverPods.status === \"server not running\") {\n      store.dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: \"Server is not running, start server to reset time!\"\n      });\n    } else {\n      store.dispatch({\n        type: \"MESSAGE\",\n        payload: \"Resetting play time! (may take up to 5 sec to update)\"\n      });\n      setPlayTimeReset(true);\n    }\n  };\n};\n\n_s(PlayTimeComponent, \"eFW9BJtZu+NjadMgwFzGB8dKwIs=\", false, function () {\n  return [useStore];\n});\n\n_c = PlayTimeComponent;\nexport default PlayTimeComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayTimeComponent\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/userHome/server/playTime.jsx"],"names":["useStore","useState","PlayTimeComponent","store","userData","setUserData","getState","subscribe","refreshPlayTimeFunc","serverPods","status","dispatch","type","payload","setPlayTimeReset"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE5B,QAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAACE,KAAK,CAACG,QAAN,EAAD,CAAxC;AAEAH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AAClBF,IAAAA,WAAW,CAACF,KAAK,CAACG,QAAN,EAAD,CAAX;AACH,GAFD;;AAIA,QAAME,mBAAmB,GAAG,MAAM;AAC9B;AACA,QAAIJ,QAAQ,CAACK,UAAT,CAAoBC,MAApB,KAA+B,oBAAnC,EAAyD;AACrDP,MAAAA,KAAK,CAACQ,QAAN,CAAe;AACXC,QAAAA,IAAI,EAAE,aADK;AAEXC,QAAAA,OAAO,EAAE;AAFE,OAAf;AAIH,KALD,MAKO;AACHV,MAAAA,KAAK,CAACQ,QAAN,CAAe;AACXC,QAAAA,IAAI,EAAE,SADK;AAEXC,QAAAA,OAAO,EAAE;AAFE,OAAf;AAIAC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ,GAdD;AAkBH,CA3BD;;GAAMZ,iB;UAEYF,Q;;;KAFZE,iB;AA6BN,eAAeA,iBAAf","sourcesContent":["import { useStore } from \"react-redux\"\nimport { useState } from \"react\"\n\nconst PlayTimeComponent = () => {\n\n    const store = useStore()\n    const [userData, setUserData] = useState(store.getState())\n\n    store.subscribe(() => {\n        setUserData(store.getState())\n    })\n\n    const refreshPlayTimeFunc = () => {\n        // cheking if server is running\n        if (userData.serverPods.status === \"server not running\") {\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: \"Server is not running, start server to reset time!\"\n            })\n        } else {\n            store.dispatch({\n                type: \"MESSAGE\",\n                payload: \"Resetting play time! (may take up to 5 sec to update)\"\n            })\n            setPlayTimeReset(true)\n        }\n    }\n\n\n\n}\n\nexport default PlayTimeComponent"]},"metadata":{},"sourceType":"module"}