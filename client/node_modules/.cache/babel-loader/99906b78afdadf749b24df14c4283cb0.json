{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\main_project\\\\client\\\\src\\\\components\\\\userHome\\\\server\\\\logsComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useStore } from \"react-redux\";\nimport ReactTooltip from 'react-tooltip';\nimport refreshData from \"./refreshData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LogsComponent = () => {\n  _s();\n\n  const store = useStore();\n  const [userData, setUserData] = useState(store.getState());\n  const [logsExpand, setLogsExpand] = useState(false);\n  store.subscribe(() => {\n    setUserData(store.getState());\n  });\n  useEffect(() => {\n    // logic for logs interaction\n    // making sure the interaction logic on fire when logs is active\n    if (userData.serverPods.status === \"True\") {\n      const ele = document.getElementById('logsText');\n      ele.style.cursor = 'grab';\n      ele.scrollTop = ele.scrollHeight;\n      let pos = {\n        top: 0,\n        left: 0,\n        x: 0,\n        y: 0\n      };\n\n      const mouseDownHandler = function (e) {\n        ele.style.cursor = 'grabbing';\n        ele.style.userSelect = 'none';\n        pos = {\n          left: ele.scrollLeft,\n          top: ele.scrollTop,\n          // Get the current mouse position\n          x: e.clientX,\n          y: e.clientY\n        };\n        document.addEventListener('mousemove', mouseMoveHandler);\n        document.addEventListener('mouseup', mouseUpHandler);\n      };\n\n      const mouseMoveHandler = function (e) {\n        // How far the mouse has been moved\n        const dx = e.clientX - pos.x;\n        const dy = e.clientY - pos.y; // Scroll the element\n\n        ele.scrollTop = pos.top - dy;\n        ele.scrollLeft = pos.left - dx;\n      };\n\n      const mouseUpHandler = function () {\n        ele.style.cursor = 'grab';\n        ele.style.removeProperty('user-select');\n        document.removeEventListener('mousemove', mouseMoveHandler);\n        document.removeEventListener('mouseup', mouseUpHandler);\n      }; // Attach the handler\n\n\n      ele.addEventListener('mousedown', mouseDownHandler);\n    }\n  }, [userData]);\n\n  const expandLogs = () => {\n    setLogsExpand(!logsExpand);\n    console.log(\"This is the logsExpand function; \", logsExpand);\n  };\n\n  const refreshDataFunc = e => {\n    refreshData(e, store, userData);\n  }; // ------------- functions for different pods status (default messages) -----------\n\n\n  const running = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: logsExpand ? \"logsMainContainer logsMainContainerHover logsMainContainerExpanded userHomeSegment\" : \"logsMainContainer logsMainContainerHover userHomeSegment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsExpandArrow fas fa-expand-arrows-alt\",\n          onClick: expandLogs,\n          \"data-tip\": true,\n          \"data-for\": \"expandLogs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsText\",\n          id: \"logsText\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [userData.serverPods.logs, /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsTextContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: refreshDataFunc,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkStatus fas fa-sync\",\n              \"data-tip\": true,\n              \"data-for\": \"refreshInfo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"refreshInfo\",\n        place: \"bottom\",\n        delayShow: 100,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to refresh logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"expandLogs\",\n        place: \"bottom\",\n        delayShow: 100,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to expand/minimize logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const logsMessageBoiler = e => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logsMainContainer userHomeSegment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsMessageContainer\",\n          children: [e === \"shuttingDown\" ? /*#__PURE__*/_jsxDEV(ShuttingDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 49\n          }, this) : null, e === \"startingUp\" ? /*#__PURE__*/_jsxDEV(StartingUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 47\n          }, this) : null, e === \"queue\" ? /*#__PURE__*/_jsxDEV(Queue, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 42\n          }, this) : null, e === \"notRunning\" ? /*#__PURE__*/_jsxDEV(NotRunning, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 47\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsTextContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  const ShuttingDown = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerYellow\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Server shutting down!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  };\n\n  const StartingUp = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerYellow\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Server starting up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  };\n\n  const Queue = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerYellow\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: userData.serverPods.logs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  };\n\n  const NotRunning = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerRed\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Server not running!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }; // ---------------------------------------------------------------------\n  // what is displayed in the logs box\n\n\n  switch (userData.serverPods.status) {\n    case \"True\":\n      return running();\n\n    case \"False\":\n      return logsMessageBoiler(\"shuttingDown\");\n\n    case \"Pending\":\n      return logsMessageBoiler(\"startingUp\");\n\n    case \"Queuing\":\n      return logsMessageBoiler(\"queue\");\n\n    case \"server not running\":\n      return logsMessageBoiler(\"notRunning\");\n\n    default:\n      return running();\n  }\n};\n\n_s(LogsComponent, \"6jAWst8SA/otgsBalhzmdQOa68A=\", false, function () {\n  return [useStore];\n});\n\n_c = LogsComponent;\nexport default LogsComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogsComponent\");","map":{"version":3,"sources":["D:/programing/main_project/client/src/components/userHome/server/logsComponent.jsx"],"names":["useState","useEffect","useStore","ReactTooltip","refreshData","LogsComponent","store","userData","setUserData","getState","logsExpand","setLogsExpand","subscribe","serverPods","status","ele","document","getElementById","style","cursor","scrollTop","scrollHeight","pos","top","left","x","y","mouseDownHandler","e","userSelect","scrollLeft","clientX","clientY","addEventListener","mouseMoveHandler","mouseUpHandler","dx","dy","removeProperty","removeEventListener","expandLogs","console","log","refreshDataFunc","running","logs","logsMessageBoiler","ShuttingDown","StartingUp","Queue","NotRunning"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useStore } from \"react-redux\"\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport refreshData from \"./refreshData\"\r\n\r\nconst LogsComponent = () => {\r\n    const store = useStore()\r\n    const [userData, setUserData] = useState(store.getState())\r\n    const [logsExpand, setLogsExpand] = useState(false)\r\n\r\n    store.subscribe(() => {\r\n        setUserData(store.getState());\r\n    });\r\n\r\n    useEffect(() => {\r\n        // logic for logs interaction\r\n        // making sure the interaction logic on fire when logs is active\r\n        if (userData.serverPods.status === \"True\") {\r\n            const ele = document.getElementById('logsText');\r\n\r\n            ele.style.cursor = 'grab';\r\n            ele.scrollTop = ele.scrollHeight;\r\n\r\n            let pos = { top: 0, left: 0, x: 0, y: 0 };\r\n\r\n            const mouseDownHandler = function (e) {\r\n                ele.style.cursor = 'grabbing';\r\n                ele.style.userSelect = 'none';\r\n\r\n                pos = {\r\n                    left: ele.scrollLeft,\r\n                    top: ele.scrollTop,\r\n                    // Get the current mouse position\r\n                    x: e.clientX,\r\n                    y: e.clientY,\r\n                };\r\n\r\n                document.addEventListener('mousemove', mouseMoveHandler);\r\n                document.addEventListener('mouseup', mouseUpHandler);\r\n            };\r\n\r\n            const mouseMoveHandler = function (e) {\r\n                // How far the mouse has been moved\r\n                const dx = e.clientX - pos.x;\r\n                const dy = e.clientY - pos.y;\r\n\r\n                // Scroll the element\r\n                ele.scrollTop = pos.top - dy;\r\n                ele.scrollLeft = pos.left - dx;\r\n            };\r\n\r\n            const mouseUpHandler = function () {\r\n                ele.style.cursor = 'grab';\r\n                ele.style.removeProperty('user-select');\r\n\r\n                document.removeEventListener('mousemove', mouseMoveHandler);\r\n                document.removeEventListener('mouseup', mouseUpHandler);\r\n            };\r\n\r\n            // Attach the handler\r\n            ele.addEventListener('mousedown', mouseDownHandler);\r\n        }\r\n    }, [userData]);\r\n\r\n    const expandLogs = () => {\r\n        setLogsExpand(!logsExpand)\r\n        console.log(\"This is the logsExpand function; \", logsExpand)\r\n    }\r\n\r\n    const refreshDataFunc = (e) => {\r\n        refreshData(e, store, userData)\r\n    }\r\n\r\n    // ------------- functions for different pods status (default messages) -----------\r\n\r\n\r\n    const running = () => {\r\n        return (\r\n            <>\r\n                <div className={logsExpand ? \"logsMainContainer logsMainContainerHover logsMainContainerExpanded userHomeSegment\" : \"logsMainContainer logsMainContainerHover userHomeSegment\"}>\r\n                    <div className=\"logsExpandArrow fas fa-expand-arrows-alt\" onClick={expandLogs} data-tip data-for=\"expandLogs\" />\r\n                    <div className=\"logsText\" id=\"logsText\">\r\n                        <span>\r\n                            {userData.serverPods.logs}\r\n                            <p></p>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"logsTextContainer\">\r\n                        <span>Logs</span>\r\n                        <div onClick={refreshDataFunc}>\r\n                            <div className=\"checkStatus fas fa-sync\" data-tip data-for=\"refreshInfo\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ReactTooltip id=\"refreshInfo\" place=\"bottom\" delayShow={100}>\r\n                    <p>Click to refresh logs</p>\r\n                </ReactTooltip>\r\n                <ReactTooltip id=\"expandLogs\" place=\"bottom\" delayShow={100}>\r\n                    <p>Click to expand/minimize logs</p>\r\n                </ReactTooltip>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const logsMessageBoiler = (e) => {\r\n        return (\r\n            <>\r\n                <div className=\"logsMainContainer userHomeSegment\">\r\n\r\n                    <div className=\"logsMessageContainer\">\r\n                        {e === \"shuttingDown\" ? <ShuttingDown /> : null}\r\n                        {e === \"startingUp\" ? <StartingUp /> : null}\r\n                        {e === \"queue\" ? <Queue /> : null}\r\n                        {e === \"notRunning\" ? <NotRunning /> : null}\r\n                    </div>\r\n                    <div className=\"logsTextContainer\">\r\n                        <span>Logs</span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const ShuttingDown = () => {\r\n        return (\r\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\r\n                <span>Server shutting down!</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const StartingUp = () => {\r\n        return (\r\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\r\n                <span>Server starting up!</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Queue = () => {\r\n        return (\r\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\r\n                <span>{userData.serverPods.logs}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const NotRunning = () => {\r\n        return (\r\n            <div className=\"logsMessageBanner logsMessageBannerRed\">\r\n                <span>Server not running!</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // ---------------------------------------------------------------------\r\n\r\n    // what is displayed in the logs box\r\n    switch (userData.serverPods.status) {\r\n        case \"True\":\r\n            return running()\r\n        case \"False\":\r\n            return logsMessageBoiler(\"shuttingDown\")\r\n        case \"Pending\":\r\n            return logsMessageBoiler(\"startingUp\")\r\n        case \"Queuing\":\r\n            return logsMessageBoiler(\"queue\")\r\n        case \"server not running\":\r\n            return logsMessageBoiler(\"notRunning\")\r\n        default:\r\n            return running()\r\n    }\r\n}\r\n\r\nexport default LogsComponent"]},"metadata":{},"sourceType":"module"}