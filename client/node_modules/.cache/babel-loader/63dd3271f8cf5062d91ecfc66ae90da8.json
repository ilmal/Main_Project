{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst ChangeServerConfig = () => {\n  _s();\n\n  // stateful settings\n  const [change, setChange] = useState(false);\n  const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"]);\n  const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"]);\n\n  const toggle = () => {\n    setChange(prev => !prev);\n  }; //data for Difficulty and Versions\n\n\n  const versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\", \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\", \"1.12.2\", \"1.12.1\", \"1.12\"];\n  let versionBoiler = versions.map(d => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, d, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  });\n  const difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"];\n  const difficultiesBoiler = difficulties.map(d => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, d, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }); //data for Whitelist\n\n  const changeWhite = data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (whitelist.includes(data.target.value)) {\n          throw \"name already given\";\n        }\n\n        setWhitelist(whitelist.concat(data.target.value));\n        data.target.value = \"\";\n        console.log(whitelist);\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const WhitelistList = () => {\n    return whitelist.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: e\n      }, e, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    });\n  }; //data for Ops\n\n\n  const changeOps = data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (opslist.includes(data.target.value)) {\n          throw \"name already given\";\n        }\n\n        setOpslist(opslist.concat(data.target.value));\n        data.target.value = \"\";\n        console.log(opslist);\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const OpslistList = () => {\n    return opslist.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: e\n      }, e, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const defaultFunc = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userHomeSegment userHomeChangeConfig\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"NilsServer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"1.16.4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"whitelist: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"ops: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"userHomeChangeBtn\",\n        onClick: toggle,\n        children: \"change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  };\n\n  const changeFunc = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"userHomeSegment userHomeChangeConfig\",\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"userHomeChangeServer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Server Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          children: versionBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Server Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          children: difficultiesBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Whitelists:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: changeWhite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ops:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OpslistList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: changeOps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"userHomeChangeBtn\",\n        onClick: toggle,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  };\n\n  switch (change) {\n    case true:\n      return changeFunc();\n\n    default:\n      return defaultFunc();\n  }\n};\n\n_s(ChangeServerConfig, \"QSdX9q0Hrtpdct8KMWOziqh6fdE=\");\n\n_c = ChangeServerConfig;\nexport default ChangeServerConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeServerConfig\");","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx"],"names":["React","useState","ChangeServerConfig","change","setChange","whitelist","setWhitelist","opslist","setOpslist","toggle","prev","versions","versionBoiler","map","d","difficulties","difficultiesBoiler","changeWhite","data","key","preventDefault","target","value","includes","concat","console","log","result","WhitelistList","e","changeOps","OpslistList","defaultFunc","changeFunc"],"mappings":"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","sourcesContent":["import React, {\n    useState\n} from \"react\"\n\nconst ChangeServerConfig = ()=>{\n\n    // stateful settings\n    const [change, setChange] = useState(false)\n    const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"])\n    const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"])\n\n    const toggle =()=>{\n        setChange((prev)=>!prev)\n    }\n\n    //data for Difficulty and Versions\n    const versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n        \"1.15\",\"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\",\"1.14\",\"1.13.2\",\"1.13.1\", \"1.13\", \n        \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    let versionBoiler = versions.map((d)=>{\n        return <option value={ d } key={ d }>{ d }</option>\n    })\n\n    const difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n    const difficultiesBoiler = difficulties.map((d)=>{\n        return <option value={ d } key={ d }>{ d }</option>\n    })\n\n    //data for Whitelist\n    const changeWhite = data =>{\n        if(data.key === \"Enter\"){\n            data.preventDefault()\n            try {\n                if(data.target.value === \"\"){\n                    throw \"empty value\"\n                }\n                if(whitelist.includes(data.target.value)){\n                    throw \"name already given\"\n                }\n                setWhitelist(whitelist.concat(data.target.value))\n                data.target.value = \"\"\n                console.log(whitelist)\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }   \n\n    const WhitelistList = ()=>{\n        return whitelist.map((e)=>{\n            return <span key={e}>{e}</span>\n        })\n    }\n\n    //data for Ops\n    const changeOps = data =>{\n        if(data.key === \"Enter\"){\n            data.preventDefault()\n            try {\n                if(data.target.value === \"\"){\n                    throw \"empty value\"\n                }\n                if(opslist.includes(data.target.value)){\n                    throw \"name already given\"\n                }\n                setOpslist(opslist.concat(data.target.value))\n                data.target.value = \"\"\n                console.log(opslist)\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }   \n\n    const OpslistList = ()=>{\n        return opslist.map((e)=>{\n            return <span key={e}>{e}</span>\n        })\n    }\n\n    const defaultFunc = ()=>{   \n        return(\n            <div className=\"userHomeSegment userHomeChangeConfig\">\n                    <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                        <h4>Server Name: </h4>\n                        <span>NilsServer</span>\n                    </div>\n                    <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                        <h4>Version: </h4>\n                        <span>1.16.4</span>\n                    </div>\n                    <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                        <h4>Difficulty: </h4>\n                        <span>Hard</span>\n                    </div>\n                    <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                        <h4>whitelist: </h4>\n                        <span><WhitelistList/></span>\n                    </div>\n                    <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                        <h4>ops: </h4>\n                        <span><WhitelistList/></span>\n                    </div>\n                    <button className=\"userHomeChangeBtn\" onClick={ toggle }>change</button>\n            </div>\n        );\n\n    }\n\n    const changeFunc = ()=>{\n        return(\n            <form className=\"userHomeSegment userHomeChangeConfig\" onSubmit={e => { e.preventDefault(); }}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <span>Server Name: </span>\n                    <input type=\"text\" className=\"userHomeChangeServer\"/>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <span>Server Version: </span>\n                    <select name=\"\" id=\"\">\n                        {versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <span>Server Difficulty: </span>\n                    <select name=\"\" id=\"\">\n                        {difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <h3>Whitelists:</h3>\n                    <WhitelistList/>\n                    <input type=\"text\" onKeyPress={ changeWhite }/>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                <h3>Ops:</h3>\n                    <OpslistList/>\n                    <input type=\"text\" onKeyPress={ changeOps }/>\n                </div>\n                <button className=\"userHomeChangeBtn\" onClick={ toggle }>save</button>\n            </form>\n        );\n    }\n\n    switch(change){\n        case true: \n            return changeFunc()\n        default:\n            return defaultFunc()\n    }\n}\n\nexport default ChangeServerConfig"]},"metadata":{},"sourceType":"module"}