{"ast":null,"code":"import axios from \"axios\";\nimport loadBaseData from \"../../components/loadBaseData\";\nimport store from \"../../store\";\nlet cookieValueUserID = null;\n\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n  cookieValueUserID = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n}\n\nlet cookieValueAuth = null;\n\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n  cookieValueAuth = document.cookie.split('; ').find(row => row.startsWith('loginAuth=')).split('=')[1];\n} // ------------------------------------------------------------------- THIS BELOW IS CURRENTLY NEEDING FIXING --------------------------------\n\n\nlet currentServerIndex = 0;\n\nconst updateCurrentServerIndex = () => {// if (document.cookie && document.cookie.search(\"selectedServer\") > -1) {\n  //     currentServerIndex = document.cookie\n  //         .split('; ')\n  //         .find(row => row.startsWith('selectedServer='))\n  //         .split('=')[1];\n  // }\n}; // if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id) currentServerID = store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id\n//setting ip_address to nothing if else isn't specified\n\n\nlet ip_address = \"\";\n\nif (process.env.REACT_APP_BACKENDPROXY !== undefined) {\n  ip_address = process.env.REACT_APP_BACKENDPROXY;\n}\n\nexport const fetchUserData = async dispatch => {\n  if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at fetchUserData\");\n  await axios.post(`${ip_address}/user`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"FETCH_USER_SUCCESS\",\n      payload: res.data\n    });\n  });\n};\nexport const login = (name, pass, dispatch) => {\n  axios.post(`${ip_address}/user/login`, {\n    withCredentials: true,\n    name: name.toLowerCase(),\n    password: pass\n  }).then(async response => {\n    if (response.data.message === \"Success!\") {\n      await checkUserAuth(dispatch);\n      createMcConfig(dispatch);\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          loginAuth: response.data.loginAuth,\n          userID: response.data.userID\n        }\n      });\n      await loadBaseData();\n      window.location.reload();\n    } else {\n      console.log(\"response.data: \", response.data);\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const signup = async (name, email, password, dispatch) => {\n  console.log(\"sending req to signup\");\n  axios.post(`${ip_address}/user/insert`, {\n    data: {\n      name: name.toLowerCase(),\n      email: email.toLowerCase(),\n      password\n    }\n  }).then(async response => {\n    console.log(\"response from signup\");\n\n    if (response.data === \"User created\") {\n      login(name, password, dispatch);\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const checkUserAuth = async dispatch => {\n  await axios.get(`${ip_address}/user/auth`, {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": cookieValueAuth,\n      \"Id\": cookieValueUserID\n    }\n  }).then(response => {\n    dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: response.data\n    });\n  });\n};\nexport const authSucess = dispatch => {\n  dispatch({\n    type: \"AUTH_SUCCESS\"\n  });\n};\nexport const createMcConfig = async dispatch => {\n  if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at createMcConfig\");\n  await axios.post(`${ip_address}/mcConf/create`, {\n    id: cookieValueUserID\n  }).then(res => {//console.log(\"createMcConf Server response: \", res)\n  });\n};\nexport const StartServer = async () => {\n  updateCurrentServerIndex();\n  await axios.post(`${ip_address}/server`, {\n    id: store.getState().user.servers[currentServerIndex].server_id,\n    action: \"start\"\n  }).then(res => {\n    console.log(\"StartServer Server response: \", res);\n  });\n};\n_c = StartServer;\nexport const StopServer = async () => {\n  updateCurrentServerIndex();\n  await axios.post(`${ip_address}/server`, {\n    id: store.getState().user.servers[currentServerIndex].server_id,\n    action: \"stop\"\n  }).then(res => {\n    console.log(\"StopServer Server response: \", res);\n  });\n};\n_c2 = StopServer;\nexport const serverPodsInfo = async () => {\n  if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at server pods info\");\n  updateCurrentServerIndex(); // console.log(\"serverPodsInfo call: \", store.getState().user.servers[currentServerIndex].server_id, \" - \", currentServerIndex)\n\n  await axios.post(`${ip_address}/k8s/pods`, {\n    id: store.getState().user.servers[currentServerIndex].server_id\n  }).then(res => {\n    var _store$getState, _store$getState$serve, _res$data;\n\n    if (((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$serve = _store$getState.serverPods) === null || _store$getState$serve === void 0 ? void 0 : _store$getState$serve.status) === ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.status)) return;\n    store.dispatch({\n      type: \"SERVER_PODS_DATA\",\n      payload: res.data,\n      currentServerIndex\n    });\n  });\n};\nexport const serverLogsOnly = async () => {\n  if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at server pods info\");\n  updateCurrentServerIndex();\n  let logs = null;\n  await axios.post(`${ip_address}/k8s/pods`, {\n    id: store.getState().user.servers[currentServerIndex].server_id\n  }).then(res => {\n    var _store$getState2, _store$getState2$serv, _res$data2;\n\n    if (((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$serv = _store$getState2.serverPods) === null || _store$getState2$serv === void 0 ? void 0 : _store$getState2$serv.logs) === ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.logs)) return \"logs2\";\n    logs = res.data.logs;\n    console.log(\"LOGS: \", res.data.logs);\n  });\n  return \"logs\";\n};\nexport const serverSVCInfo = async dispatch => {\n  if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at serverSVCinfo\");\n  updateCurrentServerIndex();\n  await axios.post(`${ip_address}/k8s/svc`, {\n    id: store.getState().user.servers[currentServerIndex].server_id\n  }).then(res => {\n    dispatch({\n      type: \"SERVER_SVC_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverTimeInfo = async (dispatch, reset, timeOfReset) => {\n  if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN  at serverTimeInfo\");\n  updateCurrentServerIndex();\n  await axios.post(`${ip_address}/k8s/time`, {\n    id: store.getState().user.servers[currentServerIndex].server_id,\n    reset,\n    timeOfReset\n  }).then(res => {\n    if (res.data.err) {\n      console.error(\"err occured at response from k8s/time see (actions index)\", res.data.err);\n    } else {\n      dispatch({\n        type: \"SERVER_TIME_DATA\",\n        payload: res.data\n      });\n    }\n  });\n};\nexport const serverInfo = async dispatch => {\n  if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN AT SERVER INFO\");\n  await axios.post(`${ip_address}/mcConf/getData`, {\n    id: cookieValueUserID\n  }).then(res => {\n    console.log(\"SERVER_INFO DATA: \", res.data);\n    dispatch({\n      type: \"SERVER_INFO\",\n      payload: res.data\n    });\n  });\n};\nexport const serverDataRefresh = async () => {\n  await store.dispatch(serverPodsInfo);\n  await store.dispatch(serverSVCInfo);\n};\nexport const confirmation = async () => {// function never called, see code /components/confirmation/index.jsx, reason is history() method. Fix when time.\n};\nexport const changePass = async () => {// function never called, see code /components/changePass/index.jsx, reason is history() method. Fix when time.\n};\nexport const changePassUserHomeOptions = async (id, oldPassword, newPassword) => {\n  await axios.post(`${ip_address}/user/changepass`, {\n    id,\n    oldPassword,\n    newPassword\n  }).then(res => {\n    if (res.data.type === \"success\") {\n      store.dispatch({\n        type: \"MESSAGE\",\n        payload: res.data.payload\n      });\n    } else if (res.data.type === \"err\") {\n      store.dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: res.data.payload\n      });\n    }\n  });\n};\nexport const resendConfirmationMail = async dispatch => {\n  await axios.post(`${ip_address}/user/resendconfirmationmail`, {\n    id: cookieValueUserID\n  }).then(response => {\n    if (response.data.type === \"err\") {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data.payload\n      });\n    } else {\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data.payload\n      });\n    }\n  });\n};\nexport const updatePassMail = async (dispatch, email) => {\n  await axios.post(`${ip_address}/user/updatepass`, {\n    email\n  }).then(response => {\n    if (response.data.type === \"err\") {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data.payload\n      });\n    } else {\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data.payload\n      });\n    }\n  });\n};\nexport const getQuaryParams = dispatch => {\n  const urlSearchParams = new URLSearchParams(document.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n  dispatch({\n    type: \"QUARY_SELECTOR\",\n    payload: params\n  });\n};\nexport const getCookies = dispatch => {\n  const cookieObject = {};\n  const cookieString = document.cookie;\n  const cookieArray = cookieString.split(\";\");\n  cookieArray.forEach(element => {\n    const elementArray = element.split(\"=\");\n\n    if (elementArray[0].charAt(0) === \" \") {\n      elementArray[0] = elementArray[0].slice(1);\n    }\n\n    cookieObject[elementArray[0]] = elementArray[1];\n  });\n  dispatch({\n    type: \"SET_COOKIES\",\n    payload: cookieObject\n  });\n};\nexport const productInfo = async dispatch => {\n  await axios.post(`${ip_address}/productInfo`, {\n    game: \"minecraft\",\n    plan: \"normal\"\n  }).then(response => {\n    dispatch({\n      type: \"PRODUCT_INFO\",\n      payload: response.data\n    });\n  });\n};\nexport const availableServerTeirs = async dispatch => {\n  await axios.post(`${ip_address}/customAPI/availableServerTeirs`).then(response => {\n    dispatch({\n      type: \"AVAILABLE_SERVER_TEIRS\",\n      payload: response.data\n    });\n  });\n}; // db.createUser(\n//     {\n//         user: \"nils\",\n//         pwd: \"pass123\",\n//         roles: [\"root\"]\n//     })\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StartServer\");\n$RefreshReg$(_c2, \"StopServer\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/redux/actions/index.jsx"],"names":["axios","loadBaseData","store","cookieValueUserID","document","cookie","search","split","find","row","startsWith","cookieValueAuth","currentServerIndex","updateCurrentServerIndex","ip_address","process","env","REACT_APP_BACKENDPROXY","undefined","fetchUserData","dispatch","getState","cookies","userID","console","log","post","id","then","res","type","payload","data","login","name","pass","withCredentials","toLowerCase","password","response","message","checkUserAuth","createMcConfig","loginAuth","window","location","reload","signup","email","get","headers","authSucess","StartServer","user","servers","server_id","action","StopServer","serverPodsInfo","serverPods","status","serverLogsOnly","logs","serverSVCInfo","serverTimeInfo","reset","timeOfReset","err","error","serverInfo","serverDataRefresh","confirmation","changePass","changePassUserHomeOptions","oldPassword","newPassword","resendConfirmationMail","updatePassMail","getQuaryParams","urlSearchParams","URLSearchParams","params","Object","fromEntries","entries","getCookies","cookieObject","cookieString","cookieArray","forEach","element","elementArray","charAt","slice","productInfo","game","plan","availableServerTeirs"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAIC,iBAAiB,GAAG,IAAxB;;AACA,IAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,CAAgBC,MAAhB,CAAuB,QAAvB,IAAmC,CAAC,CAA3D,EAA8D;AAC1DH,EAAAA,iBAAiB,GAAGC,QAAQ,CAACC,MAAT,CACfE,KADe,CACT,IADS,EAEfC,IAFe,CAEVC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAe,SAAf,CAFG,EAGfH,KAHe,CAGT,GAHS,EAGJ,CAHI,CAApB;AAIH;;AAED,IAAII,eAAe,GAAG,IAAtB;;AACA,IAAIP,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,CAAgBC,MAAhB,CAAuB,WAAvB,IAAsC,CAAC,CAA9D,EAAiE;AAC7DK,EAAAA,eAAe,GAAGP,QAAQ,CAACC,MAAT,CACbE,KADa,CACP,IADO,EAEbC,IAFa,CAERC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAe,YAAf,CAFC,EAGbH,KAHa,CAGP,GAHO,EAGF,CAHE,CAAlB;AAIH,C,CAED;;;AAEA,IAAIK,kBAAkB,GAAG,CAAzB;;AACA,MAAMC,wBAAwB,GAAG,MAAM,CACnC;AACA;AACA;AACA;AACA;AACA;AACH,CAPD,C,CAQA;AAGA;;;AACA,IAAIC,UAAU,GAAG,EAAjB;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,KAAuCC,SAA3C,EAAsD;AAClDJ,EAAAA,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAzB;AACH;;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,QAAP,IAAoB;AAC7C,MAAIlB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCL,SAApC,IAAiDhB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F,OAAOC,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAP;AAC7F,QAAMzB,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,OAAzB,EAAiC;AACnCa,IAAAA,EAAE,EAAExB;AAD+B,GAAjC,EAGDyB,IAHC,CAGIC,GAAG,IAAI;AACTT,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GARC,CAAN;AASH,CAXM;AAaP,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaf,QAAb,KAA0B;AAC3CpB,EAAAA,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,aAAzB,EAAuC;AACnCsB,IAAAA,eAAe,EAAE,IADkB;AAEnCF,IAAAA,IAAI,EAAEA,IAAI,CAACG,WAAL,EAF6B;AAGnCC,IAAAA,QAAQ,EAAEH;AAHyB,GAAvC,EAIGP,IAJH,CAIQ,MAAOW,QAAP,IAAoB;AACxB,QAAIA,QAAQ,CAACP,IAAT,CAAcQ,OAAd,KAA0B,UAA9B,EAA0C;AACtC,YAAMC,aAAa,CAACrB,QAAD,CAAnB;AACAsB,MAAAA,cAAc,CAACtB,QAAD,CAAd;AACAA,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,OADD;AAELC,QAAAA,OAAO,EAAE;AACLY,UAAAA,SAAS,EAAEJ,QAAQ,CAACP,IAAT,CAAcW,SADpB;AAELpB,UAAAA,MAAM,EAAEgB,QAAQ,CAACP,IAAT,CAAcT;AAFjB;AAFJ,OAAD,CAAR;AAOA,YAAMtB,YAAY,EAAlB;AACA2C,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KAZD,MAYO;AACHtB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bc,QAAQ,CAACP,IAAxC;AACAZ,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAEQ,QAAQ,CAACP;AAFb,OAAD,CAAR;AAIH;AACJ,GAxBD;AAyBH,CA1BM;AA4BP,OAAO,MAAMe,MAAM,GAAG,OAAOb,IAAP,EAAac,KAAb,EAAoBV,QAApB,EAA8BlB,QAA9B,KAA2C;AAC7DI,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAzB,EAAAA,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,cAAzB,EAAwC;AACpCkB,IAAAA,IAAI,EAAE;AACFE,MAAAA,IAAI,EAAEA,IAAI,CAACG,WAAL,EADJ;AAEFW,MAAAA,KAAK,EAAEA,KAAK,CAACX,WAAN,EAFL;AAGFC,MAAAA;AAHE;AAD8B,GAAxC,EAOKV,IAPL,CAOU,MAAOW,QAAP,IAAoB;AACtBf,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,QAAIc,QAAQ,CAACP,IAAT,KAAkB,cAAtB,EAAsC;AAClCC,MAAAA,KAAK,CAACC,IAAD,EAAOI,QAAP,EAAiBlB,QAAjB,CAAL;AACAA,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,OAAO,EAAEQ,QAAQ,CAACP;AAFb,OAAD,CAAR;AAIH,KAND,MAMO;AACHZ,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAEQ,QAAQ,CAACP;AAFb,OAAD,CAAR;AAIH;AACJ,GArBL;AAsBH,CAxBM;AA0BP,OAAO,MAAMS,aAAa,GAAG,MAAOrB,QAAP,IAAoB;AAC7C,QAAMpB,KAAK,CAACiD,GAAN,CAAW,GAAEnC,UAAW,YAAxB,EAAqC;AACvCsB,IAAAA,eAAe,EAAE,IADsB;AAEvCc,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGL,uBAAiBvC,eAHZ;AAIL,YAAMR;AAJD;AAF8B,GAArC,EASDyB,IATC,CASIW,QAAQ,IAAI;AACdnB,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAEQ,QAAQ,CAACP;AAFb,KAAD,CAAR;AAIH,GAdC,CAAN;AAeH,CAhBM;AAkBP,OAAO,MAAMmB,UAAU,GAAI/B,QAAD,IAAc;AACpCA,EAAAA,QAAQ,CAAC;AACLU,IAAAA,IAAI,EAAE;AADD,GAAD,CAAR;AAGH,CAJM;AAMP,OAAO,MAAMY,cAAc,GAAG,MAAOtB,QAAP,IAAoB;AAC9C,MAAIlB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCL,SAApC,IAAiDhB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F,OAAOC,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAAP;AAC7F,QAAMzB,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,gBAAzB,EAA0C;AAC5Ca,IAAAA,EAAE,EAAExB;AADwC,GAA1C,EAGDyB,IAHC,CAGIC,GAAG,IAAI,CACT;AACH,GALC,CAAN;AAMH,CARM;AAUP,OAAO,MAAMuB,WAAW,GAAG,YAAY;AACnCvC,EAAAA,wBAAwB;AACxB,QAAMb,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,SAAzB,EAAmC;AACrCa,IAAAA,EAAE,EAAEzB,KAAK,CAACmB,QAAN,GAAiBgC,IAAjB,CAAsBC,OAAtB,CAA8B1C,kBAA9B,EAAkD2C,SADjB;AAErCC,IAAAA,MAAM,EAAE;AAF6B,GAAnC,EAID5B,IAJC,CAIIC,GAAG,IAAI;AACTL,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CI,GAA7C;AACH,GANC,CAAN;AAOH,CATM;KAAMuB,W;AAWb,OAAO,MAAMK,UAAU,GAAG,YAAY;AAClC5C,EAAAA,wBAAwB;AACxB,QAAMb,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,SAAzB,EAAmC;AACrCa,IAAAA,EAAE,EAAEzB,KAAK,CAACmB,QAAN,GAAiBgC,IAAjB,CAAsBC,OAAtB,CAA8B1C,kBAA9B,EAAkD2C,SADjB;AAErCC,IAAAA,MAAM,EAAE;AAF6B,GAAnC,EAID5B,IAJC,CAIIC,GAAG,IAAI;AACTL,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CI,GAA5C;AACH,GANC,CAAN;AAOH,CATM;MAAM4B,U;AAWb,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,MAAIxD,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCL,SAApC,IAAiDhB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F,OAAOC,OAAO,CAACC,GAAR,CAAY,wCAAZ,CAAP;AAC7FZ,EAAAA,wBAAwB,GAFc,CAGtC;;AACA,QAAMb,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,WAAzB,EAAqC;AACvCa,IAAAA,EAAE,EAAEzB,KAAK,CAACmB,QAAN,GAAiBgC,IAAjB,CAAsBC,OAAtB,CAA8B1C,kBAA9B,EAAkD2C;AADf,GAArC,EAGD3B,IAHC,CAGIC,GAAG,IAAI;AAAA;;AACT,QAAI,oBAAA3B,KAAK,CAACmB,QAAN,+FAAkBsC,UAAlB,gFAA8BC,MAA9B,oBAAyC/B,GAAG,CAACG,IAA7C,8CAAyC,UAAU4B,MAAnD,CAAJ,EAA+D;AAC/D1D,IAAAA,KAAK,CAACkB,QAAN,CAAe;AACXU,MAAAA,IAAI,EAAE,kBADK;AAEXC,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAFF;AAGXpB,MAAAA;AAHW,KAAf;AAKH,GAVC,CAAN;AAWH,CAfM;AAiBP,OAAO,MAAMiD,cAAc,GAAG,YAAY;AACtC,MAAI3D,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCL,SAApC,IAAiDhB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F,OAAOC,OAAO,CAACC,GAAR,CAAY,wCAAZ,CAAP;AAC7FZ,EAAAA,wBAAwB;AACxB,MAAIiD,IAAI,GAAG,IAAX;AACA,QAAM9D,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,WAAzB,EAAqC;AACvCa,IAAAA,EAAE,EAAEzB,KAAK,CAACmB,QAAN,GAAiBgC,IAAjB,CAAsBC,OAAtB,CAA8B1C,kBAA9B,EAAkD2C;AADf,GAArC,EAGD3B,IAHC,CAGIC,GAAG,IAAI;AAAA;;AACT,QAAI,qBAAA3B,KAAK,CAACmB,QAAN,iGAAkBsC,UAAlB,gFAA8BG,IAA9B,qBAAuCjC,GAAG,CAACG,IAA3C,+CAAuC,WAAU8B,IAAjD,CAAJ,EAA2D,OAAO,OAAP;AAC3DA,IAAAA,IAAI,GAAGjC,GAAG,CAACG,IAAJ,CAAS8B,IAAhB;AACAtC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,GAAG,CAACG,IAAJ,CAAS8B,IAA/B;AACH,GAPC,CAAN;AAQA,SAAO,MAAP;AACH,CAbM;AAeP,OAAO,MAAMC,aAAa,GAAG,MAAO3C,QAAP,IAAoB;AAC7C,MAAIlB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCL,SAApC,IAAiDhB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F,OAAOC,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAP;AAC7FZ,EAAAA,wBAAwB;AACxB,QAAMb,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,UAAzB,EAAoC;AACtCa,IAAAA,EAAE,EAAEzB,KAAK,CAACmB,QAAN,GAAiBgC,IAAjB,CAAsBC,OAAtB,CAA8B1C,kBAA9B,EAAkD2C;AADhB,GAApC,EAGD3B,IAHC,CAGIC,GAAG,IAAI;AACTT,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GARC,CAAN;AASH,CAZM;AAcP,OAAO,MAAMgC,cAAc,GAAG,OAAO5C,QAAP,EAAiB6C,KAAjB,EAAwBC,WAAxB,KAAwC;AAClE,MAAIhE,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCL,SAApC,IAAiDhB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F,OAAOC,OAAO,CAACC,GAAR,CAAY,uCAAZ,CAAP;AAC7FZ,EAAAA,wBAAwB;AACxB,QAAMb,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,WAAzB,EAAqC;AACvCa,IAAAA,EAAE,EAAEzB,KAAK,CAACmB,QAAN,GAAiBgC,IAAjB,CAAsBC,OAAtB,CAA8B1C,kBAA9B,EAAkD2C,SADf;AAEvCU,IAAAA,KAFuC;AAGvCC,IAAAA;AAHuC,GAArC,EAKDtC,IALC,CAKIC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACG,IAAJ,CAASmC,GAAb,EAAkB;AACd3C,MAAAA,OAAO,CAAC4C,KAAR,CAAc,2DAAd,EAA2EvC,GAAG,CAACG,IAAJ,CAASmC,GAApF;AACH,KAFD,MAEO;AACH/C,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CAAR;AAIH;AACJ,GAdC,CAAN;AAeH,CAlBM;AAoBP,OAAO,MAAMqC,UAAU,GAAG,MAAOjD,QAAP,IAAoB;AAC1C,MAAIlB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCL,SAApC,IAAiDhB,KAAK,CAACmB,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F,OAAOC,OAAO,CAACC,GAAR,CAAY,mCAAZ,CAAP;AAC7F,QAAMzB,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,iBAAzB,EAA2C;AAC7Ca,IAAAA,EAAE,EAAExB;AADyC,GAA3C,EAGDyB,IAHC,CAGIC,GAAG,IAAI;AACTL,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCI,GAAG,CAACG,IAAtC;AACAZ,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GATC,CAAN;AAUH,CAZM;AAcP,OAAO,MAAMsC,iBAAiB,GAAG,YAAY;AACzC,QAAMpE,KAAK,CAACkB,QAAN,CAAesC,cAAf,CAAN;AACA,QAAMxD,KAAK,CAACkB,QAAN,CAAe2C,aAAf,CAAN;AACH,CAHM;AAKP,OAAO,MAAMQ,YAAY,GAAG,YAAY,CAAE;AACzC,CADM;AAGP,OAAO,MAAMC,UAAU,GAAG,YAAY,CAAE;AACvC,CADM;AAGP,OAAO,MAAMC,yBAAyB,GAAG,OAAO9C,EAAP,EAAW+C,WAAX,EAAwBC,WAAxB,KAAwC;AAC7E,QAAM3E,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,kBAAzB,EAA4C;AAC9Ca,IAAAA,EAD8C;AAE9C+C,IAAAA,WAF8C;AAG9CC,IAAAA;AAH8C,GAA5C,EAKD/C,IALC,CAKIC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACG,IAAJ,CAASF,IAAT,KAAkB,SAAtB,EAAiC;AAC7B5B,MAAAA,KAAK,CAACkB,QAAN,CAAe;AACXU,QAAAA,IAAI,EAAE,SADK;AAEXC,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASD;AAFP,OAAf;AAIH,KALD,MAKO,IAAIF,GAAG,CAACG,IAAJ,CAASF,IAAT,KAAkB,KAAtB,EAA6B;AAChC5B,MAAAA,KAAK,CAACkB,QAAN,CAAe;AACXU,QAAAA,IAAI,EAAE,aADK;AAEXC,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASD;AAFP,OAAf;AAIH;AACJ,GAjBC,CAAN;AAkBH,CAnBM;AAqBP,OAAO,MAAM6C,sBAAsB,GAAG,MAAOxD,QAAP,IAAoB;AACtD,QAAMpB,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,8BAAzB,EAAwD;AAC1Da,IAAAA,EAAE,EAAExB;AADsD,GAAxD,EAGDyB,IAHC,CAGIW,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACP,IAAT,CAAcF,IAAd,KAAuB,KAA3B,EAAkC;AAC9BV,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAEQ,QAAQ,CAACP,IAAT,CAAcD;AAFlB,OAAD,CAAR;AAIH,KALD,MAKO;AACHX,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,OAAO,EAAEQ,QAAQ,CAACP,IAAT,CAAcD;AAFlB,OAAD,CAAR;AAIH;AACJ,GAfC,CAAN;AAgBH,CAjBM;AAmBP,OAAO,MAAM8C,cAAc,GAAG,OAAOzD,QAAP,EAAiB4B,KAAjB,KAA2B;AACrD,QAAMhD,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,kBAAzB,EAA4C;AAC9CkC,IAAAA;AAD8C,GAA5C,EAGDpB,IAHC,CAGIW,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACP,IAAT,CAAcF,IAAd,KAAuB,KAA3B,EAAkC;AAC9BV,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAEQ,QAAQ,CAACP,IAAT,CAAcD;AAFlB,OAAD,CAAR;AAIH,KALD,MAKO;AACHX,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,OAAO,EAAEQ,QAAQ,CAACP,IAAT,CAAcD;AAFlB,OAAD,CAAR;AAIH;AACJ,GAfC,CAAN;AAgBH,CAjBM;AAmBP,OAAO,MAAM+C,cAAc,GAAI1D,QAAD,IAAc;AACxC,QAAM2D,eAAe,GAAG,IAAIC,eAAJ,CAAoB5E,QAAQ,CAACyC,QAAT,CAAkBvC,MAAtC,CAAxB;AACA,QAAM2E,MAAM,GAAGC,MAAM,CAACC,WAAP,CAAmBJ,eAAe,CAACK,OAAhB,EAAnB,CAAf;AACAhE,EAAAA,QAAQ,CAAC;AACLU,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,OAAO,EAAEkD;AAFJ,GAAD,CAAR;AAIH,CAPM;AASP,OAAO,MAAMI,UAAU,GAAIjE,QAAD,IAAc;AACpC,QAAMkE,YAAY,GAAG,EAArB;AACA,QAAMC,YAAY,GAAGnF,QAAQ,CAACC,MAA9B;AACA,QAAMmF,WAAW,GAAGD,YAAY,CAAChF,KAAb,CAAmB,GAAnB,CAApB;AACAiF,EAAAA,WAAW,CAACC,OAAZ,CAAqBC,OAAD,IAAa;AAC7B,UAAMC,YAAY,GAAGD,OAAO,CAACnF,KAAR,CAAc,GAAd,CAArB;;AACA,QAAIoF,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAhB,CAAuB,CAAvB,MAA8B,GAAlC,EAAuC;AACnCD,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,CAAlB;AACH;;AACDP,IAAAA,YAAY,CAACK,YAAY,CAAC,CAAD,CAAb,CAAZ,GAAgCA,YAAY,CAAC,CAAD,CAA5C;AACH,GAND;AAOAvE,EAAAA,QAAQ,CAAC;AACLU,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEuD;AAFJ,GAAD,CAAR;AAIH,CAfM;AAiBP,OAAO,MAAMQ,WAAW,GAAG,MAAO1E,QAAP,IAAoB;AAC3C,QAAMpB,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,cAAzB,EAAwC;AAC1CiF,IAAAA,IAAI,EAAE,WADoC;AAE1CC,IAAAA,IAAI,EAAE;AAFoC,GAAxC,EAIDpE,IAJC,CAIIW,QAAQ,IAAI;AACdnB,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAEQ,QAAQ,CAACP;AAFb,KAAD,CAAR;AAIH,GATC,CAAN;AAUH,CAXM;AAcP,OAAO,MAAMiE,oBAAoB,GAAG,MAAO7E,QAAP,IAAoB;AACpD,QAAMpB,KAAK,CAAC0B,IAAN,CAAY,GAAEZ,UAAW,iCAAzB,EACDc,IADC,CACIW,QAAQ,IAAI;AACdnB,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAE,wBADD;AAELC,MAAAA,OAAO,EAAEQ,QAAQ,CAACP;AAFb,KAAD,CAAR;AAIH,GANC,CAAN;AAOH,CARM,C,CAYP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\"\nimport loadBaseData from \"../../components/loadBaseData\";\nimport store from \"../../store\"\n\nlet cookieValueUserID = null\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n    cookieValueUserID = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('userID='))\n        .split('=')[1];\n}\n\nlet cookieValueAuth = null\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n    cookieValueAuth = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('loginAuth='))\n        .split('=')[1];\n}\n\n// ------------------------------------------------------------------- THIS BELOW IS CURRENTLY NEEDING FIXING --------------------------------\n\nlet currentServerIndex = 0\nconst updateCurrentServerIndex = () => {\n    // if (document.cookie && document.cookie.search(\"selectedServer\") > -1) {\n    //     currentServerIndex = document.cookie\n    //         .split('; ')\n    //         .find(row => row.startsWith('selectedServer='))\n    //         .split('=')[1];\n    // }\n}\n// if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id) currentServerID = store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id\n\n\n//setting ip_address to nothing if else isn't specified\nlet ip_address = \"\"\nif (process.env.REACT_APP_BACKENDPROXY !== undefined) {\n    ip_address = process.env.REACT_APP_BACKENDPROXY\n}\n\nexport const fetchUserData = async (dispatch) => {\n    if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at fetchUserData\")\n    await axios.post(`${ip_address}/user`, {\n        id: cookieValueUserID,\n    })\n        .then(res => {\n            dispatch({\n                type: \"FETCH_USER_SUCCESS\",\n                payload: res.data\n            })\n        })\n}\n\nexport const login = (name, pass, dispatch) => {\n    axios.post(`${ip_address}/user/login`, {\n        withCredentials: true,\n        name: name.toLowerCase(),\n        password: pass\n    }).then(async (response) => {\n        if (response.data.message === \"Success!\") {\n            await checkUserAuth(dispatch)\n            createMcConfig(dispatch)\n            dispatch({\n                type: \"LOGIN\",\n                payload: {\n                    loginAuth: response.data.loginAuth,\n                    userID: response.data.userID\n                }\n            })\n            await loadBaseData()\n            window.location.reload();\n        } else {\n            console.log(\"response.data: \", response.data)\n            dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: response.data\n            })\n        }\n    })\n}\n\nexport const signup = async (name, email, password, dispatch) => {\n    console.log(\"sending req to signup\")\n    axios.post(`${ip_address}/user/insert`, {\n        data: {\n            name: name.toLowerCase(),\n            email: email.toLowerCase(),\n            password\n        }\n    })\n        .then(async (response) => {\n            console.log(\"response from signup\")\n            if (response.data === \"User created\") {\n                login(name, password, dispatch)\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data\n                })\n            } else {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data\n                })\n            }\n        })\n}\n\nexport const checkUserAuth = async (dispatch) => {\n    await axios.get(`${ip_address}/user/auth`, {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": cookieValueAuth,\n            \"Id\": cookieValueUserID\n        }\n    })\n        .then(response => {\n            dispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: response.data\n            })\n        })\n}\n\nexport const authSucess = (dispatch) => {\n    dispatch({\n        type: \"AUTH_SUCCESS\"\n    })\n}\n\nexport const createMcConfig = async (dispatch) => {\n    if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at createMcConfig\")\n    await axios.post(`${ip_address}/mcConf/create`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            //console.log(\"createMcConf Server response: \", res)\n        })\n}\n\nexport const StartServer = async () => {\n    updateCurrentServerIndex()\n    await axios.post(`${ip_address}/server`, {\n        id: store.getState().user.servers[currentServerIndex].server_id,\n        action: \"start\"\n    })\n        .then(res => {\n            console.log(\"StartServer Server response: \", res)\n        })\n}\n\nexport const StopServer = async () => {\n    updateCurrentServerIndex()\n    await axios.post(`${ip_address}/server`, {\n        id: store.getState().user.servers[currentServerIndex].server_id,\n        action: \"stop\"\n    })\n        .then(res => {\n            console.log(\"StopServer Server response: \", res)\n        })\n}\n\nexport const serverPodsInfo = async () => {\n    if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at server pods info\")\n    updateCurrentServerIndex()\n    // console.log(\"serverPodsInfo call: \", store.getState().user.servers[currentServerIndex].server_id, \" - \", currentServerIndex)\n    await axios.post(`${ip_address}/k8s/pods`, {\n        id: store.getState().user.servers[currentServerIndex].server_id\n    })\n        .then(res => {\n            if (store.getState()?.serverPods?.status === res.data?.status) return\n            store.dispatch({\n                type: \"SERVER_PODS_DATA\",\n                payload: res.data,\n                currentServerIndex\n            })\n        })\n}\n\nexport const serverLogsOnly = async () => {\n    if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at server pods info\")\n    updateCurrentServerIndex()\n    let logs = null\n    await axios.post(`${ip_address}/k8s/pods`, {\n        id: store.getState().user.servers[currentServerIndex].server_id\n    })\n        .then(res => {\n            if (store.getState()?.serverPods?.logs === res.data?.logs) return \"logs2\"\n            logs = res.data.logs\n            console.log(\"LOGS: \", res.data.logs)\n        })\n    return \"logs\"\n}\n\nexport const serverSVCInfo = async (dispatch) => {\n    if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN at serverSVCinfo\")\n    updateCurrentServerIndex()\n    await axios.post(`${ip_address}/k8s/svc`, {\n        id: store.getState().user.servers[currentServerIndex].server_id\n    })\n        .then(res => {\n            dispatch({\n                type: \"SERVER_SVC_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverTimeInfo = async (dispatch, reset, timeOfReset) => {\n    if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN  at serverTimeInfo\")\n    updateCurrentServerIndex()\n    await axios.post(`${ip_address}/k8s/time`, {\n        id: store.getState().user.servers[currentServerIndex].server_id,\n        reset,\n        timeOfReset\n    })\n        .then(res => {\n            if (res.data.err) {\n                console.error(\"err occured at response from k8s/time see (actions index)\", res.data.err)\n            } else {\n                dispatch({\n                    type: \"SERVER_TIME_DATA\",\n                    payload: res.data\n                })\n            }\n        })\n}\n\nexport const serverInfo = async (dispatch) => {\n    if (store.getState().cookies.userID === undefined || store.getState().cookies.userID === \"\") return console.log(\"USER NOT LOGGED IN AT SERVER INFO\")\n    await axios.post(`${ip_address}/mcConf/getData`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            console.log(\"SERVER_INFO DATA: \", res.data)\n            dispatch({\n                type: \"SERVER_INFO\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverDataRefresh = async () => {\n    await store.dispatch(serverPodsInfo)\n    await store.dispatch(serverSVCInfo)\n}\n\nexport const confirmation = async () => { // function never called, see code /components/confirmation/index.jsx, reason is history() method. Fix when time.\n}\n\nexport const changePass = async () => { // function never called, see code /components/changePass/index.jsx, reason is history() method. Fix when time.\n}\n\nexport const changePassUserHomeOptions = async (id, oldPassword, newPassword) => {\n    await axios.post(`${ip_address}/user/changepass`, {\n        id,\n        oldPassword,\n        newPassword\n    })\n        .then(res => {\n            if (res.data.type === \"success\") {\n                store.dispatch({\n                    type: \"MESSAGE\",\n                    payload: res.data.payload\n                })\n            } else if (res.data.type === \"err\") {\n                store.dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: res.data.payload\n                })\n            }\n        })\n}\n\nexport const resendConfirmationMail = async (dispatch) => {\n    await axios.post(`${ip_address}/user/resendconfirmationmail`, {\n        id: cookieValueUserID\n    })\n        .then(response => {\n            if (response.data.type === \"err\") {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data.payload\n                })\n            } else {\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data.payload\n                })\n            }\n        })\n}\n\nexport const updatePassMail = async (dispatch, email) => {\n    await axios.post(`${ip_address}/user/updatepass`, {\n        email\n    })\n        .then(response => {\n            if (response.data.type === \"err\") {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data.payload\n                })\n            } else {\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data.payload\n                })\n            }\n        })\n}\n\nexport const getQuaryParams = (dispatch) => {\n    const urlSearchParams = new URLSearchParams(document.location.search)\n    const params = Object.fromEntries(urlSearchParams.entries());\n    dispatch({\n        type: \"QUARY_SELECTOR\",\n        payload: params\n    })\n}\n\nexport const getCookies = (dispatch) => {\n    const cookieObject = {}\n    const cookieString = document.cookie\n    const cookieArray = cookieString.split(\";\")\n    cookieArray.forEach((element) => {\n        const elementArray = element.split(\"=\")\n        if (elementArray[0].charAt(0) === \" \") {\n            elementArray[0] = elementArray[0].slice(1)\n        }\n        cookieObject[elementArray[0]] = elementArray[1]\n    })\n    dispatch({\n        type: \"SET_COOKIES\",\n        payload: cookieObject\n    })\n}\n\nexport const productInfo = async (dispatch) => {\n    await axios.post(`${ip_address}/productInfo`, {\n        game: \"minecraft\",\n        plan: \"normal\"\n    })\n        .then(response => {\n            dispatch({\n                type: \"PRODUCT_INFO\",\n                payload: response.data\n            })\n        })\n}\n\n\nexport const availableServerTeirs = async (dispatch) => {\n    await axios.post(`${ip_address}/customAPI/availableServerTeirs`)\n        .then(response => {\n            dispatch({\n                type: \"AVAILABLE_SERVER_TEIRS\",\n                payload: response.data\n            })\n        })\n}\n\n\n\n// db.createUser(\n//     {\n//         user: \"nils\",\n//         pwd: \"pass123\",\n//         roles: [\"root\"]\n//     })"]},"metadata":{},"sourceType":"module"}