{"ast":null,"code":"// import React, {\n//     Component\n// } from \"react\"\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n//     }\n//     changeFunc = () => {\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n// export default ChangeServerConfig;\n// const ChangeServerConfig = ()=>{\n//     // stateful settings\n//     const [change, setChange] = useState(false)\n//     const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"])\n//     const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"])\n//     const toggle =()=>{\n//         setChange((prev)=>!prev)\n//     }\n//     //data for Difficulty and Versions\n//     const versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\",\"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\",\"1.14\",\"1.13.2\",\"1.13.1\", \"1.13\", \n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n//     let versionBoiler = versions.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n//     const difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n//     const difficultiesBoiler = difficulties.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n//     //data for Whitelist\n//     const changeWhite = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(whitelist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setWhitelist(whitelist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }   \n//     const WhitelistList = ()=>{\n//         return whitelist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     //data for Ops\n//     const changeOps = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(opslist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setOpslist(opslist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(opslist)\n//                 console.log(opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }   \n//     const OpslistList = ()=>{\n//         return opslist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     const defaultFunc = ()=>{   \n//         return(\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                     <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                         <p>Server Name: </p>\n//                         <span>NilsServer</span>\n//                     </div>\n//                     <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                         <p>Version: </p>\n//                         <span>1.16.4</span>\n//                     </div>\n//                     <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                         <p>Difficulty: </p>\n//                         <span>Hard</span>\n//                     </div>\n//                     <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                         <p>whitelist: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                         <p>ops: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>change</button>\n//                     </div>\n//             </div>\n//         );\n//     }\n//     const changeFunc = ()=>{\n//         let configSize = \"userHomeChangeConfig\"\n//         console.log(\"helloOne\")\n//         if(opslist.length > 4){\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//             console.log(\"hello\")\n//         }\n//         console.log(configSize)\n//         return(\n//             <form className={configSize} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\"/>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <WhitelistList/>\n//                     <input type=\"text\" onKeyPress={ changeWhite }/>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <OpslistList/>\n//                     <input type=\"text\" onKeyPress={ changeOps }/>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>save</button>\n//                     </div>\n//             </form>\n//         );\n//     }\n//     switch(change){\n//         case true: \n//             return changeFunc()\n//         default:\n//             return defaultFunc()\n//     }\n// }\n// export default ChangeServerConfig","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx"],"names":[],"mappingssourcesContent":["// import React, {\n//     Component\n// } from \"react\"\n\n\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n\n//     }\n\n\n//     changeFunc = () => {\n\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n\n// export default ChangeServerConfig;\n\n\n\n\n\n\n// const ChangeServerConfig = ()=>{\n\n//     // stateful settings\n//     const [change, setChange] = useState(false)\n//     const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"])\n//     const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"])\n\n//     const toggle =()=>{\n//         setChange((prev)=>!prev)\n//     }\n\n//     //data for Difficulty and Versions\n//     const versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\",\"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\",\"1.14\",\"1.13.2\",\"1.13.1\", \"1.13\", \n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     let versionBoiler = versions.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n\n//     const difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     const difficultiesBoiler = difficulties.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n\n//     //data for Whitelist\n//     const changeWhite = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(whitelist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setWhitelist(whitelist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }   \n\n//     const WhitelistList = ()=>{\n//         return whitelist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     const changeOps = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(opslist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setOpslist(opslist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(opslist)\n//                 console.log(opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }   \n\n//     const OpslistList = ()=>{\n//         return opslist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     const defaultFunc = ()=>{   \n//         return(\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                     <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                         <p>Server Name: </p>\n//                         <span>NilsServer</span>\n//                     </div>\n//                     <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                         <p>Version: </p>\n//                         <span>1.16.4</span>\n//                     </div>\n//                     <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                         <p>Difficulty: </p>\n//                         <span>Hard</span>\n//                     </div>\n//                     <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                         <p>whitelist: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                         <p>ops: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>change</button>\n//                     </div>\n//             </div>\n//         );\n\n//     }\n\n//     const changeFunc = ()=>{\n\n//         let configSize = \"userHomeChangeConfig\"\n//         console.log(\"helloOne\")\n//         if(opslist.length > 4){\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//             console.log(\"hello\")\n//         }\n\n//         console.log(configSize)\n\n//         return(\n//             <form className={configSize} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\"/>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <WhitelistList/>\n//                     <input type=\"text\" onKeyPress={ changeWhite }/>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <OpslistList/>\n//                     <input type=\"text\" onKeyPress={ changeOps }/>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>save</button>\n//                     </div>\n//             </form>\n//         );\n//     }\n\n//     switch(change){\n//         case true: \n//             return changeFunc()\n//         default:\n//             return defaultFunc()\n//     }\n// }\n\n// export default ChangeServerConfig"]},"metadata":{},"sourceType":"module"}