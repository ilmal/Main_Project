{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/components/payments/serverPlan.jsx\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n\nconst ServerPlan = props => {\n  _s();\n\n  const [cardInfo, setCardInfo] = useState({\n    email: \"\",\n    cardNumber: \"\",\n    cardDate: \"\",\n    cardCVC: \"\"\n  });\n\n  const paymentSelection = value => {\n    switch (value) {\n      case \"sub\":\n        return subscriptionPayment();\n\n      case \"oneTime\":\n        return OneTimePayment();\n\n      default:\n        return OneTimePayment();\n    }\n  };\n\n  const OneTimePayment = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentOneTimeMainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentOneTimeEmail\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cardInfo.email,\n          onChange: e => {\n            setCardInfo({ ...cardInfo,\n              email: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"Form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"FormGroup\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              label: \"Name\",\n              id: \"name\",\n              type: \"text\",\n              placeholder: \"Jane Doe\",\n              required: true,\n              autoComplete: \"name\",\n              value: cardInfo.name,\n              onChange: e => {\n                setCardInfo({ ...cardInfo,\n                  name: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              label: \"Email\",\n              id: \"email\",\n              type: \"email\",\n              placeholder: \"janedoe@gmail.com\",\n              required: true,\n              autoComplete: \"email\",\n              value: cardInfo.email,\n              onChange: e => {\n                setCardInfo({ ...cardInfo,\n                  email: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              label: \"Phone\",\n              id: \"phone\",\n              type: \"tel\",\n              placeholder: \"(941) 555-0123\",\n              required: true,\n              autoComplete: \"tel\",\n              value: cardInfo.phone,\n              onChange: e => {\n                setCardInfo({ ...cardInfo,\n                  phone: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"FormGroup\",\n            children: /*#__PURE__*/_jsxDEV(CardField, {\n              onChange: e => {\n                setError(e.error);\n                setCardComplete(e.complete);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            processing: processing,\n            error: error,\n            disabled: !stripe,\n            children: \"Pay $25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentOneTimeCardDetails\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Pay with card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        options: CARD_OPTIONS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  };\n\n  const subscriptionPayment = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentInnerHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentInnerHeaderSeperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: props.values.plan + \" paymentInfoPriceContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"paymentInfoPlan\",\n          children: props.values.plan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"paymentInfoPrice\",\n          children: [props.values.price, \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentDataContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentInnerHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentInnerHeaderSeperator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OneTimePayment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ServerPlan, \"nVcCkHLabOGV9/uxGa1eVi+JDhY=\");\n\n_c = ServerPlan;\nexport default ServerPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerPlan\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/payments/serverPlan.jsx"],"names":["CardElement","useElements","useStripe","axios","useState","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","ServerPlan","props","cardInfo","setCardInfo","email","cardNumber","cardDate","cardCVC","paymentSelection","value","subscriptionPayment","OneTimePayment","e","target","handleSubmit","name","phone","setError","error","setCardComplete","complete","message","processing","stripe","values","plan","price"],"mappings":"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","sourcesContent":["import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\nimport axios from \"axios\"\nimport { useState } from \"react\"\n\nconst CARD_OPTIONS = {\n    iconStyle: \"solid\",\n    style: {\n        base: {\n            iconColor: \"#c4f0ff\",\n            color: \"#fff\",\n            fontWeight: 500,\n            fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n            fontSize: \"16px\",\n            fontSmoothing: \"antialiased\",\n            \":-webkit-autofill\": { color: \"#fce883\" },\n            \"::placeholder\": { color: \"#87bbfd\" }\n        },\n        invalid: {\n            iconColor: \"#ffc7ee\",\n            color: \"#ffc7ee\"\n        }\n    }\n}\n\nconst ServerPlan = (props) => {\n\n    const [cardInfo, setCardInfo] = useState({\n        email: \"\",\n        cardNumber: \"\",\n        cardDate: \"\",\n        cardCVC: \"\"\n    })\n\n    const paymentSelection = (value) => {\n        switch (value) {\n            case \"sub\":\n                return subscriptionPayment();\n            case \"oneTime\":\n                return OneTimePayment();\n            default:\n                return OneTimePayment();\n        }\n    }\n\n    const OneTimePayment = () => {\n        return (\n            <div className=\"paymentOneTimeMainContainer\">\n                <div className=\"paymentOneTimeEmail\">\n                    <input type=\"text\" value={cardInfo.email} onChange={(e) => {\n                        setCardInfo({\n                            ...cardInfo,\n                            email: e.target.value\n                        })\n                    }} />\n                    <form className=\"Form\" onSubmit={handleSubmit}>\n                        <fieldset className=\"FormGroup\">\n                            <Field\n                                label=\"Name\"\n                                id=\"name\"\n                                type=\"text\"\n                                placeholder=\"Jane Doe\"\n                                required\n                                autoComplete=\"name\"\n                                value={cardInfo.name}\n                                onChange={(e) => {\n                                    setCardInfo({ ...cardInfo, name: e.target.value });\n                                }}\n                            />\n                            <Field\n                                label=\"Email\"\n                                id=\"email\"\n                                type=\"email\"\n                                placeholder=\"janedoe@gmail.com\"\n                                required\n                                autoComplete=\"email\"\n                                value={cardInfo.email}\n                                onChange={(e) => {\n                                    setCardInfo({ ...cardInfo, email: e.target.value });\n                                }}\n                            />\n                            <Field\n                                label=\"Phone\"\n                                id=\"phone\"\n                                type=\"tel\"\n                                placeholder=\"(941) 555-0123\"\n                                required\n                                autoComplete=\"tel\"\n                                value={cardInfo.phone}\n                                onChange={(e) => {\n                                    setCardInfo({ ...cardInfo, phone: e.target.value });\n                                }}\n                            />\n                        </fieldset>\n                        <fieldset className=\"FormGroup\">\n                            <CardField\n                                onChange={(e) => {\n                                    setError(e.error);\n                                    setCardComplete(e.complete);\n                                }}\n                            />\n                        </fieldset>\n                        {error && <ErrorMessage>{error.message}</ErrorMessage>}\n                        <SubmitButton processing={processing} error={error} disabled={!stripe}>\n                            Pay $25\n                        </SubmitButton>\n                    </form>\n                </div>\n                <div className=\"paymentOneTimeCardDetails\">\n                    <span>Pay with card</span>\n                </div>\n                <CardElement options={CARD_OPTIONS} />\n            </div>\n        )\n    }\n\n    const subscriptionPayment = () => {\n\n    }\n\n    return (\n        <>\n            <div className=\"paymentInfoContainer\">\n                <div className=\"paymentInnerHeader\">\n                    <span>Info</span>\n                    <div className=\"paymentInnerHeaderSeperator\" />\n                </div>\n                <div className={props.values.plan + \" paymentInfoPriceContainer\"}>\n                    <span className=\"paymentInfoPlan\">{props.values.plan}</span>\n                    <span className=\"paymentInfoPrice\">{props.values.price}€</span>\n                </div>\n            </div>\n            <div className=\"paymentDataContainer\">\n                <div className=\"paymentInnerHeader\">\n                    <span>Pay</span>\n                    <div className=\"paymentInnerHeaderSeperator\" />\n                </div>\n                <OneTimePayment />\n                {/* INSERT A PROPER SOLUTION TO CHOSE BETWEEN ONE TIME PAYMENT AND SUBSCRIPTION */}\n                {/* <div className=\"paymentInnerPaymentSelectionMain\">\n\n                </div> */}\n            </div>\n        </>\n    )\n}\n\nexport default ServerPlan"]},"metadata":{},"sourceType":"module"}