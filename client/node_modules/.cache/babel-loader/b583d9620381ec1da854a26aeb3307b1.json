{"ast":null,"code":"import axios from \"axios\";\nconst path = \"https://192.168.1.247:3001\";\nlet cookieValueUserID = null;\n\nif (document.cookie) {\n  if (document.cookie.search(\"userID\") > -1) {\n    cookieValueUserID = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n}\n\nlet cookieValueAuth = null;\n\nif (document.cookie) {\n  if (document.cookie.search(\"loginAuth\") > -1) {\n    cookieValueAuth = document.cookie.split('; ').find(row => row.startsWith('loginAuth=')).split('=')[1];\n  }\n}\n\nexport const fetchUserData = async (dispatch, getState) => {\n  await axios.post(`${path}/api/user`, {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"FETCH_USER_SUCCESS\",\n      payload: res.data\n    });\n  });\n};\nexport const checkUserAuth = async dispatch => {\n  await axios.get(`${path}/api/user/auth`, {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": cookieValue\n    }\n  }).then(response => {\n    dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: response.data.auth\n    });\n  });\n};\nexport const authSucess = dispatch => {\n  dispatch({\n    type: \"AUTH_SUCCESS\"\n  });\n};\nexport const createMcConfig = async dispatch => {\n  await axios.post(`${path}/api/mcConf/create`, {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const startServer = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(`${path}/api/server`, {\n    id: cookieValue,\n    action: \"start\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const stopServer = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(`${path}/api/server`, {\n    id: cookieValue,\n    action: \"stop\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const serverPodsInfo = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(`${path}/api/k8s/pods`, {\n    id: cookieValue\n  }).then(res => {\n    console.log(res);\n    dispatch({\n      type: \"SERVER_PODS_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverSVCInfo = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(`${path}/api/k8s/svc`, {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"SERVER_SVC_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const mcConfGetData = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(`${path}/api/mcConf/getData`, {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"MC_CONF_GET_DATA\",\n      payload: res.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/redux/actions/index.jsx"],"names":["axios","path","cookieValueUserID","document","cookie","search","split","find","row","startsWith","cookieValueAuth","fetchUserData","dispatch","getState","post","id","cookieValue","then","res","type","payload","data","checkUserAuth","get","withCredentials","headers","response","auth","authSucess","createMcConfig","startServer","action","stopServer","serverPodsInfo","console","log","serverSVCInfo","mcConfGetData"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nconst path = \"https://192.168.1.247:3001\"\n\nlet cookieValueUserID = null\nif (document.cookie) {\n    if(document.cookie.search(\"userID\") > -1){\n        cookieValueUserID = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('userID='))\n        .split('=')[1];\n    }\n}\n\nlet cookieValueAuth = null\nif (document.cookie) {\n    if(document.cookie.search(\"loginAuth\") > -1){\n        cookieValueAuth = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('loginAuth='))\n        .split('=')[1];\n    }\n}\n\nexport const fetchUserData = async (dispatch, getState) => {\n    await axios.post(`${path}/api/user`, {\n        id: cookieValue,\n    })\n        .then(res => {\n            dispatch({\n                type: \"FETCH_USER_SUCCESS\",\n                payload: res.data\n            })\n        })\n}\n\nexport const checkUserAuth = async (dispatch) => {\n    await axios.get(`${path}/api/user/auth`, {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": cookieValue\n        }\n    })\n        .then(response => {\n            dispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: response.data.auth\n            })\n        })\n}\n\nexport const authSucess = (dispatch) => {\n    dispatch({\n        type: \"AUTH_SUCCESS\"\n    })\n}\n\nexport const createMcConfig = async (dispatch) => {\n\n    await axios.post(`${path}/api/mcConf/create`, {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const startServer = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(`${path}/api/server`, {\n        id: cookieValue,\n        action: \"start\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const stopServer = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(`${path}/api/server`, {\n        id: cookieValue,\n        action: \"stop\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const serverPodsInfo = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(`${path}/api/k8s/pods`, {\n        id: cookieValue\n    })\n        .then(res => {\n            console.log(res)\n            dispatch({\n                type: \"SERVER_PODS_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverSVCInfo = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(`${path}/api/k8s/svc`, {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"SERVER_SVC_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const mcConfGetData = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(`${path}/api/mcConf/getData`, {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"MC_CONF_GET_DATA\",\n                payload: res.data\n            })\n        })\n}"]},"metadata":{},"sourceType":"module"}