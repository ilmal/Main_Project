{"ast":null,"code":"import _slicedToArray from\"/home/main-pc/programing/react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import React,{useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import{store}from\"../index\";import{signup,resendConfirmationMail}from\"../redux/actions/index\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignupPage=function SignupPage(){var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),noMail=_useState4[0],setNoMail=_useState4[1];var _useState5=useState({email:\"loading\"}),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];useEffect(function(){if(store.getState().auth){history.push(\"/user/home\");window.location.reload();}if(store.getState().user!=\"This user doesn't exist\"){setUser(store.getState().user);setToggle(true);}},[]);var verifyEmail=function verifyEmail(email){var re=/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return re.test(email);};var postReq=function postReq(e){e.preventDefault();if(!verifyEmail(e.target.email.value)){store.dispatch({type:\"ERR_MESSAGE\",payload:\"Please insert a valid email\"});return;}setToggle(!toggle);signup(e.target.name.value,e.target.email.value,e.target.password.value,store.dispatch);};var toLogin=function toLogin(){history.push(\"/user/login\");window.location.reload();};var changeMailToggle=function changeMailToggle(){setNoMail(true);};var inputPage=function inputPage(){return/*#__PURE__*/_jsx(\"div\",{className:\"signupMainBody\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"SignupBody\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"signUpContainerHeader\",children:/*#__PURE__*/_jsx(\"span\",{children:\"SIGN UP\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:postReq,className:\"loginCenterInnerContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"signupForm signupFormName\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",className:\"loginInput\",autoComplete:\"off\",required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"loginLable\",children:/*#__PURE__*/_jsx(\"span\",{className:\"loginLableValue\",children:\"Name\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signupForm signupFormEmail\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",className:\"loginInput\",autoComplete:\"off\",required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"loginLable\",children:/*#__PURE__*/_jsx(\"span\",{className:\"loginLableValue\",children:\"Email\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signupForm signupFormPassword\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",className:\"loginInput\",autoComplete:\"off\",required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"loginLable\",children:/*#__PURE__*/_jsx(\"span\",{className:\"loginLableValue\",children:\"Password\"})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"signupForm signupButton\",children:\"submit\"}),/*#__PURE__*/_jsx(\"span\",{onClick:toLogin,children:\"Already signed up?\"})]})]})});};var messagePage=function messagePage(){return/*#__PURE__*/_jsx(\"div\",{className:\"signupMainBody\",children:/*#__PURE__*/_jsx(\"div\",{className:\"SignupBody\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"messageBody\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Follow the link sent to \",user.email,\" to verify you account!\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"noMailLine\"}),noMail?/*#__PURE__*/_jsxs(\"div\",{className:\"noMail\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Make sure to check the spam folder!\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Still can't find it? Just send another one!\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return store.dispatch(resendConfirmationMail);},children:[\"Send another mail to \",user.email]})]}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"span\",{onClick:changeMailToggle,children:\"Can't find the email?\"})})]})})});};switch(toggle){case false:return messagePage();default:return inputPage();}};export default SignupPage;","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/pages/signup.jsx"],"names":["axios","React","useEffect","useState","useHistory","store","signup","resendConfirmationMail","SignupPage","history","toggle","setToggle","noMail","setNoMail","email","user","setUser","getState","auth","push","window","location","reload","verifyEmail","re","test","postReq","e","preventDefault","target","value","dispatch","type","payload","name","password","toLogin","changeMailToggle","inputPage","messagePage"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { store } from \"../index\"\nimport { signup, resendConfirmationMail } from \"../redux/actions/index\"\n\nconst SignupPage = () => {\n\n  const history = useHistory();\n\n  const [toggle, setToggle] = useState(false)\n  const [noMail, setNoMail] = useState(false)\n  const [user, setUser] = useState({ email: \"loading\" })\n\n  useEffect(() => {\n    if (store.getState().auth) {\n      history.push(\"/user/home\");\n      window.location.reload();\n    }\n    if (store.getState().user != \"This user doesn't exist\") {\n      setUser(store.getState().user)\n      setToggle(true)\n    }\n  }, [])\n\n  const verifyEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const postReq = (e) => {\n    e.preventDefault();\n    if (!verifyEmail(e.target.email.value)) {\n      store.dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: \"Please insert a valid email\"\n      })\n      return\n    }\n    setToggle(!toggle)\n    signup(e.target.name.value, e.target.email.value, e.target.password.value, store.dispatch)\n  };\n\n  const toLogin = () => {\n    history.push(\"/user/login\");\n    window.location.reload();\n  }\n\n  const changeMailToggle = () => {\n    setNoMail(true)\n  }\n\n  const inputPage = () => {\n    return (\n      <div className=\"signupMainBody\">\n        <div className=\"SignupBody\">\n          <div className=\"signUpContainerHeader\">\n            <span>SIGN UP</span>\n          </div>\n          <form onSubmit={postReq} className=\"loginCenterInnerContainer\">\n            <div className=\"signupForm signupFormName\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"loginInput\"\n                autoComplete=\"off\"\n                required\n              />\n              <label className=\"loginLable\">\n                <span className=\"loginLableValue\">Name</span>\n              </label>\n            </div>\n            <div className=\"signupForm signupFormEmail\">\n              <input\n                type=\"text\"\n                name=\"email\"\n                className=\"loginInput\"\n                autoComplete=\"off\"\n                required\n              />\n              <label className=\"loginLable\">\n                <span className=\"loginLableValue\">Email</span>\n              </label>\n            </div>\n            <div className=\"signupForm signupFormPassword\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"loginInput\"\n                autoComplete=\"off\"\n                required\n              />\n              <label className=\"loginLable\">\n                <span className=\"loginLableValue\">Password</span>\n              </label>\n            </div>\n            <button type=\"submit\" className=\"signupForm signupButton\">\n              submit\n            </button>\n            <span onClick={toLogin}>Already signed up?</span>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  const messagePage = () => {\n    return (\n      <div className=\"signupMainBody\">\n        <div className=\"SignupBody\">\n          <div className=\"messageBody\">\n            <span>Follow the link sent to {user.email} to verify you account!</span>\n            <div className=\"noMailLine\" />\n            {noMail ?\n              <div className=\"noMail\">\n                <span>Make sure to check the spam folder!</span>\n                <span>Still can't find it? Just send another one!</span>\n                <button onClick={() => store.dispatch(resendConfirmationMail)}>Send another mail to {user.email}</button>\n              </div>\n              :\n              <div>\n                <span onClick={changeMailToggle}>Can't find the email?</span>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  switch (toggle) {\n    case false:\n      return messagePage();\n    default:\n      return inputPage();\n  }\n\n};\n\nexport default SignupPage;\n"]},"metadata":{},"sourceType":"module"}