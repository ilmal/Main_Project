{"ast":null,"code":"import axios from \"axios\";\nlet cookieValueUserID = null;\n\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n  cookieValueUserID = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n}\n\nlet cookieValueAuth = null;\n\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n  cookieValueAuth = document.cookie.split('; ').find(row => row.startsWith('loginAuth=')).split('=')[1];\n}\n\nexport const fetchUserData = async (dispatch, getState) => {\n  await axios.post(`/user`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"FETCH_USER_SUCCESS\",\n      payload: res.data\n    });\n  });\n};\nexport const login = async (dispatch, name, pass) => {\n  await axios.post(\"/user/login\", {\n    withCredentials: true,\n    name: name,\n    password: pass\n  }).then(async response => {\n    if (response.data.message === \"Success!\") {\n      await checkUserAuth();\n      createMcConfig();\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          loginAuth: response.data.loginAuth,\n          userID: response.data.userID\n        }\n      });\n    } else {\n      console.log(\"response.data: \", response.data);\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const signup = async (dispatch, name, email, password) => {\n  axios.post(\"/user/insert\", {\n    data: {\n      name,\n      email,\n      password\n    }\n  }).then(async response => {\n    if (response.data === \"User created\") {\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data\n      });\n      checkUserAuth();\n    } else {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const checkUserAuth = async dispatch => {\n  await axios.get(`/user/auth`, {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": cookieValueAuth\n    }\n  }).then(response => {\n    dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: response.data.auth\n    });\n  });\n};\nexport const authSucess = dispatch => {\n  dispatch({\n    type: \"AUTH_SUCCESS\"\n  });\n};\nexport const createMcConfig = async dispatch => {\n  await axios.post(`/mcConf/create`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const startServer = async dispatch => {\n  await axios.post(`/server`, {\n    id: cookieValueUserID,\n    action: \"start\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const stopServer = async dispatch => {\n  await axios.post(`/server`, {\n    id: cookieValueUserID,\n    action: \"stop\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const serverPodsInfo = async dispatch => {\n  await axios.post(`/k8s/pods`, {\n    id: cookieValueUserID\n  }).then(res => {\n    console.log(res);\n    dispatch({\n      type: \"SERVER_PODS_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverSVCInfo = async dispatch => {\n  await axios.post(`/k8s/svc`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"SERVER_SVC_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const mcConfGetData = async dispatch => {\n  await axios.post(`/mcConf/getData`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"MC_CONF_GET_DATA\",\n      payload: res.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/redux/actions/index.jsx"],"names":["axios","cookieValueUserID","document","cookie","search","split","find","row","startsWith","cookieValueAuth","fetchUserData","dispatch","getState","post","id","then","res","type","payload","data","login","name","pass","withCredentials","password","response","message","checkUserAuth","createMcConfig","loginAuth","userID","console","log","signup","email","get","headers","auth","authSucess","startServer","action","stopServer","serverPodsInfo","serverSVCInfo","mcConfGetData"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nlet cookieValueUserID = null\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n    cookieValueUserID = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('userID='))\n        .split('=')[1];\n}\n\nlet cookieValueAuth = null\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n    cookieValueAuth = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('loginAuth='))\n        .split('=')[1];\n}\n\nexport const fetchUserData = async (dispatch, getState) => {\n    await axios.post(`/user`, {\n        id: cookieValueUserID,\n    })\n        .then(res => {\n            dispatch({\n                type: \"FETCH_USER_SUCCESS\",\n                payload: res.data\n            })\n        })\n}\n\nexport const login = async (dispatch, name, pass) => {\n    await axios.post(\"/user/login\", {\n        withCredentials: true,\n        name: name,\n        password: pass\n    }).then(async (response) => {\n        if (response.data.message === \"Success!\") {\n            await checkUserAuth()\n            createMcConfig()\n            dispatch({\n                type: \"LOGIN\",\n                payload: {\n                    loginAuth: response.data.loginAuth,\n                    userID: response.data.userID\n                }\n            })\n        } else {\n            console.log(\"response.data: \", response.data)\n            dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: response.data\n            })\n        }\n    })\n}\n\nexport const signup = async (dispatch, name, email, password) => {\n    axios.post(\"/user/insert\", {\n        data: {\n            name,\n            email,\n            password,\n        },\n    })\n        .then(async (response) => {\n            if (response.data === \"User created\") {\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data\n                })\n                checkUserAuth()\n            } else {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data\n                })\n            }\n        })\n}\n\nexport const checkUserAuth = async (dispatch) => {\n    await axios.get(`/user/auth`, {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": cookieValueAuth\n        }\n    })\n        .then(response => {\n            dispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: response.data.auth\n            })\n        })\n}\n\nexport const authSucess = (dispatch) => {\n    dispatch({\n        type: \"AUTH_SUCCESS\"\n    })\n}\n\nexport const createMcConfig = async (dispatch) => {\n    await axios.post(`/mcConf/create`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const startServer = async (dispatch) => {\n    await axios.post(`/server`, {\n        id: cookieValueUserID,\n        action: \"start\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const stopServer = async (dispatch) => {\n    await axios.post(`/server`, {\n        id: cookieValueUserID,\n        action: \"stop\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const serverPodsInfo = async (dispatch) => {\n    await axios.post(`/k8s/pods`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            console.log(res)\n            dispatch({\n                type: \"SERVER_PODS_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverSVCInfo = async (dispatch) => {\n    await axios.post(`/k8s/svc`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"SERVER_SVC_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const mcConfGetData = async (dispatch) => {\n    await axios.post(`/mcConf/getData`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"MC_CONF_GET_DATA\",\n                payload: res.data\n            })\n        })\n}\n\n"]},"metadata":{},"sourceType":"module"}