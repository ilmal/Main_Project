{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx\",\n    _s = $RefreshSig$();\n\nimport ChangeServerConfig from \"./server/changeServerConfig\";\nimport LogsComponent from \"./server/logsComponent\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactTooltip from 'react-tooltip';\nimport { store } from \"../../index\";\nimport { serverPodsInfo } from \"../../redux/actions\";\nimport refreshData from \"./server/refreshData\";\nimport StartStop from \"./server/startStop\";\nimport PlayTimeComponent from \"./server/playTime\";\nimport TimeUpdate from \"./server/timeUpdate\"; //images\n\nimport minecraftImage from \"../../images/userHomeImages/minecraftServerLandingPage.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Server = () => {\n  _s();\n\n  const [userData, updateUserData] = useState(store.getState());\n  const [initialLoad, setInitialLoad] = useState(true);\n  const [showLandingPage, setShowLandingPage] = useState(true);\n  const history = useHistory();\n  store.subscribe(() => {\n    updateUserData(store.getState());\n  });\n  useEffect(() => {\n    // refresh logs if status isn't \"server not running\"\n    if (store.getState().serverPods.status != \"server not running\") {\n      const interval = setInterval(() => {\n        // updating logs\n        store.dispatch(serverPodsInfo); // updating plsytime left needs: timeReset, store, userData\n\n        TimeUpdate(false, store, userData);\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [userData]);\n  useEffect(() => {\n    if (initialLoad) {\n      store.dispatch(serverPodsInfo);\n      TimeUpdate(false, store, userData);\n      setInitialLoad(false);\n    }\n  }, [initialLoad]);\n\n  const serverStatus = e => {\n    switch (userData.serverPods.status) {\n      case \"True\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"runningDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"running\",\n            children: \"Running\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n\n      case \"False\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closingDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closing\",\n            children: \"Shutting Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n\n      case \"Pending\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closingDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closing\",\n            children: \"Starting up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n\n      case \"Queuing\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closingDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closing\",\n            children: \"Queuing for server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n\n      case \"server not running\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closedDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closed\",\n            children: \"Not Running\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closedDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closed\",\n            children: \"ERROR OCCURED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  const serverIP = () => {\n    if (userData.serverPods.status !== \"server not running\") {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"mc.servers.u1.se:\", userData.serverSVC.port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"----\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const copyText = e => {\n    navigator.clipboard.writeText(e.target.innerText);\n  };\n\n  const refreshDataFunc = e => {\n    refreshData(e, store, userData);\n  };\n\n  const startStopFunc = e => {\n    StartStop(e.target.id, store);\n  };\n\n  const positionCalculator = returnArray => {\n    let start, end; //calculating the grid placement\n\n    start = 4 * (returnArray.length + 1) + 3;\n    end = start - 3;\n    const row = start.toString() + \"/\" + end.toString();\n    return {\n      gridColumn: \"3/7\",\n      gridRow: row\n    };\n  };\n\n  const landingPageFunc = () => {\n    let returnArray = []; // logic for choosing image dependant on the game\n\n    const serverImageSelectorFunc = () => {\n      switch (\"minecraft\") {\n        case \"minecraft\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: minecraftImage,\n            alt: \"minecraft image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this);\n\n        default:\n          break;\n      }\n    }; //template for the server block showing servers\n\n\n    const serverBlock = (returnArray, key, element) => {\n      const orderDate = new Date(element.date); // end date is the orderdate plus one month\n\n      const endDate = orderDate.setMonth(orderDate.getMonth() + 1);\n      const timeLeft = (endDate - new Date()) / (1000 * 60 * 60 * 24);\n      console.log(\"TIME LEFT: \", timeLeft);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeServerBlockMainContainer\",\n        style: positionCalculator(returnArray),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeServerBlockImageBack\",\n          children: serverImageSelectorFunc()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeServerBlockInfoContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userHomeServerBlockInfoGameName\",\n            children: element.game\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    }; // the text block shown at the end of the server list\n\n\n    const redirectTextBlock = returnArray => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: positionCalculator(returnArray),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userHomeServerBlockSpecialText\",\n          children: [\"Need a server? Head on over to the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              history.push(\"/\");\n              window.location.reload();\n            },\n            children: \" MAIN PAGE \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 95\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this);\n    }; //userServers = [\"1\", \"2\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"]\n\n\n    const userServers = [\"1\", \"2\"];\n    if (store.getState().user) store.getState().user.servers.forEach((element, index) => {\n      returnArray.push(serverBlock(returnArray, index, element));\n    });\n    returnArray.push(redirectTextBlock(returnArray));\n    return returnArray;\n  }; // showing start page with server panel where user chooses server and or is redirected to buy server\n\n\n  if (showLandingPage) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"userHomeLandingPageHeader\",\n        children: \"Select your server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), landingPageFunc(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeLandingPageMainContainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } // check for user auth, if case show page, else send to main page\n\n\n  if (document.cookie.search(\"loginAuth\") > -1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeServerName\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: userData.env[4].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeSegment userHomeStatusOfServer\",\n        children: [serverStatus(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkStatus fas fa-sync\",\n          onClick: refreshDataFunc,\n          \"data-tip\": true,\n          \"data-for\": \"refreshInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Check Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeSegment suerhomeStartStopServer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"innerDivStart\",\n          id: \"startServer\",\n          onClick: startStopFunc,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userHomestart\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"innerDivStop\",\n          id: \"stopServer\",\n          onClick: startStopFunc,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userHomestop\",\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"random23894723\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userHomeLineBetweenStartStop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeSegment userHomeIpAdress\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-tip\": true,\n          \"data-for\": \"copyServerAddress\",\n          onClick: copyText,\n          children: serverIP()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChangeServerConfig, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogsComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayTimeComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"copyServerAddress\",\n        delayShow: 100,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"playtimeleft\",\n        place: \"top\",\n        delayShow: 20,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"play time remaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    console.log(\"User no auth\");\n    history.push(\"/\");\n    return null;\n  }\n};\n\n_s(Server, \"s+NROjn3gAfc+z/8PqH5H/qfJlQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Server;\nexport default Server;\n\nvar _c;\n\n$RefreshReg$(_c, \"Server\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx"],"names":["ChangeServerConfig","LogsComponent","useState","useEffect","useHistory","ReactTooltip","store","serverPodsInfo","refreshData","StartStop","PlayTimeComponent","TimeUpdate","minecraftImage","Server","userData","updateUserData","getState","initialLoad","setInitialLoad","showLandingPage","setShowLandingPage","history","subscribe","serverPods","status","interval","setInterval","dispatch","clearInterval","serverStatus","e","serverIP","serverSVC","port","copyText","navigator","clipboard","writeText","target","innerText","refreshDataFunc","startStopFunc","id","positionCalculator","returnArray","start","end","length","row","toString","gridColumn","gridRow","landingPageFunc","serverImageSelectorFunc","serverBlock","key","element","orderDate","Date","date","endDate","setMonth","getMonth","timeLeft","console","log","game","redirectTextBlock","push","window","location","reload","userServers","user","servers","forEach","index","document","cookie","search","env","value"],"mappings":"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","sourcesContent":["import ChangeServerConfig from \"./server/changeServerConfig\";\nimport LogsComponent from \"./server/logsComponent\"\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactTooltip from 'react-tooltip';\n\nimport { store } from \"../../index\";\nimport { serverPodsInfo } from \"../../redux/actions\"\n\nimport refreshData from \"./server/refreshData\";\nimport StartStop from \"./server/startStop\";\nimport PlayTimeComponent from \"./server/playTime\";\nimport TimeUpdate from \"./server/timeUpdate\";\n\n//images\nimport minecraftImage from \"../../images/userHomeImages/minecraftServerLandingPage.jpg\"\n\n\nconst Server = () => {\n  const [userData, updateUserData] = useState(store.getState());\n  const [initialLoad, setInitialLoad] = useState(true)\n  const [showLandingPage, setShowLandingPage] = useState(true)\n\n  const history = useHistory();\n\n  store.subscribe(() => {\n    updateUserData(store.getState());\n  });\n\n  useEffect(() => {\n    // refresh logs if status isn't \"server not running\"\n    if (store.getState().serverPods.status != \"server not running\") {\n      const interval = setInterval(() => {\n\n        // updating logs\n        store.dispatch(serverPodsInfo)\n        // updating plsytime left needs: timeReset, store, userData\n        TimeUpdate(false, store, userData)\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [userData])\n\n  useEffect(() => {\n    if (initialLoad) {\n      store.dispatch(serverPodsInfo)\n      TimeUpdate(false, store, userData)\n      setInitialLoad(false)\n    }\n  }, [initialLoad])\n\n\n\n  const serverStatus = (e) => {\n    switch (userData.serverPods.status) {\n      case \"True\":\n        return <div className=\"runningDiv defaultDiv\"><p className=\"running\">Running</p></div>\n      case \"False\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Shutting Down</p></div>\n      case \"Pending\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Starting up</p></div>\n      case \"Queuing\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Queuing for server</p></div>\n      case \"server not running\":\n        return <div className=\"closedDiv defaultDiv\"><p className=\"closed\">Not Running</p></div>\n      default:\n        return <div className=\"closedDiv defaultDiv\"><p className=\"closed\">ERROR OCCURED</p></div>\n    }\n  }\n  const serverIP = () => {\n    if (userData.serverPods.status !== \"server not running\") {\n      return <span>mc.servers.u1.se:{userData.serverSVC.port}</span>\n    } else {\n      return <span>----</span>\n    }\n  }\n\n  const copyText = (e) => {\n    navigator.clipboard.writeText(e.target.innerText)\n  }\n\n  const refreshDataFunc = (e) => {\n    refreshData(e, store, userData)\n  }\n\n  const startStopFunc = (e) => {\n    StartStop(e.target.id, store)\n  }\n\n  const positionCalculator = (returnArray) => {\n    let start, end\n\n    //calculating the grid placement\n    start = (4 * (returnArray.length + 1)) + 3\n    end = start - 3\n\n    const row = start.toString() + \"/\" + end.toString()\n    return ({\n      gridColumn: \"3/7\",\n      gridRow: row\n    })\n  }\n\n  const landingPageFunc = () => {\n    let returnArray = []\n\n    // logic for choosing image dependant on the game\n    const serverImageSelectorFunc = () => {\n      switch (\"minecraft\") {\n        case \"minecraft\":\n          return (\n            <img src={minecraftImage} alt=\"minecraft image\" />\n          )\n        default:\n          break;\n      }\n    }\n\n    //template for the server block showing servers\n    const serverBlock = (returnArray, key, element) => {\n\n      const orderDate = new Date(element.date)\n      // end date is the orderdate plus one month\n      const endDate = orderDate.setMonth(orderDate.getMonth() + 1)\n      const timeLeft = (endDate - new Date()) / (1000 * 60 * 60 * 24)\n      console.log(\"TIME LEFT: \", timeLeft)\n\n      return (\n        <div key={key} className=\"userHomeServerBlockMainContainer\" style={positionCalculator(returnArray)}>\n          <div className=\"userHomeServerBlockImageBack\">\n            {serverImageSelectorFunc()}\n          </div>\n          <div className=\"userHomeServerBlockInfoContainer\">\n            <span className=\"userHomeServerBlockInfoGameName\">{element.game}</span>\n          </div>\n        </div>\n      )\n    }\n    // the text block shown at the end of the server list\n    const redirectTextBlock = (returnArray) => {\n      return (\n        <div style={positionCalculator(returnArray)}>\n          <span className=\"userHomeServerBlockSpecialText\">Need a server? Head on over to the <span onClick={() => { history.push(\"/\"); window.location.reload() }}> MAIN PAGE </span></span>\n        </div>\n      )\n    }\n\n    //userServers = [\"1\", \"2\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"]\n    const userServers = [\"1\", \"2\"]\n\n    if (store.getState().user) store.getState().user.servers.forEach((element, index) => {\n      returnArray.push(serverBlock(returnArray, index, element))\n    })\n    returnArray.push(redirectTextBlock(returnArray))\n    return returnArray\n  }\n\n  // showing start page with server panel where user chooses server and or is redirected to buy server\n  if (showLandingPage) {\n    return (\n      <>\n        <span className=\"userHomeLandingPageHeader\">Select your server</span>\n        {\n          landingPageFunc()\n        }\n\n\n        <div className=\"userHomeLandingPageMainContainer\">\n\n        </div>\n      </>\n\n    )\n  }\n\n  // check for user auth, if case show page, else send to main page\n  if (document.cookie.search(\"loginAuth\") > -1) {\n    return (\n      <>\n        <div className=\"userHomeServerName\">\n          <span>{userData.env[4].value}</span>\n        </div>\n        <div className=\"userHomeSegment userHomeStatusOfServer\">\n          {serverStatus()}\n          <div className=\"checkStatus fas fa-sync\" onClick={refreshDataFunc} data-tip data-for=\"refreshInfo\">\n            <span>Check Status</span>\n          </div>\n        </div>\n        <div className=\"userHomeSegment suerhomeStartStopServer\">\n          <div className=\"innerDivStart\" id=\"startServer\" onClick={startStopFunc}>\n            <span className=\"userHomestart\">Start</span>\n          </div>\n          <div className=\"innerDivStop\" id=\"stopServer\" onClick={startStopFunc}>\n            <span className=\"userHomestop\">Stop</span>\n          </div>\n          <div id=\"random23894723\">\n            <div className=\"userHomeLineBetweenStartStop\" />\n          </div>\n        </div>\n        <div className=\"userHomeSegment userHomeIpAdress\">\n          <p>Server IP:</p>\n          <span data-tip data-for=\"copyServerAddress\" onClick={copyText}>{serverIP()}</span>\n        </div>\n\n        <ChangeServerConfig />\n        <LogsComponent />\n        <PlayTimeComponent />\n\n        <ReactTooltip id=\"copyServerAddress\" delayShow={100}>\n          <p>Click to copy</p>\n        </ReactTooltip>\n        <ReactTooltip id=\"playtimeleft\" place=\"top\" delayShow={20}>\n          <p>play time remaining</p>\n        </ReactTooltip>\n      </>\n    );\n  } else {\n    console.log(\"User no auth\")\n    history.push(\"/\");\n    return null;\n  }\n};\n\nexport default Server;\n"]},"metadata":{},"sourceType":"module"}