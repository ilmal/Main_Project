{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/pages/userHome.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\nimport CheckUserAuth from \"../auth/checkAuth\";\nimport { store } from \"../index\";\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UserHomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      page: [\"server\"],\n      userData: [store.getState()]\n    };\n\n    this.changeState = data => {\n      this.setState({\n        page: data\n      });\n    };\n\n    this.getPage = () => {\n      let component;\n\n      switch (this.state.page) {\n        case \"server\":\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"options\":\n          component = /*#__PURE__*/_jsxDEV(Options, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this);\n          break;\n\n        default:\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this);\n          break;\n      }\n\n      return component;\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    store.dispatch(fetchUserData);\n    store.dispatch(checkUserAuth);\n    console.log(\"1\", store.getState());\n    this.setState({\n      userData: store.getState()\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    console.log(\"2\", store.getState());\n  }\n\n  // authCheck = async(userData) =>{\n  //     if(!userData){  \n  //         return <Redirect to=\"/user/login\"/>\n  //     }else{\n  //         return;\n  //     }\n  // }\n  render() {\n    const {\n      userData\n    } = this.state; //await store.dispatch(checkUserAuth)\n    // if(!store.getState().auth){\n    //     return <Redirect to=\"/user/login\"/>\n    // }\n\n    console.log(\"userdata: \", userData[0].auth);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !userData[0].auth ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/user/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"dir\", {\n        className: \"userHomeLayout\",\n        children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"userHomesideMenu\",\n          children: /*#__PURE__*/_jsxDEV(SideMenu, {\n            setState: this.changeState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), this.getPage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default UserHomePage;","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/pages/userHome.jsx"],"names":["React","Component","Redirect","axios","SideMenu","Server","Options","CheckUserAuth","store","fetchUserData","checkUserAuth","UserHomePage","_isMounted","state","page","userData","getState","changeState","data","setState","getPage","component","componentDidMount","dispatch","console","log","componentWillUnmount","render","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\"\nimport Options from \"../components/userHome/options\"\n\nimport CheckUserAuth from \"../auth/checkAuth\"\n\nimport { store } from \"../index\"\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\nclass UserHomePage extends Component {\n    _isMounted = false;\n\n    state = { \n        page: [\"server\"],\n        userData: [store.getState()]\n    }\n\n    componentDidMount(){        \n        this._isMounted = true;\n\n        store.dispatch(fetchUserData)\n        store.dispatch(checkUserAuth)\n        console.log(\"1\",store.getState())\n        this.setState({\n            userData: store.getState()\n        })\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n        console.log(\"2\",store.getState())\n    }\n\n    changeState = (data)=>{\n        this.setState({\n            page:data\n        })\n     }\n\n    getPage = ()=>{\n         let component\n         switch (this.state.page){\n            case \"server\":\n                component = <Server userData={this.state.userData} />\n                break;\n            case \"options\":\n                component = <Options userData={this.state.userData} />\n                break;\n            default:\n                component = <Server userData={this.state.userData} />\n                break;\n            }\n        return component\n    }\n\n    // authCheck = async(userData) =>{\n    //     if(!userData){  \n    //         return <Redirect to=\"/user/login\"/>\n    //     }else{\n    //         return;\n    //     }\n    // }\n\n    render() { \n        const { userData } = this.state\n\n        //await store.dispatch(checkUserAuth)\n        // if(!store.getState().auth){\n        //     return <Redirect to=\"/user/login\"/>\n        // }\n\n        console.log(\"userdata: \", userData[0].auth)\n\n        return ( \n            <>  \n                {!userData[0].auth ? <Redirect to=\"/user/login\"/>:\n                    <dir className=\"userHomeLayout\">\n                        <dir className=\"userHomesideMenu\">\n                            <SideMenu setState={this.changeState}/>\n                        </dir>\n                        {this.getPage()}\n                    </dir>\n                }\n            </>\n         );\n    }\n}\n \nexport default UserHomePage;"]},"metadata":{},"sourceType":"module"}