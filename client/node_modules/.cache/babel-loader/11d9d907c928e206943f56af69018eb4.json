{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/pages/signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { store } from \"../index\";\nimport { signup, resendConfirmationMail } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupPage = () => {\n  _s();\n\n  const history = useHistory();\n  const [toggle, setToggle] = useState(true);\n  const [noMail, setNoMail] = useState(false);\n  const [user, setUser] = useState({\n    email: \"loading\"\n  });\n  useEffect(() => {\n    if (store.getState().auth) {\n      history.push(\"/user/home\");\n      window.location.reload();\n    }\n\n    if (store.getState().user != \"This user doesn't exist\") {\n      setUser(store.getState().user);\n      setToggle(false);\n    }\n  }, []);\n\n  const verifyEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  const postReq = e => {\n    e.preventDefault();\n\n    if (!verifyEmail(e.target.email.value)) {\n      store.dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: \"Please insert a valid email\"\n      });\n      return;\n    }\n\n    setToggle(!toggle);\n    signup(e.target.name.value, e.target.email.value, e.target.password.value, store.dispatch);\n  };\n\n  const toLogin = () => {\n    history.push(\"/user/login\");\n    window.location.reload();\n  };\n\n  const changeMailToggle = () => {\n    setNoMail(true);\n  };\n\n  const inputPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signupMainBody\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SignupBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signUpContainerHeader\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"SIGN UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: postReq,\n          className: \"loginCenterInnerContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signupForm signupFormName\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              className: \"loginInput\",\n              autoComplete: \"off\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"loginLable\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loginLableValue\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signupForm signupFormEmail\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              className: \"loginInput\",\n              autoComplete: \"off\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"loginLable\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loginLableValue\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signupForm signupFormPassword\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              className: \"loginInput\",\n              autoComplete: \"off\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"loginLable\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loginLableValue\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"signupForm signupButton\",\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: toLogin,\n            children: \"Already signed up?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n\n  const messagePage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signupMainBody\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SignupBody\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Follow the link sent to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 43\n            }, this), \" to verify you account!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noMailLine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), noMail ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noMail\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Make sure to check the spam folder!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Still can't find it? Just send another one!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => store.dispatch(resendConfirmationMail),\n              children: [\"Send another mail to \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: changeMailToggle,\n              children: \"Can't find the email?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  };\n\n  switch (toggle) {\n    case false:\n      return messagePage();\n\n    default:\n      return inputPage();\n  }\n};\n\n_s(SignupPage, \"PitzIYRGVPSfSbuiT3cA7viYN0s=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignupPage;\nexport default SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/pages/signup.jsx"],"names":["React","useEffect","useState","useHistory","store","signup","resendConfirmationMail","SignupPage","history","toggle","setToggle","noMail","setNoMail","user","setUser","email","getState","auth","push","window","location","reload","verifyEmail","re","test","postReq","e","preventDefault","target","value","dispatch","type","payload","name","password","toLogin","changeMailToggle","inputPage","messagePage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { store } from \"../index\"\nimport { signup, resendConfirmationMail } from \"../redux/actions/index\"\n\nconst SignupPage = () => {\n\n  const history = useHistory();\n\n  const [toggle, setToggle] = useState(true)\n  const [noMail, setNoMail] = useState(false)\n  const [user, setUser] = useState({ email: \"loading\" })\n\n  useEffect(() => {\n    if (store.getState().auth) {\n      history.push(\"/user/home\");\n      window.location.reload();\n    }\n    if (store.getState().user != \"This user doesn't exist\") {\n      setUser(store.getState().user)\n      setToggle(false)\n    }\n  }, [])\n\n  const verifyEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const postReq = (e) => {\n    e.preventDefault();\n    if (!verifyEmail(e.target.email.value)) {\n      store.dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: \"Please insert a valid email\"\n      })\n      return\n    }\n    setToggle(!toggle)\n    signup(e.target.name.value, e.target.email.value, e.target.password.value, store.dispatch)\n  };\n\n  const toLogin = () => {\n    history.push(\"/user/login\");\n    window.location.reload();\n  }\n\n  const changeMailToggle = () => {\n    setNoMail(true)\n  }\n\n  const inputPage = () => {\n    return (\n      <div className=\"signupMainBody\">\n        <div className=\"SignupBody\">\n          <div className=\"signUpContainerHeader\">\n            <span>SIGN UP</span>\n          </div>\n          <form onSubmit={postReq} className=\"loginCenterInnerContainer\">\n            <div className=\"signupForm signupFormName\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"loginInput\"\n                autoComplete=\"off\"\n                required\n              />\n              <label className=\"loginLable\">\n                <span className=\"loginLableValue\">Name</span>\n              </label>\n            </div>\n            <div className=\"signupForm signupFormEmail\">\n              <input\n                type=\"text\"\n                name=\"email\"\n                className=\"loginInput\"\n                autoComplete=\"off\"\n                required\n              />\n              <label className=\"loginLable\">\n                <span className=\"loginLableValue\">Email</span>\n              </label>\n            </div>\n            <div className=\"signupForm signupFormPassword\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"loginInput\"\n                autoComplete=\"off\"\n                required\n              />\n              <label className=\"loginLable\">\n                <span className=\"loginLableValue\">Password</span>\n              </label>\n            </div>\n            <button type=\"submit\" className=\"signupForm signupButton\">\n              submit\n            </button>\n            <span onClick={toLogin}>Already signed up?</span>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  const messagePage = () => {\n    return (\n      <div className=\"signupMainBody\">\n        <div className=\"SignupBody\">\n          <div className=\"messageBody\">\n            <span>Follow the link sent to <span>{user.email}</span> to verify you account!</span>\n            <div className=\"noMailLine\" />\n            {noMail ?\n              <div className=\"noMail\">\n                <span>Make sure to check the spam folder!</span>\n                <span>Still can't find it? Just send another one!</span>\n                <button onClick={() => store.dispatch(resendConfirmationMail)}>Send another mail to {user.email}</button>\n              </div>\n              :\n              <div>\n                <span onClick={changeMailToggle}>Can't find the email?</span>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  switch (toggle) {\n    case false:\n      return messagePage();\n    default:\n      return inputPage();\n  }\n\n};\n\nexport default SignupPage;\n"]},"metadata":{},"sourceType":"module"}