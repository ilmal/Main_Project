{"ast":null,"code":"import { combineReducers } from \"redux\";\n\nconst authSuccess = (state = false, action) => {\n  switch (action.type) {\n    case \"AUTH_SUCCESS\":\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nconst initailState = {\n  user: \"default\",\n  auth: \"defalut\"\n};\n\nconst fetchUser = (state = initailState, action) => {\n  switch (action.type) {\n    case \"FETCH_USER_SUCCESS\":\n      return { ...state,\n        user: action.payload\n      };\n\n    case \"AUTH_SUCCESS\":\n      return { ...state,\n        auth: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nconst rootReducer = combineReducers({\n  fetchUser,\n  authSuccess\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/redux/reducers/index.jsx"],"names":["combineReducers","authSuccess","state","action","type","initailState","user","auth","fetchUser","payload","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,KAAT,EAAeC,MAAf,KAAwB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,IAAP;;AACJ;AACI,aAAO,KAAP;AAJR;AAMH,CAPD;;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,SADW;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,SAAS,GAAG,CAACN,KAAK,GAAGG,YAAT,EAAsBF,MAAtB,KAA+B;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,oBAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFI,QAAAA,IAAI,EAAEH,MAAM,CAACM;AAFX,OAAN;;AAIJ,SAAK,cAAL;AACI,aAAM,EACF,GAAGP,KADD;AAEFK,QAAAA,IAAI,EAAE;AAFJ,OAAN;;AAIJ;AACI,aAAM,EACF,GAAGL;AADD,OAAN;AAZR;AAgBH,CAlBD;;AAoBA,MAAMQ,WAAW,GAAGV,eAAe,CAAC;AAChCQ,EAAAA,SADgC;AAEhCP,EAAAA;AAFgC,CAAD,CAAnC;AAKA,eAAeS,WAAf","sourcesContent":["import { combineReducers } from \"redux\"\n\nconst authSuccess = (state = false,action)=>{\n    switch (action.type) {\n        case \"AUTH_SUCCESS\":\n            return true\n        default:\n            return false\n    }\n}\n\nconst initailState = {\n    user: \"default\",\n    auth: \"defalut\"\n}\n\nconst fetchUser = (state = initailState,action)=>{\n    \n    switch (action.type) {\n        case \"FETCH_USER_SUCCESS\":\n            return{\n                ...state,\n                user: action.payload\n            }\n        case \"AUTH_SUCCESS\":\n            return{\n                ...state,\n                auth: true\n            }\n        default:\n            return{\n                ...state\n            }\n    }\n}\n\nconst rootReducer = combineReducers({\n    fetchUser,\n    authSuccess\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}