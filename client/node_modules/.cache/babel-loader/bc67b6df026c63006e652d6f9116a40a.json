{"ast":null,"code":"import axios from \"axios\";\nexport const fetchUserData = async (dispatch, getState) => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  if (state.auth != null) {\n    await axios.post(\"http://192.168.1.247:3001/api/user\", {\n      id: cookieValue\n    }).then(res => {\n      dispatch({\n        type: \"FETCH_USER_SUCCESS\",\n        payload: res.data\n      });\n    });\n  }\n};\nexport const checkUserAuth = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.get(\"http://192.168.1.247:3001/api/user/auth\", {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": cookieValue\n    }\n  }).then(response => {\n    dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: response.data.auth\n    });\n  });\n};\nexport const authSucess = dispatch => {\n  dispatch({\n    type: \"AUTH_SUCCESS\"\n  });\n};\nexport const createMcConfig = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"http://192.168.1.247:3001/api/mcConf/create\", {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const startServer = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"http://192.168.1.247:3001/api/server\", {\n    id: cookieValue,\n    action: \"start\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const stopServer = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"http://192.168.1.247:3001/api/server\", {\n    id: cookieValue,\n    action: \"stop\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const serverPodsInfo = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"http://192.168.1.247:3001/api/k8s/pods\", {\n    id: cookieValue\n  }).then(res => {\n    console.log(res);\n    dispatch({\n      type: \"SERVER_PODS_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverSVCInfo = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"http://192.168.1.247:3001/api/k8s/svc\", {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"SERVER_SVC_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const mcConfGetData = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"http://192.168.1.247:3001/api/mcConf/getData\", {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"MC_CONF_GET_DATA\",\n      payload: res.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/redux/actions/index.jsx"],"names":["axios","fetchUserData","dispatch","getState","cookieValue","document","cookie","split","find","row","startsWith","state","auth","post","id","then","res","type","payload","data","checkUserAuth","get","withCredentials","headers","response","authSucess","createMcConfig","startServer","action","stopServer","serverPodsInfo","console","log","serverSVCInfo","mcConfGetData"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nexport const fetchUserData = async (dispatch, getState) => {\n\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    if (state.auth != null) {\n        await axios.post(\"http://192.168.1.247:3001/api/user\", {\n            id: cookieValue,\n        })\n            .then(res => {\n                dispatch({\n                    type: \"FETCH_USER_SUCCESS\",\n                    payload: res.data\n                })\n            })\n    }\n}\n\nexport const checkUserAuth = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.get(\"http://192.168.1.247:3001/api/user/auth\", {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": cookieValue\n        }\n    })\n        .then(response => {\n            dispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: response.data.auth\n            })\n        })\n}\n\nexport const authSucess = (dispatch) => {\n    dispatch({\n        type: \"AUTH_SUCCESS\"\n    })\n}\n\nexport const createMcConfig = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"http://192.168.1.247:3001/api/mcConf/create\", {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const startServer = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"http://192.168.1.247:3001/api/server\", {\n        id: cookieValue,\n        action: \"start\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const stopServer = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"http://192.168.1.247:3001/api/server\", {\n        id: cookieValue,\n        action: \"stop\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const serverPodsInfo = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"http://192.168.1.247:3001/api/k8s/pods\", {\n        id: cookieValue\n    })\n        .then(res => {\n            console.log(res)\n            dispatch({\n                type: \"SERVER_PODS_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverSVCInfo = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"http://192.168.1.247:3001/api/k8s/svc\", {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"SERVER_SVC_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const mcConfGetData = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"http://192.168.1.247:3001/api/mcConf/getData\", {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"MC_CONF_GET_DATA\",\n                payload: res.data\n            })\n        })\n}"]},"metadata":{},"sourceType":"module"}