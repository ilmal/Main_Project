{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/components/userHome/server/logsComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport store from \"../../../store\";\nimport ReactTooltip from 'react-tooltip';\nimport { serverLogsOnly } from \"../../../redux/actions\";\nimport refreshData from \"./refreshData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LogsComponent = () => {\n  _s();\n\n  const [logsExpand, setLogsExpand] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [logDupe, setLogDupe] = useState(false);\n  const [logs, setLogs] = useState(store.getState().serverPods.logs);\n  store.subscribe(() => {\n    setUpdate(!update);\n  });\n  useEffect(() => {\n    // logic for logs interaction\n    // making sure the interaction logic on fire when logs is active\n    if (store.getState().serverPods.status === \"True\") {\n      const ele = document.getElementById('logsText');\n      ele.style.cursor = 'grab';\n      ele.scrollTop = ele.scrollHeight;\n      let pos = {\n        top: 0,\n        left: 0,\n        x: 0,\n        y: 0\n      };\n\n      const mouseDownHandler = function (e) {\n        ele.style.cursor = 'grabbing';\n        ele.style.userSelect = 'none';\n        pos = {\n          left: ele.scrollLeft,\n          top: ele.scrollTop,\n          // Get the current mouse position\n          x: e.clientX,\n          y: e.clientY\n        };\n        document.addEventListener('mousemove', mouseMoveHandler);\n        document.addEventListener('mouseup', mouseUpHandler);\n      };\n\n      const mouseMoveHandler = function (e) {\n        // How far the mouse has been moved\n        const dx = e.clientX - pos.x;\n        const dy = e.clientY - pos.y; // Scroll the element\n\n        ele.scrollTop = pos.top - dy;\n        ele.scrollLeft = pos.left - dx;\n      };\n\n      const mouseUpHandler = function () {\n        ele.style.cursor = 'grab';\n        ele.style.removeProperty('user-select');\n        document.removeEventListener('mousemove', mouseMoveHandler);\n        document.removeEventListener('mouseup', mouseUpHandler);\n      }; // Attach the handler\n\n\n      ele.addEventListener('mousedown', mouseDownHandler);\n    }\n  }, [store.getState()]);\n  useEffect(() => {\n    // updating logs only, and only pushing to state if logs accually update. This helps with avoiding entire page to freeze on logs update.\n    setTimeout(async () => {\n      if (logDupe) return;\n      const serverLogs = await serverLogsOnly(); //console.log(\"IM RUNNING!\")\n\n      setLogs(serverLogs);\n      setLogDupe(true);\n    }, 5000);\n    setLogDupe(false);\n  }, [logDupe]);\n\n  const expandLogs = () => {\n    setLogsExpand(!logsExpand);\n    console.log(\"This is the logsExpand function; \", logsExpand);\n  };\n\n  const refreshDataFunc = e => {\n    refreshData(e);\n  }; // ------------- functions for different pods status (default messages) -----------\n\n\n  const running = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: logsExpand ? \"logsMainContainer logsMainContainerHover logsMainContainerExpanded userHomeSegment\" : \"logsMainContainer logsMainContainerHover userHomeSegment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsExpandArrow fas fa-expand-arrows-alt\",\n          onClick: expandLogs,\n          \"data-tip\": true,\n          \"data-for\": \"expandLogs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsText\",\n          id: \"logsText\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [logs, /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsTextContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: refreshDataFunc,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkStatus fas fa-sync\",\n              \"data-tip\": true,\n              \"data-for\": \"refreshInfo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"refreshInfo\",\n        place: \"bottom\",\n        delayShow: 100,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to refresh logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"expandLogs\",\n        place: \"bottom\",\n        delayShow: 100,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to expand/minimize logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const logsMessageBoiler = e => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logsMainContainer userHomeSegment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsMessageContainer\",\n          children: [e === \"shuttingDown\" ? /*#__PURE__*/_jsxDEV(ShuttingDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 49\n          }, this) : null, e === \"startingUp\" ? /*#__PURE__*/_jsxDEV(StartingUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 47\n          }, this) : null, e === \"queue\" ? /*#__PURE__*/_jsxDEV(Queue, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 42\n          }, this) : null, e === \"notRunning\" ? /*#__PURE__*/_jsxDEV(NotRunning, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 47\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logsTextContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  const ShuttingDown = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerYellow\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Server shutting down!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  };\n\n  const StartingUp = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerYellow\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Server starting up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  };\n\n  const Queue = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerYellow\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: logs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  };\n\n  const NotRunning = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logsMessageBanner logsMessageBannerRed\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Server not running!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }; // ---------------------------------------------------------------------\n  // what is displayed in the logs box\n\n\n  switch (store.getState().serverPods.status) {\n    case \"True\":\n      return running();\n\n    case \"False\":\n      return logsMessageBoiler(\"shuttingDown\");\n\n    case \"Pending\":\n      return logsMessageBoiler(\"startingUp\");\n\n    case \"Queuing\":\n      return logsMessageBoiler(\"queue\");\n\n    case \"server not running\":\n      return logsMessageBoiler(\"notRunning\");\n\n    default:\n      return running();\n  }\n};\n\n_s(LogsComponent, \"hdXLFB5+GEwJVh5bXsmCDXB42Uk=\");\n\n_c = LogsComponent;\nexport default LogsComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogsComponent\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/userHome/server/logsComponent.jsx"],"names":["useState","useEffect","store","ReactTooltip","serverLogsOnly","refreshData","LogsComponent","logsExpand","setLogsExpand","update","setUpdate","logDupe","setLogDupe","logs","setLogs","getState","serverPods","subscribe","status","ele","document","getElementById","style","cursor","scrollTop","scrollHeight","pos","top","left","x","y","mouseDownHandler","e","userSelect","scrollLeft","clientX","clientY","addEventListener","mouseMoveHandler","mouseUpHandler","dx","dy","removeProperty","removeEventListener","setTimeout","serverLogs","expandLogs","console","log","refreshDataFunc","running","logsMessageBoiler","ShuttingDown","StartingUp","Queue","NotRunning"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport store from \"../../../store\";\nimport ReactTooltip from 'react-tooltip';\n\nimport { serverLogsOnly } from \"../../../redux/actions\"\n\nimport refreshData from \"./refreshData\";\n\nconst LogsComponent = () => {\n    const [logsExpand, setLogsExpand] = useState(false)\n    const [update, setUpdate] = useState(false)\n    const [logDupe, setLogDupe] = useState(false)\n    const [logs, setLogs] = useState(store.getState().serverPods.logs)\n\n    store.subscribe(() => {\n        setUpdate(!update)\n    })\n\n    useEffect(() => {\n        // logic for logs interaction\n        // making sure the interaction logic on fire when logs is active\n        if (store.getState().serverPods.status === \"True\") {\n            const ele = document.getElementById('logsText');\n\n            ele.style.cursor = 'grab';\n            ele.scrollTop = ele.scrollHeight;\n\n            let pos = { top: 0, left: 0, x: 0, y: 0 };\n\n            const mouseDownHandler = function (e) {\n                ele.style.cursor = 'grabbing';\n                ele.style.userSelect = 'none';\n\n                pos = {\n                    left: ele.scrollLeft,\n                    top: ele.scrollTop,\n                    // Get the current mouse position\n                    x: e.clientX,\n                    y: e.clientY,\n                };\n\n                document.addEventListener('mousemove', mouseMoveHandler);\n                document.addEventListener('mouseup', mouseUpHandler);\n            };\n\n            const mouseMoveHandler = function (e) {\n                // How far the mouse has been moved\n                const dx = e.clientX - pos.x;\n                const dy = e.clientY - pos.y;\n\n                // Scroll the element\n                ele.scrollTop = pos.top - dy;\n                ele.scrollLeft = pos.left - dx;\n            };\n\n            const mouseUpHandler = function () {\n                ele.style.cursor = 'grab';\n                ele.style.removeProperty('user-select');\n\n                document.removeEventListener('mousemove', mouseMoveHandler);\n                document.removeEventListener('mouseup', mouseUpHandler);\n            };\n\n            // Attach the handler\n            ele.addEventListener('mousedown', mouseDownHandler);\n        }\n    }, [store.getState()]);\n\n    useEffect(() => {\n        // updating logs only, and only pushing to state if logs accually update. This helps with avoiding entire page to freeze on logs update.\n        setTimeout(async () => {\n            if (logDupe) return\n            const serverLogs = await serverLogsOnly()\n            //console.log(\"IM RUNNING!\")\n            setLogs(serverLogs)\n            setLogDupe(true)\n        }, 5000)\n        setLogDupe(false)\n    }, [logDupe])\n\n\n    const expandLogs = () => {\n        setLogsExpand(!logsExpand)\n        console.log(\"This is the logsExpand function; \", logsExpand)\n    }\n\n    const refreshDataFunc = (e) => {\n        refreshData(e)\n    }\n\n    // ------------- functions for different pods status (default messages) -----------\n\n\n    const running = () => {\n        return (\n            <>\n                <div className={logsExpand ? \"logsMainContainer logsMainContainerHover logsMainContainerExpanded userHomeSegment\" : \"logsMainContainer logsMainContainerHover userHomeSegment\"}>\n                    <div className=\"logsExpandArrow fas fa-expand-arrows-alt\" onClick={expandLogs} data-tip data-for=\"expandLogs\" />\n                    <div className=\"logsText\" id=\"logsText\">\n                        <span>\n                            {logs}\n                            <p></p>\n                        </span>\n                    </div>\n                    <div className=\"logsTextContainer\">\n                        <span>Logs</span>\n                        <div onClick={refreshDataFunc}>\n                            <div className=\"checkStatus fas fa-sync\" data-tip data-for=\"refreshInfo\" />\n                        </div>\n                    </div>\n                </div>\n                <ReactTooltip id=\"refreshInfo\" place=\"bottom\" delayShow={100}>\n                    <p>Click to refresh logs</p>\n                </ReactTooltip>\n                <ReactTooltip id=\"expandLogs\" place=\"bottom\" delayShow={100}>\n                    <p>Click to expand/minimize logs</p>\n                </ReactTooltip>\n            </>\n        )\n    }\n\n    const logsMessageBoiler = (e) => {\n        return (\n            <>\n                <div className=\"logsMainContainer userHomeSegment\">\n\n                    <div className=\"logsMessageContainer\">\n                        {e === \"shuttingDown\" ? <ShuttingDown /> : null}\n                        {e === \"startingUp\" ? <StartingUp /> : null}\n                        {e === \"queue\" ? <Queue /> : null}\n                        {e === \"notRunning\" ? <NotRunning /> : null}\n                    </div>\n                    <div className=\"logsTextContainer\">\n                        <span>Logs</span>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const ShuttingDown = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\n                <span>Server shutting down!</span>\n            </div>\n        )\n    }\n\n    const StartingUp = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\n                <span>Server starting up!</span>\n            </div>\n        )\n    }\n\n    const Queue = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\n                <span>{logs}</span>\n            </div>\n        )\n    }\n\n    const NotRunning = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerRed\">\n                <span>Server not running!</span>\n            </div>\n        )\n    }\n\n    // ---------------------------------------------------------------------\n\n    // what is displayed in the logs box\n    switch (store.getState().serverPods.status) {\n        case \"True\":\n            return running()\n        case \"False\":\n            return logsMessageBoiler(\"shuttingDown\")\n        case \"Pending\":\n            return logsMessageBoiler(\"startingUp\")\n        case \"Queuing\":\n            return logsMessageBoiler(\"queue\")\n        case \"server not running\":\n            return logsMessageBoiler(\"notRunning\")\n        default:\n            return running()\n    }\n}\n\nexport default LogsComponent"]},"metadata":{},"sourceType":"module"}