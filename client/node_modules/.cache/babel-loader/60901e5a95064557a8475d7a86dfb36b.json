{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx\";\nimport React, { Component } from \"react\";\n\nclass ChangeServerConfig extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      change: false,\n      whitelist: [\"nils\", \"miniPancookies\"],\n      opslist: [\"nils\", \"miniPancookies\"]\n    };\n\n    this.toggle = () => {\n      this.setState({\n        change: prev => !prev\n      });\n    };\n\n    this.versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\", \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\", \"1.12.2\", \"1.12.1\", \"1.12\"];\n    this.versionBoiler = this.versions.map(d => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: d,\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this);\n    });\n    this.difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"];\n    this.difficultiesBoiler = this.difficulties.map(d => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: d,\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    });\n\n    this.changeWhite = data => {\n      if (data.key === \"Enter\") {\n        data.preventDefault();\n\n        try {\n          if (data.target.value === \"\") {\n            throw \"empty value\";\n          }\n\n          if (this.state.whitelist.includes(data.target.value)) {\n            throw \"name already given\";\n          }\n\n          this.setState({\n            whitelist: this.state.whitelist.concat(data.target.value)\n          });\n          data.target.value = \"\";\n          console.log(this.state.whitelist);\n        } catch (result) {\n          console.log(result);\n        }\n      }\n    };\n\n    this.WhitelistList = () => {\n      return this.state.whitelist.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: e\n        }, e, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.changeOps = data => {\n      if (data.key === \"Enter\") {\n        data.preventDefault();\n\n        try {\n          if (data.target.value === \"\") {\n            throw \"empty value\";\n          }\n\n          if (this.state.opslist.includes(data.target.value)) {\n            throw \"name already given\";\n          }\n\n          this.setState({\n            opslist: this.state.opslist.concat(data.target.value)\n          });\n          data.target.value = \"\";\n          console.log(this.state.opslist);\n          console.log(this.state.opslist.length);\n        } catch (result) {\n          console.log(result);\n        }\n      }\n    };\n\n    this.OpslistList = () => {\n      return this.state.opslist.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: e\n        }, e, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }, this);\n      });\n    };\n\n    this.defaultFunc = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeSegment userHomeChangeConfig\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeServerName userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Server Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"NilsServer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeVersion userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Version: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"1.16.4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Difficulty: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"whitelist: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(this.WhitelistList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeOps userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"ops: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeBtn userHomeChangeDefaults\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.toggle,\n            children: \"change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.changeFunc = () => {\n      let configSize = \"userHomeChangeConfig\";\n      console.log(\"helloOne\");\n\n      if (opslist.length > 4) {\n        configSize = \"userHomeChangeConfigExtendOne\";\n        console.log(\"hello\");\n      }\n\n      console.log(configSize);\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: configSize,\n        onSubmit: e => {\n          e.preventDefault();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeServerName userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Server Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"userHomeChangeServer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeVersion userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Server Version: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"\",\n            id: \"\",\n            children: this.versionBoiler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Server Difficulty: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"\",\n            id: \"\",\n            children: this.difficultiesBoiler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Whitelists:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onKeyPress: this.changeWhite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeOps userHomeChangeDefaults\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ops:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(OpslistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onKeyPress: this.changeOps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeChangeBtn userHomeChangeDefaults\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.toggle,\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    switch (change) {\n      case true:\n        return this.changeFunc();\n\n      default:\n        return this.defaultFunc();\n    }\n  }\n\n}\n\nexport default ChangeServerConfig; // const ChangeServerConfig = ()=>{\n//     // stateful settings\n//     const [change, setChange] = useState(false)\n//     const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"])\n//     const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"])\n//     const toggle =()=>{\n//         setChange((prev)=>!prev)\n//     }\n//     //data for Difficulty and Versions\n//     const versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\",\"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\",\"1.14\",\"1.13.2\",\"1.13.1\", \"1.13\", \n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n//     let versionBoiler = versions.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n//     const difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n//     const difficultiesBoiler = difficulties.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n//     //data for Whitelist\n//     const changeWhite = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(whitelist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setWhitelist(whitelist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }   \n//     const WhitelistList = ()=>{\n//         return whitelist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     //data for Ops\n//     const changeOps = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(opslist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setOpslist(opslist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(opslist)\n//                 console.log(opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }   \n//     const OpslistList = ()=>{\n//         return opslist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     const defaultFunc = ()=>{   \n//         return(\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                     <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                         <p>Server Name: </p>\n//                         <span>NilsServer</span>\n//                     </div>\n//                     <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                         <p>Version: </p>\n//                         <span>1.16.4</span>\n//                     </div>\n//                     <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                         <p>Difficulty: </p>\n//                         <span>Hard</span>\n//                     </div>\n//                     <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                         <p>whitelist: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                         <p>ops: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>change</button>\n//                     </div>\n//             </div>\n//         );\n//     }\n//     const changeFunc = ()=>{\n//         let configSize = \"userHomeChangeConfig\"\n//         console.log(\"helloOne\")\n//         if(opslist.length > 4){\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//             console.log(\"hello\")\n//         }\n//         console.log(configSize)\n//         return(\n//             <form className={configSize} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\"/>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <WhitelistList/>\n//                     <input type=\"text\" onKeyPress={ changeWhite }/>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <OpslistList/>\n//                     <input type=\"text\" onKeyPress={ changeOps }/>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>save</button>\n//                     </div>\n//             </form>\n//         );\n//     }\n//     switch(change){\n//         case true: \n//             return changeFunc()\n//         default:\n//             return defaultFunc()\n//     }\n// }\n// export default ChangeServerConfig","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx"],"names":["React","Component","ChangeServerConfig","state","change","whitelist","opslist","toggle","setState","prev","versions","versionBoiler","map","d","difficulties","difficultiesBoiler","changeWhite","data","key","preventDefault","target","value","includes","concat","console","log","result","WhitelistList","e","changeOps","length","OpslistList","defaultFunc","changeFunc","configSize","render"],"mappings":"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":["import React, {\n    Component\n} from \"react\"\n\n\nclass ChangeServerConfig extends Component {\n    state = { \n        change: false,\n        whitelist: [\"nils\", \"miniPancookies\"],\n        opslist: [\"nils\", \"miniPancookies\"]\n     }\n\n    toggle =()=>{\n        this.setState({change:(prev)=>!prev})\n    }\n\n    //data for Difficulty and Versions\n    versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n    \"1.15\",\"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\",\"1.14\",\"1.13.2\",\"1.13.1\", \"1.13\", \n    \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    versionBoiler = this.versions.map((d)=>{\n        return <option value={ d } key={ d }>{ d }</option>\n    })\n\n    difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n    difficultiesBoiler = this.difficulties.map((d)=>{\n        return <option value={ d } key={ d }>{ d }</option>\n    })\n\n    //data for Whitelist\n    changeWhite = data =>{\n        if(data.key === \"Enter\"){\n            data.preventDefault()\n            try {\n                if(data.target.value === \"\"){\n                    throw \"empty value\"\n                }\n                if(this.state.whitelist.includes(data.target.value)){\n                    throw \"name already given\"\n                }\n                this.setState({whitelist:this.state.whitelist.concat(data.target.value)})\n                data.target.value = \"\"\n                console.log(this.state.whitelist)\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }   \n\n    WhitelistList = ()=>{\n        return this.state.whitelist.map((e)=>{\n            return <span key={e}>{e}</span>\n        })\n    }\n\n        //data for Ops\n        changeOps = data =>{\n            if(data.key === \"Enter\"){\n                data.preventDefault()\n                try {\n                    if(data.target.value === \"\"){\n                        throw \"empty value\"\n                    }\n                    if(this.state.opslist.includes(data.target.value)){\n                        throw \"name already given\"\n                    }\n                    this.setState({opslist:this.state.opslist.concat(data.target.value)})\n                    data.target.value = \"\"\n                    console.log(this.state.opslist)\n                    console.log(this.state.opslist.length)\n                } catch (result) {\n                    console.log(result)\n                }\n    \n            }\n        }   \n    \n        OpslistList = ()=>{\n            return this.state.opslist.map((e)=>{\n                return <span key={e}>{e}</span>\n            })\n        }\n\n    defaultFunc = ()=>{   \n        return(\n            <div className=\"userHomeSegment userHomeChangeConfig\">\n                    <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                        <p>Server Name: </p>\n                        <span>NilsServer</span>\n                    </div>\n                    <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                        <p>Version: </p>\n                        <span>1.16.4</span>\n                    </div>\n                    <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                        <p>Difficulty: </p>\n                        <span>Hard</span>\n                    </div>\n                    <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                        <p>whitelist: </p>\n                        <span><this.WhitelistList/></span>\n                    </div>\n                    <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                        <p>ops: </p>\n                        <span><WhitelistList/></span>\n                    </div>\n                    <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                        <button onClick={ this.toggle }>change</button>\n                    </div>\n            </div>\n        );\n\n    }\n\n\n    changeFunc = ()=>{\n\n        let configSize = \"userHomeChangeConfig\"\n        console.log(\"helloOne\")\n        if(opslist.length > 4){\n            configSize = \"userHomeChangeConfigExtendOne\"\n            console.log(\"hello\")\n        }\n\n        console.log(configSize)\n\n        return(\n            <form className={configSize} onSubmit={e => { e.preventDefault(); }}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <input type=\"text\" className=\"userHomeChangeServer\"/>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Server Version: </p>\n                    <select name=\"\" id=\"\">\n                        {this.versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Server Difficulty: </p>\n                    <select name=\"\" id=\"\">\n                        {this.difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>Whitelists:</p>\n                    <WhitelistList/>\n                    <input type=\"text\" onKeyPress={ this.changeWhite }/>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>Ops:</p>\n                    <OpslistList/>\n                    <input type=\"text\" onKeyPress={ this.changeOps }/>\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                        <button onClick={ this.toggle }>save</button>\n                    </div>\n            </form>\n        );\n    }\n\n    render() { \n         switch(change){\n            case true: \n                return this.changeFunc()\n            default:\n                return this.defaultFunc()\n        }\n    }\n}\n \nexport default ChangeServerConfig;\n\n\n\n\n\n\n// const ChangeServerConfig = ()=>{\n\n//     // stateful settings\n//     const [change, setChange] = useState(false)\n//     const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"])\n//     const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"])\n\n//     const toggle =()=>{\n//         setChange((prev)=>!prev)\n//     }\n\n//     //data for Difficulty and Versions\n//     const versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\",\"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\",\"1.14\",\"1.13.2\",\"1.13.1\", \"1.13\", \n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     let versionBoiler = versions.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n\n//     const difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     const difficultiesBoiler = difficulties.map((d)=>{\n//         return <option value={ d } key={ d }>{ d }</option>\n//     })\n\n//     //data for Whitelist\n//     const changeWhite = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(whitelist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setWhitelist(whitelist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }   \n\n//     const WhitelistList = ()=>{\n//         return whitelist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     const changeOps = data =>{\n//         if(data.key === \"Enter\"){\n//             data.preventDefault()\n//             try {\n//                 if(data.target.value === \"\"){\n//                     throw \"empty value\"\n//                 }\n//                 if(opslist.includes(data.target.value)){\n//                     throw \"name already given\"\n//                 }\n//                 setOpslist(opslist.concat(data.target.value))\n//                 data.target.value = \"\"\n//                 console.log(opslist)\n//                 console.log(opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }   \n\n//     const OpslistList = ()=>{\n//         return opslist.map((e)=>{\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     const defaultFunc = ()=>{   \n//         return(\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                     <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                         <p>Server Name: </p>\n//                         <span>NilsServer</span>\n//                     </div>\n//                     <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                         <p>Version: </p>\n//                         <span>1.16.4</span>\n//                     </div>\n//                     <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                         <p>Difficulty: </p>\n//                         <span>Hard</span>\n//                     </div>\n//                     <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                         <p>whitelist: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                         <p>ops: </p>\n//                         <span><WhitelistList/></span>\n//                     </div>\n//                     <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>change</button>\n//                     </div>\n//             </div>\n//         );\n\n//     }\n\n//     const changeFunc = ()=>{\n\n//         let configSize = \"userHomeChangeConfig\"\n//         console.log(\"helloOne\")\n//         if(opslist.length > 4){\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//             console.log(\"hello\")\n//         }\n\n//         console.log(configSize)\n\n//         return(\n//             <form className={configSize} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\"/>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <WhitelistList/>\n//                     <input type=\"text\" onKeyPress={ changeWhite }/>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <OpslistList/>\n//                     <input type=\"text\" onKeyPress={ changeOps }/>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                         <button onClick={ toggle }>save</button>\n//                     </div>\n//             </form>\n//         );\n//     }\n\n//     switch(change){\n//         case true: \n//             return changeFunc()\n//         default:\n//             return defaultFunc()\n//     }\n// }\n\n// export default ChangeServerConfig"]},"metadata":{},"sourceType":"module"}