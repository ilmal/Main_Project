{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/landingPage.jsx\";\nimport { useState } from \"react\";\nimport store from \"../../../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (() => {\n  // element for sold out layout. To use, add this func at the start of the element\n  // also add the className \"serverLandingPageCardSoldOutTemplate\" to the parent element\n  // in future make this automatic, add value in db then extract value and based on that\n  // update the parent ele class and insert this func to the element (future work)\n  const isSoldOut = selectedTeir => {\n    let result = false;\n    if (store.getState().availableServerTeirs === null) return null;\n    Object.keys(store.getState().availableServerTeirs).forEach(teir => {\n      if (teir.toUpperCase() === selectedTeir && !store.getState().availableServerTeirs[teir].value) {\n        result = true;\n      }\n    });\n\n    if (result) {\n      //console.log(\"CLASSNAME: \", document.getElementsByClassName(selectedTeir.toLowerCase()))\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serverLandingPageCardSoldOutDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"serverLandingPageCardSoldOutBlurDivTop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"serverLandingPageCardSoldOutMiddleDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"serverLandingPageCardSoldOutMiddleDivInner\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sorry,\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"this server is currently out of stock.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"serverLandingPageCardSoldOutBlurDivBottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  };\n\n  console.log(\"PRODUCT INFO: \", store.getState());\n  const element_array = [];\n  Object.keys(store.getState().productInfo).forEach(element => {\n    element_array.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isSoldOut(element.toUpperCase()) !== null ? \"minecraftCards\" + \" \" + element + \" \" + \"serverLandingPageCardSoldOutTemplate\" : \"minecraftCards\" + \" \" + element,\n      onClick: () => setisCardPressed(element),\n      children: [isSoldOut(element.toUpperCase()), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleContainer\" + \" \" + `${element.toLowerCase()}TitleContainer`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: element.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"priceContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u20AC\", store.getState().productInfo[element].price, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"priceMonth\",\n            children: \"/ month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"specsContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cpuSpec\",\n          children: \"CPU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"memSpec\",\n          children: \"MEMORY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cpuSpecValue\",\n          children: [store.getState().productInfo[element].cpu, \" cores\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"memSpecValue\",\n          children: [store.getState().productInfo[element].mem, \"gb\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seperationline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"The basic server is the perfect option for a small group of friends, works great for 3 players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n  });\n  return element_array;\n});","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/landingPage.jsx"],"names":["useState","store","isSoldOut","selectedTeir","result","getState","availableServerTeirs","Object","keys","forEach","teir","toUpperCase","value","console","log","element_array","productInfo","element","push","setisCardPressed","toLowerCase","price","cpu","mem"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport store from \"../../../store\"\n\nexport default () => {\n    // element for sold out layout. To use, add this func at the start of the element\n    // also add the className \"serverLandingPageCardSoldOutTemplate\" to the parent element\n\n    // in future make this automatic, add value in db then extract value and based on that\n    // update the parent ele class and insert this func to the element (future work)\n\n    const isSoldOut = (selectedTeir) => {\n        let result = false\n        if (store.getState().availableServerTeirs === null) return null\n        Object.keys(store.getState().availableServerTeirs).forEach((teir) => {\n            if (teir.toUpperCase() === selectedTeir && !store.getState().availableServerTeirs[teir].value) {\n                result = true\n            }\n        })\n\n        if (result) {\n            //console.log(\"CLASSNAME: \", document.getElementsByClassName(selectedTeir.toLowerCase()))\n            return (\n                <div className=\"serverLandingPageCardSoldOutDiv\">\n                    <div className=\"serverLandingPageCardSoldOutBlurDivTop\" />\n                    <div className=\"serverLandingPageCardSoldOutMiddleDiv\">\n                        <div className=\"serverLandingPageCardSoldOutMiddleDivInner\">\n                            <span>Sorry,</span>\n                            <span>this server is currently out of stock.</span>\n                        </div>\n                    </div>\n                    <div className=\"serverLandingPageCardSoldOutBlurDivBottom\" />\n                </div>\n            )\n        }\n        return null\n    }\n\n    console.log(\"PRODUCT INFO: \", store.getState())\n    const element_array = []\n    Object.keys(store.getState().productInfo).forEach(element => {\n        element_array.push(\n            <div className={(isSoldOut(element.toUpperCase()) !== null) ? \"minecraftCards\" + \" \" + element + \" \" + \"serverLandingPageCardSoldOutTemplate\" : \"minecraftCards\" + \" \" + element} onClick={() => setisCardPressed(element)}>\n                {isSoldOut(element.toUpperCase())}\n                <div className={\"titleContainer\" + \" \" + `${element.toLowerCase()}TitleContainer`}>\n                    <span>{element.toUpperCase()}</span>\n                </div>\n                <div className=\"priceContainer\">\n                    <span>€{store.getState().productInfo[element].price} <span className=\"priceMonth\">/ month</span></span>\n                </div>\n                <div className=\"specsContainer\">\n                    <span className=\"cpuSpec\">CPU</span>\n                    <span className=\"memSpec\">MEMORY</span>\n                    <span className=\"cpuSpecValue\">{store.getState().productInfo[element].cpu} cores</span>\n                    <span className=\"memSpecValue\">{store.getState().productInfo[element].mem}gb</span>\n                </div>\n                <div className=\"seperationline\" />\n                <div className=\"description\"> {/* NEED TO CHANGE THIS TO THE BD AND EXTRACT DATA FROM THERE*/}\n                    <span>The basic server is the perfect option for a small group of friends, works great for 3 players</span>\n                </div>\n            </div>\n        )\n    })\n    return element_array\n}"]},"metadata":{},"sourceType":"module"}