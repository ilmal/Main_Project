{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/pages/userHome.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\nimport CheckUserAuth from \"../auth/checkAuth\";\nimport { store } from \"../index\";\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserHomePage = async () => {\n  _s();\n\n  const [page, setPage] = useState([\"server\"]);\n  const [userData, setUserData] = useState([store.getState()]);\n  store.dispatch(fetchUserData);\n  store.dispatch(checkUserAuth);\n  console.log(\"1\", store.getState());\n\n  const changeState = data => {\n    setPage(data);\n  };\n\n  const getPage = () => {\n    let component;\n\n    switch (page) {\n      case \"server\":\n        component = /*#__PURE__*/_jsxDEV(Server, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this);\n        break;\n\n      case \"options\":\n        component = /*#__PURE__*/_jsxDEV(Options, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this);\n        break;\n\n      default:\n        component = /*#__PURE__*/_jsxDEV(Server, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this);\n        break;\n    }\n\n    return component;\n  };\n\n  const authSuccess = () => {\n    return /*#__PURE__*/_jsxDEV(\"dir\", {\n      className: \"userHomeLayout\",\n      children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n        className: \"userHomesideMenu\",\n        children: /*#__PURE__*/_jsxDEV(SideMenu, {\n          setState: changeState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), getPage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  };\n\n  const authFaliure = () => {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/user/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  };\n\n  console.log(\"userdata: \", userData[0].auth);\n\n  switch (userData.auth) {\n    case true:\n      return authSuccess();\n\n    default:\n      return authFaliure();\n  }\n};\n\n_s(UserHomePage, \"OppuzNnjCJ4q/h8B729Fomj4i1w=\");\n\n_c = UserHomePage;\nexport default UserHomePage; // import React, { Component } from 'react';\n// import { Redirect } from \"react-router-dom\"\n// import axios from \"axios\"\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n// import CheckUserAuth from \"../auth/checkAuth\"\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n// class UserHomePage extends Component {\n//     _isMounted = false;\n//     state = { \n//         page: [\"server\"],\n//         userData: [store.getState()]\n//     }\n//     componentDidMount(){        \n//         this._isMounted = true;\n//         store.dispatch(fetchUserData)\n//         store.dispatch(checkUserAuth)\n//         if(this._isMounted){\n//             this.setState({\n//                 userData: store.getState()\n//             }) \n//         }\n//         console.log(\"1\",store.getState())\n//     }\n//     componentWillUnmount(){\n//         this._isMounted = false;\n//     }\n//     changeState = (data)=>{\n//         this.setState({\n//             page:data\n//         })\n//      }\n//     getPage = ()=>{\n//          let component\n//          switch (this.state.page){\n//             case \"server\":\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={this.state.userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             }\n//         return component\n//     }\n//     authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={this.changeState}/>\n//                 </dir>\n//                 {this.getPage()}\n//             </dir> \n//         )\n//     }\n//     authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n//     render() { \n//         console.log(\"userdata: \", this.state.userData[0].auth)\n//         switch (this.state.userData.auth) {\n//             case true:\n//                 return this.authSuccess()\n//             default:\n//                 return this.authFaliure()\n//         }\n//     }\n// }\n// export default UserHomePage;\n//then you can just update state through resolving the promise.\n// useEffect(() => {\n//     fetch(\"https://blooming-bastion-30679.herokuapp.com/messages/question%22)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       setData(data);\n//       setlikes(data[data.length-1].likes); \n//       setid(data[data.length -1]._id);\n//       setAnswersYes(data[data.length -1].yes)\n//       setAnswersNo(data[data.length -1].no)\n//       console.log(\"This is a fetch function\")\n//     }).catch(err => {console.log(err)});\n// }, [id, likes,AnswersNo,AnswersYes,data]);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserHomePage\");","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/pages/userHome.jsx"],"names":["React","Component","useState","Redirect","axios","SideMenu","Server","Options","CheckUserAuth","store","fetchUserData","checkUserAuth","UserHomePage","page","setPage","userData","setUserData","getState","dispatch","console","log","changeState","data","getPage","component","authSuccess","authFaliure","auth"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\"\nimport Options from \"../components/userHome/options\"\n\nimport CheckUserAuth from \"../auth/checkAuth\"\n\nimport { store } from \"../index\"\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\nconst UserHomePage = async ()=> {\n\n    const [page, setPage] = useState([\"server\"])\n    const [userData, setUserData] = useState([store.getState()])\n\n    store.dispatch(fetchUserData)\n    store.dispatch(checkUserAuth)\n\n    console.log(\"1\",store.getState())\n    \n    const changeState = (data)=>{\n        setPage(data)\n     }\n\n    const getPage = ()=>{\n         let component\n         switch (page){\n            case \"server\":\n                component = <Server userData={userData} />\n                break;\n            case \"options\":\n                component = <Options userData={userData} />\n                break;\n            default:\n                component = <Server userData={userData} />\n                break;\n            }\n        return component\n    }\n\n    const authSuccess = ()=>{\n        return(\n            <dir className=\"userHomeLayout\">\n                <dir className=\"userHomesideMenu\">\n                    <SideMenu setState={changeState}/>\n                </dir>\n                {getPage()}\n            </dir> \n        )\n    }\n\n    const authFaliure = ()=>{\n        return(\n            <Redirect to=\"/user/login\"/>\n        )\n    }\n\n        console.log(\"userdata: \", userData[0].auth)\n        switch (userData.auth) {\n            case true:\n                return authSuccess()\n            default:\n                return authFaliure()\n        }\n}\n \nexport default UserHomePage;\n\n// import React, { Component } from 'react';\n// import { Redirect } from \"react-router-dom\"\n// import axios from \"axios\"\n\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n\n// import CheckUserAuth from \"../auth/checkAuth\"\n\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\n// class UserHomePage extends Component {\n//     _isMounted = false;\n\n//     state = { \n//         page: [\"server\"],\n//         userData: [store.getState()]\n//     }\n\n//     componentDidMount(){        \n//         this._isMounted = true;\n\n//         store.dispatch(fetchUserData)\n//         store.dispatch(checkUserAuth)\n//         if(this._isMounted){\n//             this.setState({\n//                 userData: store.getState()\n//             }) \n//         }\n//         console.log(\"1\",store.getState())\n//     }\n\n//     componentWillUnmount(){\n//         this._isMounted = false;\n//     }\n    \n//     changeState = (data)=>{\n//         this.setState({\n//             page:data\n//         })\n//      }\n\n//     getPage = ()=>{\n//          let component\n//          switch (this.state.page){\n//             case \"server\":\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={this.state.userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             }\n//         return component\n//     }\n\n//     authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={this.changeState}/>\n//                 </dir>\n//                 {this.getPage()}\n//             </dir> \n//         )\n//     }\n\n//     authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n\n//     render() { \n//         console.log(\"userdata: \", this.state.userData[0].auth)\n//         switch (this.state.userData.auth) {\n//             case true:\n//                 return this.authSuccess()\n//             default:\n//                 return this.authFaliure()\n//         }\n//     }\n// }\n \n// export default UserHomePage;\n\n\n//then you can just update state through resolving the promise.\n// useEffect(() => {\n\n//     fetch(\"https://blooming-bastion-30679.herokuapp.com/messages/question%22)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       setData(data);\n//       setlikes(data[data.length-1].likes); \n//       setid(data[data.length -1]._id);\n//       setAnswersYes(data[data.length -1].yes)\n//       setAnswersNo(data[data.length -1].no)\n//       console.log(\"This is a fetch function\")\n//     }).catch(err => {console.log(err)});\n\n\n// }, [id, likes,AnswersNo,AnswersYes,data]);"]},"metadata":{},"sourceType":"module"}