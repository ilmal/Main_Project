{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx\",\n    _s = $RefreshSig$();\n\nimport ChangeServerConfig from \"./server/changeServerConfig\";\nimport LogsComponent from \"./server/logsComponent\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactTooltip from 'react-tooltip';\nimport { store } from \"../../index\";\nimport { serverPodsInfo, serverDataRefresh } from \"../../redux/actions\";\nimport refreshData from \"./server/refreshData\";\nimport StartStop from \"./server/startStop\";\nimport PlayTimeComponent from \"./server/playTime\";\nimport TimeUpdate from \"./server/timeUpdate\"; //images\n\nimport minecraftImage from \"../../images/userHomeImages/minecraftServerLandingPage.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Server = () => {\n  _s();\n\n  const [userData, setUserData] = useState(store.getState());\n  const [initialLoad, setInitialLoad] = useState(true);\n  const [showLandingPage, setShowLandingPage] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    // refresh logs if status isn't \"server not running\"\n    if (store.getState().serverPods.status != \"server not running\") {\n      const interval = setInterval(() => {\n        // updating logs\n        store.dispatch(serverPodsInfo); // // updating plsytime left needs: timeReset, store, userData\n        // TimeUpdate(false, store, userData)\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [userData]);\n  useEffect(() => {\n    if (initialLoad) {\n      store.dispatch(serverPodsInfo); // TimeUpdate(false, store, userData)\n\n      setInitialLoad(false);\n    }\n  }, [initialLoad]);\n  useEffect(() => {\n    // changing layout to fit server and layout\n    const layoutElement = document.getElementById(\"random03242jcmvmj0v23cm4\");\n\n    if (store.getState().userHomeData.showServerLandingPage) {\n      layoutElement.style.gridTemplateRows = \"auto\"; // console.log(\"layout: auto\")\n    } else {\n      layoutElement.style.gridTemplateRows = \" auto repeat(7, 11% 3%)\";\n      layoutElement.style.maxHeight = \"110vh\"; // console.log(\"layout: auto repeat(7, 11% 3%)\")\n    } // if (store.getState().userHomeData.sideMenuSelectedTab === \"server\") {\n    //   store.subscribe(() => {\n    //     console.log(\"UPDATING\")\n    //     setUserData(store.getState());\n    //   });\n    // }\n\n  });\n\n  const serverStatus = e => {\n    switch (store.getState().serverPods.status) {\n      case \"True\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"runningDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"running\",\n            children: \"Running\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }, this);\n\n      case \"False\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closingDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closing\",\n            children: \"Shutting Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this);\n\n      case \"Pending\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closingDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closing\",\n            children: \"Starting up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, this);\n\n      case \"Queuing\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closingDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closing\",\n            children: \"Queuing for server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this);\n\n      case \"server not running\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closedDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closed\",\n            children: \"Not Running\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closedDiv defaultDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"closed\",\n            children: \"ERROR OCCURED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  const serverIP = () => {\n    if (userData.serverPods.status !== \"server not running\") {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"mc.servers.u1.se:\", userData.serverSVC.port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"----\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const copyText = e => {\n    navigator.clipboard.writeText(e.target.innerText);\n  };\n\n  const refreshDataFunc = e => {\n    refreshData(e, store, userData);\n  };\n\n  const startStopFunc = e => {\n    StartStop(e.target.id, store);\n  };\n\n  const positionCalculator = returnArray => {\n    let start, end; //calculating the grid placement\n\n    start = 4 * (returnArray.length + 1) + 3;\n    end = start - 3;\n    const row = start.toString() + \"/\" + end.toString();\n    return {\n      gridColumn: \"3/7\",\n      gridRow: row\n    };\n  };\n  /*\n    -------------------------LANDING PAGE--------------------------------\n  */\n\n\n  const landingPageFunc = () => {\n    let returnArray = []; // logic for choosing image dependant on the game\n\n    const serverImageSelectorFunc = () => {\n      switch (\"minecraft\") {\n        case \"minecraft\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: minecraftImage,\n            alt: \"minecraft image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this);\n\n        default:\n          break;\n      }\n    }; //template for the server block showing servers\n\n\n    const serverBlock = (returnArray, key, element) => {\n      const handleCLick = async e => {\n        setShowLandingPage(false);\n        console.log(\"E.TARGET.ID: \", e);\n        document.cookie = `selectedServer=${e}`; // refresh server data to the new server index\n\n        await store.dispatch(serverDataRefresh);\n        store.dispatch({\n          type: \"USER_HOME_DATA\",\n          payload: { ...store.getState().userHomeData,\n            serverIndex: e,\n            showServerLandingPage: false\n          }\n        });\n      };\n\n      const orderDate = new Date(element.date);\n      const endDate = orderDate.setDate(orderDate.getDate() + 30);\n      let timeLeft = (endDate - new Date()) / (1000 * 60 * 60 * 24);\n      timeLeft = timeLeft.toString().split(\".\");\n      timeLeft = timeLeft[0];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeServerBlockMainContainer\",\n        style: positionCalculator(returnArray),\n        onClick: () => handleCLick(key),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeServerBlockImageBack\",\n          children: serverImageSelectorFunc()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeServerBlockInfoContainer\",\n          id: key,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userHomeServerBlockInfoGameNameContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"userHomeServerBlockInfoGameName\",\n              children: element.game.charAt(0).toUpperCase() + element.game.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userHomeServerBlockInfoGameNameSeperationLine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userHomeServerBlockInfoGamePlan\" + \" \" + \"userHomeServerBlockInfoGamePlan\" + element.plan,\n            children: element.plan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userHomeServerBlockInfoTimeLeft\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Days left: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 64\n            }, this), timeLeft]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, key.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this);\n    }; // the text block shown at the end of the server list\n\n\n    const redirectTextBlock = returnArray => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: positionCalculator(returnArray),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userHomeServerBlockSpecialText\",\n          children: [\"Need a server? Head on over to the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              history.push(\"/\");\n              window.location.reload();\n            },\n            children: \" MAIN PAGE \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 95\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    };\n\n    if (store.getState().user) store.getState().user.servers.forEach((element, index) => {\n      returnArray.push(serverBlock(returnArray, index, element));\n    });\n    returnArray.push(redirectTextBlock(returnArray));\n    return returnArray;\n  }; // showing start page with server panel where user chooses server and or is redirected to buy server\n\n\n  if (store.getState().userHomeData.showServerLandingPage) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"userHomeLandingPageHeader\",\n        children: \"Select your server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), landingPageFunc()]\n    }, void 0, true);\n  } // check for user auth, if case show page, else send to main page\n\n\n  if (!(document.cookie.search(\"loginAuth\") > -1)) {\n    console.log(\"User no auth\");\n    history.push(\"/\");\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userHomeServerName\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userHomeSegment userHomeStatusOfServer\",\n      children: [serverStatus(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkStatus fas fa-sync\",\n        onClick: refreshDataFunc,\n        \"data-tip\": true,\n        \"data-for\": \"refreshInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Check Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userHomeSegment suerhomeStartStopServer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerDivStart\",\n        id: \"startServer\",\n        onClick: startStopFunc,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userHomestart\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerDivStop\",\n        id: \"stopServer\",\n        onClick: startStopFunc,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userHomestop\",\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"random23894723\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userHomeLineBetweenStartStop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userHomeSegment userHomeIpAdress\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Server IP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-tip\": true,\n        \"data-for\": \"copyServerAddress\",\n        onClick: copyText,\n        children: serverIP()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChangeServerConfig, {\n      serverIndex: store.getState().userHomeData.serverIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogsComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      id: \"copyServerAddress\",\n      delayShow: 100,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click to copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      id: \"playtimeleft\",\n      place: \"top\",\n      delayShow: 20,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"play time remaining\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Server, \"xtW2R6z57Lex7DIo90DoW6z8cYQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Server;\nexport default Server;\n\nvar _c;\n\n$RefreshReg$(_c, \"Server\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx"],"names":["ChangeServerConfig","LogsComponent","useState","useEffect","useHistory","ReactTooltip","store","serverPodsInfo","serverDataRefresh","refreshData","StartStop","PlayTimeComponent","TimeUpdate","minecraftImage","Server","userData","setUserData","getState","initialLoad","setInitialLoad","showLandingPage","setShowLandingPage","history","serverPods","status","interval","setInterval","dispatch","clearInterval","layoutElement","document","getElementById","userHomeData","showServerLandingPage","style","gridTemplateRows","maxHeight","serverStatus","e","serverIP","serverSVC","port","copyText","navigator","clipboard","writeText","target","innerText","refreshDataFunc","startStopFunc","id","positionCalculator","returnArray","start","end","length","row","toString","gridColumn","gridRow","landingPageFunc","serverImageSelectorFunc","serverBlock","key","element","handleCLick","console","log","cookie","type","payload","serverIndex","orderDate","Date","date","endDate","setDate","getDate","timeLeft","split","game","charAt","toUpperCase","slice","plan","redirectTextBlock","push","window","location","reload","user","servers","forEach","index","search","serverInfo","data","value"],"mappings":"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","sourcesContent":["import ChangeServerConfig from \"./server/changeServerConfig\";\nimport LogsComponent from \"./server/logsComponent\"\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactTooltip from 'react-tooltip';\n\nimport { store } from \"../../index\";\nimport { serverPodsInfo, serverDataRefresh } from \"../../redux/actions\"\n\nimport refreshData from \"./server/refreshData\";\nimport StartStop from \"./server/startStop\";\nimport PlayTimeComponent from \"./server/playTime\";\nimport TimeUpdate from \"./server/timeUpdate\";\n\n//images\nimport minecraftImage from \"../../images/userHomeImages/minecraftServerLandingPage.jpg\"\n\n\nconst Server = () => {\n  const [userData, setUserData] = useState(store.getState());\n  const [initialLoad, setInitialLoad] = useState(true)\n  const [showLandingPage, setShowLandingPage] = useState(true)\n\n  const history = useHistory();\n\n  useEffect(() => {\n    // refresh logs if status isn't \"server not running\"\n    if (store.getState().serverPods.status != \"server not running\") {\n      const interval = setInterval(() => {\n\n        // updating logs\n        store.dispatch(serverPodsInfo)\n        // // updating plsytime left needs: timeReset, store, userData\n        // TimeUpdate(false, store, userData)\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [userData])\n\n  useEffect(() => {\n    if (initialLoad) {\n      store.dispatch(serverPodsInfo)\n      // TimeUpdate(false, store, userData)\n      setInitialLoad(false)\n    }\n  }, [initialLoad])\n\n  useEffect(() => {\n\n    // changing layout to fit server and layout\n    const layoutElement = document.getElementById(\"random03242jcmvmj0v23cm4\")\n    if (store.getState().userHomeData.showServerLandingPage) {\n      layoutElement.style.gridTemplateRows = \"auto\"\n      // console.log(\"layout: auto\")\n    } else {\n      layoutElement.style.gridTemplateRows = \" auto repeat(7, 11% 3%)\"\n      layoutElement.style.maxHeight = \"110vh\"\n      // console.log(\"layout: auto repeat(7, 11% 3%)\")\n    }\n    // if (store.getState().userHomeData.sideMenuSelectedTab === \"server\") {\n    //   store.subscribe(() => {\n    //     console.log(\"UPDATING\")\n    //     setUserData(store.getState());\n    //   });\n    // }\n  })\n\n\n  const serverStatus = (e) => {\n    switch (store.getState().serverPods.status) {\n      case \"True\":\n        return <div className=\"runningDiv defaultDiv\"><p className=\"running\">Running</p></div>\n      case \"False\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Shutting Down</p></div>\n      case \"Pending\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Starting up</p></div>\n      case \"Queuing\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Queuing for server</p></div>\n      case \"server not running\":\n        return <div className=\"closedDiv defaultDiv\"><p className=\"closed\">Not Running</p></div>\n      default:\n        return <div className=\"closedDiv defaultDiv\"><p className=\"closed\">ERROR OCCURED</p></div>\n    }\n  }\n  const serverIP = () => {\n    if (userData.serverPods.status !== \"server not running\") {\n      return <span>mc.servers.u1.se:{userData.serverSVC.port}</span>\n    } else {\n      return <span>----</span>\n    }\n  }\n\n  const copyText = (e) => {\n    navigator.clipboard.writeText(e.target.innerText)\n  }\n\n  const refreshDataFunc = (e) => {\n    refreshData(e, store, userData)\n  }\n\n  const startStopFunc = (e) => {\n    StartStop(e.target.id, store)\n  }\n\n  const positionCalculator = (returnArray) => {\n    let start, end\n\n    //calculating the grid placement\n    start = (4 * (returnArray.length + 1)) + 3\n    end = start - 3\n\n    const row = start.toString() + \"/\" + end.toString()\n    return ({\n      gridColumn: \"3/7\",\n      gridRow: row\n    })\n  }\n\n  /*\n    -------------------------LANDING PAGE--------------------------------\n  */\n\n  const landingPageFunc = () => {\n    let returnArray = []\n\n    // logic for choosing image dependant on the game\n    const serverImageSelectorFunc = () => {\n      switch (\"minecraft\") {\n        case \"minecraft\":\n          return (\n            <img src={minecraftImage} alt=\"minecraft image\" />\n          )\n        default:\n          break;\n      }\n    }\n\n    //template for the server block showing servers\n    const serverBlock = (returnArray, key, element) => {\n      const handleCLick = async (e) => {\n        setShowLandingPage(false)\n        console.log(\"E.TARGET.ID: \", e)\n        document.cookie = `selectedServer=${e}`\n        // refresh server data to the new server index\n        await store.dispatch(serverDataRefresh)\n        store.dispatch({\n          type: \"USER_HOME_DATA\",\n          payload: {\n            ...store.getState().userHomeData,\n            serverIndex: e,\n            showServerLandingPage: false\n          }\n        })\n      }\n      const orderDate = new Date(element.date)\n      const endDate = orderDate.setDate(orderDate.getDate() + 30)\n      let timeLeft = (endDate - new Date()) / (1000 * 60 * 60 * 24)\n      timeLeft = timeLeft.toString().split(\".\")\n      timeLeft = timeLeft[0]\n      return (\n        <div key={key.toString()} className=\"userHomeServerBlockMainContainer\" style={positionCalculator(returnArray)} onClick={() => handleCLick(key)}>\n          <div className=\"userHomeServerBlockImageBack\">\n            {serverImageSelectorFunc()}\n          </div>\n          <div className=\"userHomeServerBlockInfoContainer\" id={key}>\n            <div className=\"userHomeServerBlockInfoGameNameContainer\">\n              <span className=\"userHomeServerBlockInfoGameName\">{element.game.charAt(0).toUpperCase() + element.game.slice(1)}</span>\n            </div>\n            <div className=\"userHomeServerBlockInfoGameNameSeperationLine\" />\n            <span className={\"userHomeServerBlockInfoGamePlan\" + \" \" + \"userHomeServerBlockInfoGamePlan\" + element.plan}>{element.plan}</span>\n            <span className=\"userHomeServerBlockInfoTimeLeft\"> <p>Days left: </p>{timeLeft}</span>\n          </div>\n        </div>\n      )\n    }\n    // the text block shown at the end of the server list\n    const redirectTextBlock = (returnArray) => {\n      return (\n        <div style={positionCalculator(returnArray)}>\n          <span className=\"userHomeServerBlockSpecialText\">Need a server? Head on over to the <span onClick={() => { history.push(\"/\"); window.location.reload() }}> MAIN PAGE </span></span>\n        </div>\n      )\n    }\n\n    if (store.getState().user) store.getState().user.servers.forEach((element, index) => {\n      returnArray.push(serverBlock(returnArray, index, element))\n    })\n    returnArray.push(redirectTextBlock(returnArray))\n    return returnArray\n  }\n\n  // showing start page with server panel where user chooses server and or is redirected to buy server\n  if (store.getState().userHomeData.showServerLandingPage) {\n    return (\n      <>\n        <span className=\"userHomeLandingPageHeader\">Select your server</span>\n        {\n          landingPageFunc()\n        }\n      </>\n    )\n  }\n  // check for user auth, if case show page, else send to main page\n  if (!(document.cookie.search(\"loginAuth\") > -1)) {\n    console.log(\"User no auth\")\n    history.push(\"/\");\n    return null;\n  }\n  return (\n    <>\n      <div className=\"userHomeServerName\">\n        <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value}</span>\n      </div>\n      <div className=\"userHomeSegment userHomeStatusOfServer\">\n        {serverStatus()}\n        <div className=\"checkStatus fas fa-sync\" onClick={refreshDataFunc} data-tip data-for=\"refreshInfo\">\n          <span>Check Status</span>\n        </div>\n      </div>\n      <div className=\"userHomeSegment suerhomeStartStopServer\">\n        <div className=\"innerDivStart\" id=\"startServer\" onClick={startStopFunc}>\n          <span className=\"userHomestart\">Start</span>\n        </div>\n        <div className=\"innerDivStop\" id=\"stopServer\" onClick={startStopFunc}>\n          <span className=\"userHomestop\">Stop</span>\n        </div>\n        <div id=\"random23894723\">\n          <div className=\"userHomeLineBetweenStartStop\" />\n        </div>\n      </div>\n      <div className=\"userHomeSegment userHomeIpAdress\">\n        <p>Server IP:</p>\n        <span data-tip data-for=\"copyServerAddress\" onClick={copyText}>{serverIP()}</span>\n      </div>\n\n      <ChangeServerConfig serverIndex={store.getState().userHomeData.serverIndex} />\n      <LogsComponent />\n\n      <ReactTooltip id=\"copyServerAddress\" delayShow={100}>\n        <p>Click to copy</p>\n      </ReactTooltip>\n      <ReactTooltip id=\"playtimeleft\" place=\"top\" delayShow={20}>\n        <p>play time remaining</p>\n      </ReactTooltip>\n    </>\n  );\n};\n\nexport default Server;\n"]},"metadata":{},"sourceType":"module"}