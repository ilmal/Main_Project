{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/pages/userHome.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\nimport CheckUserAuth from \"../auth/checkAuth\";\nimport { store } from \"../index\";\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: [\"server\"],\n      userData: [store.getState()]\n    };\n\n    this.changeState = data => {\n      this.setState({\n        page: data\n      });\n    };\n\n    this.getPage = () => {\n      let component;\n\n      switch (this.state.page) {\n        case \"server\":\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"options\":\n          component = /*#__PURE__*/_jsxDEV(Options, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this);\n          break;\n\n        default:\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this);\n          break;\n      }\n\n      return component;\n    };\n\n    this.authSuccess = () => {\n      return /*#__PURE__*/_jsxDEV(\"dir\", {\n        className: \"userHomeLayout\",\n        children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"userHomesideMenu\",\n          children: /*#__PURE__*/_jsxDEV(SideMenu, {\n            setState: this.changeState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), this.getPage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.authFaliure = () => {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/user/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  async componentDidMount() {\n    await store.dispatch(fetchUserData);\n    await store.dispatch(checkUserAuth);\n    this.setState({\n      userData: store.getState()\n    });\n    console.log(\"1\", store.getState());\n  }\n\n  render() {\n    console.log(\"userdata: \", this.state.userData.auth);\n\n    switch (this.state.userData.auth) {\n      case true:\n        this.authSuccess();\n\n      default:\n        this.authFaliure();\n    }\n  }\n\n}\n\nexport default UserHomePage; //then you can just update state through resolving the promise.\n// useEffect(() => {\n//     fetch(\"https://blooming-bastion-30679.herokuapp.com/messages/question%22)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       setData(data);\n//       setlikes(data[data.length-1].likes); \n//       setid(data[data.length -1]._id);\n//       setAnswersYes(data[data.length -1].yes)\n//       setAnswersNo(data[data.length -1].no)\n//       console.log(\"This is a fetch function\")\n//     }).catch(err => {console.log(err)});\n// }, [id, likes,AnswersNo,AnswersYes,data]);","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/pages/userHome.jsx"],"names":["React","Component","Redirect","axios","SideMenu","Server","Options","CheckUserAuth","store","fetchUserData","checkUserAuth","UserHomePage","state","page","userData","getState","changeState","data","setState","getPage","component","authSuccess","authFaliure","componentDidMount","dispatch","console","log","render","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,wBAA7C;;;AAEA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCW,KADiC,GACzB;AACJC,MAAAA,IAAI,EAAE,CAAC,QAAD,CADF;AAEJC,MAAAA,QAAQ,EAAE,CAACN,KAAK,CAACO,QAAN,EAAD;AAFN,KADyB;;AAAA,SAejCC,WAfiC,GAelBC,IAAD,IAAQ;AAClB,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAACI;AADK,OAAd;AAGF,KAnB+B;;AAAA,SAqBjCE,OArBiC,GAqBvB,MAAI;AACT,UAAIC,SAAJ;;AACA,cAAQ,KAAKR,KAAL,CAAWC,IAAnB;AACG,aAAK,QAAL;AACIO,UAAAA,SAAS,gBAAG,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWE;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACJ,aAAK,SAAL;AACIM,UAAAA,SAAS,gBAAG,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWE;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACJ;AACIM,UAAAA,SAAS,gBAAG,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWE;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;AATP;;AAWD,aAAOM,SAAP;AACH,KAnCgC;;AAAA,SAqCjCC,WArCiC,GAqCnB,MAAI;AACd,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAE,KAAKL;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIK,KAAKG,OAAL,EAJL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KA9CgC;;AAAA,SAgDjCG,WAhDiC,GAgDnB,MAAI;AACd,0BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KApDgC;AAAA;;AAMV,QAAjBC,iBAAiB,GAAE;AACrB,UAAMf,KAAK,CAACgB,QAAN,CAAef,aAAf,CAAN;AACA,UAAMD,KAAK,CAACgB,QAAN,CAAed,aAAf,CAAN;AACA,SAAKQ,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAEN,KAAK,CAACO,QAAN;AADA,KAAd;AAGAU,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBlB,KAAK,CAACO,QAAN,EAAhB;AACH;;AAyCDY,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKd,KAAL,CAAWE,QAAX,CAAoBc,IAA9C;;AACA,YAAQ,KAAKhB,KAAL,CAAWE,QAAX,CAAoBc,IAA5B;AACI,WAAK,IAAL;AACI,aAAKP,WAAL;;AACJ;AACI,aAAKC,WAAL;AAJR;AAMH;;AA9DgC;;AAiErC,eAAeX,YAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\"\nimport Options from \"../components/userHome/options\"\n\nimport CheckUserAuth from \"../auth/checkAuth\"\n\nimport { store } from \"../index\"\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\nclass UserHomePage extends Component {\n    state = { \n        page: [\"server\"],\n        userData: [store.getState()]\n    }\n\n    async componentDidMount(){        \n        await store.dispatch(fetchUserData)\n        await store.dispatch(checkUserAuth)\n        this.setState({\n            userData: store.getState()\n        }) \n        console.log(\"1\",store.getState())\n    }\n\n    changeState = (data)=>{\n        this.setState({\n            page:data\n        })\n     }\n\n    getPage = ()=>{\n         let component\n         switch (this.state.page){\n            case \"server\":\n                component = <Server userData={this.state.userData} />\n                break;\n            case \"options\":\n                component = <Options userData={this.state.userData} />\n                break;\n            default:\n                component = <Server userData={this.state.userData} />\n                break;\n            }\n        return component\n    }\n\n    authSuccess = ()=>{\n        return(\n            <dir className=\"userHomeLayout\">\n                <dir className=\"userHomesideMenu\">\n                    <SideMenu setState={this.changeState}/>\n                </dir>\n                {this.getPage()}\n            </dir> \n        )\n    }\n\n    authFaliure = ()=>{\n        return(\n            <Redirect to=\"/user/login\"/>\n        )\n    }\n\n    render() { \n        console.log(\"userdata: \", this.state.userData.auth)\n        switch (this.state.userData.auth) {\n            case true:\n                this.authSuccess()\n            default:\n                this.authFaliure()\n        }\n    }\n}\n \nexport default UserHomePage;\n\n\n//then you can just update state through resolving the promise.\n// useEffect(() => {\n\n//     fetch(\"https://blooming-bastion-30679.herokuapp.com/messages/question%22)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       setData(data);\n//       setlikes(data[data.length-1].likes); \n//       setid(data[data.length -1]._id);\n//       setAnswersYes(data[data.length -1].yes)\n//       setAnswersNo(data[data.length -1].no)\n//       console.log(\"This is a fetch function\")\n//     }).catch(err => {console.log(err)});\n\n\n// }, [id, likes,AnswersNo,AnswersYes,data]);"]},"metadata":{},"sourceType":"module"}