{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/pages/userHome.jsx\";\n// import React, { Component, useState, useEffect, useRef } from 'react';\n// import { Redirect } from \"react-router-dom\"\n// import axios from \"axios\"\n// import { useAsync } from \"react-async\"\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n// import CheckUserAuth from \"../auth/checkAuth\"\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n// const UserHomePage = (more, loadMore)=> {\n//     const [page, setPage] = useState([\"server\"])\n//     const [userData, setUserData] = useState([store.getState()])\n//     const componentIsMounted = useRef(true)\n//     // useAsync(store.dispatch(fetchUserData))\n//     // useAsync(store.dispatch(checkUserAuth))\n//     // console.log(\"1\",store.getState())\n//     useEffect(()=>{\n//         return()=>{\n//             componentIsMounted.current = false;\n//         }\n//     }, [])\n//     useEffect(()=>{\n//         const getAuth = async()=>{\n//             const cookieValue = document.cookie\n//             .split('; ')\n//             .find(row => row.startsWith('loginAuth='))\n//             .split('=')[1];\n//             axios.get(\"http://192.168.1.247:3001/api/user/auth\", { \n//                 withCredentials: true,\n//                 headers: {\n//                     'Accept': 'application/json',\n//                     'Content-Type': 'application/json',\n//                     \"Authorization\": cookieValue\n//                 }\n//             })\n//             .then(response=>{\n//                 console.log(\"req success!\")\n//                 setUserData(response)\n//             })\n//             .catch(err => console.log(err))    \n//         }\n//         getAuth()\n//     }, [more])\n//     const changeState = (data)=>{\n//         setPage(data)\n//     }\n//     const getPage = ()=>{\n//          let component\n//          switch (page){\n//             case \"server\":\n//                 component = <Server userData={userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={userData} />\n//                 break;\n//             }\n//         return component\n//     }\n//     const authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={changeState}/>\n//                 </dir>\n//                 {getPage()}\n//             </dir> \n//         )\n//     }\n//     const authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n//         console.log(\"userdata: \", userData[0].auth)\n//         switch (userData.auth) {\n//             case true:\n//                 return authSuccess()\n//             default:\n//                 return authFaliure()\n//         }\n// }\n// export default UserHomePage;\nimport React, { Component } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\nimport CheckUserAuth from \"../auth/checkAuth\";\nimport { store } from \"../index\";\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.auth = async () => {\n      await store.dispatch(fetchUserData);\n      await store.dispatch(checkUserAuth);\n\n      if (!store.getState()) {\n        this.render( /*#__PURE__*/_jsxDEV(\"dir\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this));\n      }\n\n      console.log(\"hello\");\n      this.setState({\n        userData: store.getState()\n      });\n    };\n\n    this.changeState = data => {\n      this.setState({\n        page: data\n      });\n    };\n\n    this.getPage = () => {\n      let component;\n\n      switch (this.state.page) {\n        case \"server\":\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"options\":\n          component = /*#__PURE__*/_jsxDEV(Options, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this);\n          break;\n\n        default:\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this);\n          break;\n      }\n\n      return component;\n    };\n\n    this.authSuccess = () => {\n      return /*#__PURE__*/_jsxDEV(\"dir\", {\n        className: \"userHomeLayout\",\n        children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"userHomesideMenu\",\n          children: /*#__PURE__*/_jsxDEV(SideMenu, {\n            setState: this.changeState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this), this.getPage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.authFaliure = () => {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/user/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      page: [\"server\"],\n      userData: [store.getState()]\n    };\n    const history = useHistory();\n  }\n\n  componentDidMount() {\n    // store.dispatch(fetchUserData)\n    // store.dispatch(checkUserAuth)\n    // this.setState({\n    //     userData: store.getState()\n    // }) \n    // const cookieValue = document.cookie\n    // .split('; ')\n    // .find(row => row.startsWith('loginAuth='))\n    // .split('=')[1];\n    // this.axiosCancelSource = axios.CancelToken.source()\n    // this._asyncRequest = axios.get(\"http://192.168.1.247:3001/api/user/auth\", { \n    //     cancelToken: this.axiosCancelSource.token,\n    //     withCredentials: true,\n    //     headers: {\n    //         'Accept': 'application/json',\n    //         'Content-Type': 'application/json',\n    //         \"Authorization\": cookieValue\n    //     }\n    // })\n    // .then((response)=>{\n    //     console.log(\"req success!\")\n    //     this._asyncRequest = null;\n    //     this.setState({\n    //         userPage: true\n    //     })\n    // })\n    // .catch(err => console.log(err))\n    console.log(\"1\", store.getState());\n    this.auth();\n    console.log(\"cookie: \", document.cookie);\n  }\n\n  render() {\n    console.log(\"userdata: \", this.state.userData);\n\n    switch (this.state.userData) {\n      case false:\n        return this.authSuccess();\n\n      default:\n        return this.authSuccess();\n    }\n  }\n\n}\n\nexport default UserHomePage;","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/pages/userHome.jsx"],"names":["React","Component","Redirect","useHistory","axios","SideMenu","Server","Options","CheckUserAuth","store","fetchUserData","checkUserAuth","UserHomePage","constructor","props","auth","dispatch","getState","render","console","log","setState","userData","changeState","data","page","getPage","component","state","authSuccess","authFaliure","history","componentDidMount","document","cookie"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,wBAA7C;;;AAEA,MAAMC,YAAN,SAA2BX,SAA3B,CAAqC;AACjCY,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgDnBC,IAhDmB,GAgDZ,YAAU;AACb,YAAMN,KAAK,CAACO,QAAN,CAAeN,aAAf,CAAN;AACA,YAAMD,KAAK,CAACO,QAAN,CAAeL,aAAf,CAAN;;AACA,UAAG,CAACF,KAAK,CAACQ,QAAN,EAAJ,EAAqB;AACjB,aAAKC,MAAL,eACI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAEb,KAAK,CAACQ,QAAN;AADA,OAAd;AAGH,KA9DkB;;AAAA,SA0EnBM,WA1EmB,GA0EJC,IAAD,IAAQ;AAClB,WAAKH,QAAL,CAAc;AACVI,QAAAA,IAAI,EAACD;AADK,OAAd;AAGF,KA9EiB;;AAAA,SAgFnBE,OAhFmB,GAgFT,MAAI;AACT,UAAIC,SAAJ;;AACA,cAAQ,KAAKC,KAAL,CAAWH,IAAnB;AACG,aAAK,QAAL;AACIE,UAAAA,SAAS,gBAAG,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWN;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACJ,aAAK,SAAL;AACIK,UAAAA,SAAS,gBAAG,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWN;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;;AACJ;AACIK,UAAAA,SAAS,gBAAG,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWN;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAAZ;AACA;AATP;;AAWD,aAAOK,SAAP;AACH,KA9FkB;;AAAA,SAgGnBE,WAhGmB,GAgGL,MAAI;AACd,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAE,KAAKN;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIK,KAAKG,OAAL,EAJL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAzGkB;;AAAA,SA2GnBI,WA3GmB,GA2GL,MAAI;AACd,0BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KA/GkB;;AAEf,SAAKF,KAAL,GAAa;AACTH,MAAAA,IAAI,EAAE,CAAC,QAAD,CADG;AAETH,MAAAA,QAAQ,EAAE,CAACb,KAAK,CAACQ,QAAN,EAAD;AAFD,KAAb;AAIA,UAAMc,OAAO,GAAG5B,UAAU,EAA1B;AACH;;AAED6B,EAAAA,iBAAiB,GAAE;AACf;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAb,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBX,KAAK,CAACQ,QAAN,EAAhB;AACA,SAAKF,IAAL;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBa,QAAQ,CAACC,MAAjC;AACH;;AAmEDhB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKQ,KAAL,CAAWN,QAArC;;AACA,YAAQ,KAAKM,KAAL,CAAWN,QAAnB;AACI,WAAK,KAAL;AACI,eAAO,KAAKO,WAAL,EAAP;;AACJ;AACI,eAAO,KAAKA,WAAL,EAAP;AAJR;AAMH;;AA1HgC;;AA6HrC,eAAejB,YAAf","sourcesContent":["// import React, { Component, useState, useEffect, useRef } from 'react';\n// import { Redirect } from \"react-router-dom\"\n// import axios from \"axios\"\n// import { useAsync } from \"react-async\"\n\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n\n// import CheckUserAuth from \"../auth/checkAuth\"\n\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\n// const UserHomePage = (more, loadMore)=> {\n\n//     const [page, setPage] = useState([\"server\"])\n//     const [userData, setUserData] = useState([store.getState()])\n//     const componentIsMounted = useRef(true)\n\n//     // useAsync(store.dispatch(fetchUserData))\n//     // useAsync(store.dispatch(checkUserAuth))\n\n//     // console.log(\"1\",store.getState())\n\n//     useEffect(()=>{\n//         return()=>{\n//             componentIsMounted.current = false;\n//         }\n//     }, [])\n\n//     useEffect(()=>{\n//         const getAuth = async()=>{\n//             const cookieValue = document.cookie\n//             .split('; ')\n//             .find(row => row.startsWith('loginAuth='))\n//             .split('=')[1];\n            \n//             axios.get(\"http://192.168.1.247:3001/api/user/auth\", { \n//                 withCredentials: true,\n//                 headers: {\n//                     'Accept': 'application/json',\n//                     'Content-Type': 'application/json',\n//                     \"Authorization\": cookieValue\n//                 }\n//             })\n//             .then(response=>{\n//                 console.log(\"req success!\")\n//                 setUserData(response)\n//             })\n//             .catch(err => console.log(err))    \n//         }\n//         getAuth()\n//     }, [more])\n\n//     const changeState = (data)=>{\n//         setPage(data)\n//     }\n\n//     const getPage = ()=>{\n//          let component\n//          switch (page){\n//             case \"server\":\n//                 component = <Server userData={userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={userData} />\n//                 break;\n//             }\n//         return component\n//     }\n\n//     const authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={changeState}/>\n//                 </dir>\n//                 {getPage()}\n//             </dir> \n//         )\n//     }\n\n//     const authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n\n//         console.log(\"userdata: \", userData[0].auth)\n//         switch (userData.auth) {\n//             case true:\n//                 return authSuccess()\n//             default:\n//                 return authFaliure()\n//         }\n// }\n \n// export default UserHomePage;\n\n\n\n\nimport React, { Component } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\"\nimport Options from \"../components/userHome/options\"\n\nimport CheckUserAuth from \"../auth/checkAuth\"\n\nimport { store } from \"../index\"\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\nclass UserHomePage extends Component {\n    constructor (props){\n        super(props)\n        this.state = { \n            page: [\"server\"],\n            userData: [store.getState()]\n        }\n        const history = useHistory()\n    }\n\n    componentDidMount(){        \n        // store.dispatch(fetchUserData)\n        // store.dispatch(checkUserAuth)\n        // this.setState({\n        //     userData: store.getState()\n        // }) \n\n\n        // const cookieValue = document.cookie\n        // .split('; ')\n        // .find(row => row.startsWith('loginAuth='))\n        // .split('=')[1];\n        \n        // this.axiosCancelSource = axios.CancelToken.source()\n\n        // this._asyncRequest = axios.get(\"http://192.168.1.247:3001/api/user/auth\", { \n        //     cancelToken: this.axiosCancelSource.token,\n        //     withCredentials: true,\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'Content-Type': 'application/json',\n        //         \"Authorization\": cookieValue\n        //     }\n        // })\n        // .then((response)=>{\n        //     console.log(\"req success!\")\n        //     this._asyncRequest = null;\n        //     this.setState({\n        //         userPage: true\n        //     })\n        // })\n        // .catch(err => console.log(err))\n\n\n        console.log(\"1\",store.getState())\n        this.auth()\n        console.log(\"cookie: \", document.cookie)\n    }\n\n    auth = async ()=>{\n        await store.dispatch(fetchUserData)\n        await store.dispatch(checkUserAuth)\n        if(!store.getState()){\n            this.render(\n                <dir>\n                    <h1>hello</h1>\n                </dir>\n            )\n        }\n        console.log(\"hello\")\n        this.setState({\n            userData: store.getState()\n        }) \n    }\n\n    // componentWillUnmount() {\n    //     if (this._asyncRequest) {\n    //         this.axiosCancelSource.cancel('Axios request canceled.')\n    //     }\n    // }\n\n    // componentDidUpdate(prevProps, prevState, snapshot){\n    //     console.log(\"component update\")\n    // }\n    \n    changeState = (data)=>{\n        this.setState({\n            page:data\n        })\n     }\n\n    getPage = ()=>{\n         let component\n         switch (this.state.page){\n            case \"server\":\n                component = <Server userData={this.state.userData} />\n                break;\n            case \"options\":\n                component = <Options userData={this.state.userData} />\n                break;\n            default:\n                component = <Server userData={this.state.userData} />\n                break;\n            }\n        return component\n    }\n\n    authSuccess = ()=>{\n        return(\n            <dir className=\"userHomeLayout\">\n                <dir className=\"userHomesideMenu\">\n                    <SideMenu setState={this.changeState}/>\n                </dir>\n                {this.getPage()}\n            </dir> \n        )\n    }\n\n    authFaliure = ()=>{\n        return(\n            <Redirect to=\"/user/login\"/>\n        )\n    }\n\n    render() { \n        console.log(\"userdata: \", this.state.userData)\n        switch (this.state.userData) {\n            case false:\n                return this.authSuccess()\n            default:\n                return this.authSuccess()\n        }\n    }\n}\n \nexport default UserHomePage;"]},"metadata":{},"sourceType":"module"}