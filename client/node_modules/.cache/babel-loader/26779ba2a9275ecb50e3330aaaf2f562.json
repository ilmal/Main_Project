{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/pages/userHome.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\nimport CheckUserAuth from \"../auth/checkAuth\";\nimport { store } from \"../index\";\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserHomePage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [page, setPage] = useState([\"server\"]);\n  const [userData, setUserData] = useState([store.getState()]); // useAsync(store.dispatch(fetchUserData))\n  // useAsync(store.dispatch(checkUserAuth))\n  // console.log(\"1\",store.getState())\n\n  auth = _s(async () => {\n    _s();\n\n    await store.dispatch(fetchUserData);\n    await store.dispatch(checkUserAuth);\n    const history = useHistory();\n    history.push(\"/\");\n    console.log(\"hello\");\n    this.setState({\n      userData: store.getState()\n    });\n  }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", true);\n\n  const changeState = data => {\n    setPage(data);\n  };\n\n  const getPage = () => {\n    let component;\n\n    switch (page) {\n      case \"server\":\n        component = /*#__PURE__*/_jsxDEV(Server, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this);\n        break;\n\n      case \"options\":\n        component = /*#__PURE__*/_jsxDEV(Options, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this);\n        break;\n\n      default:\n        component = /*#__PURE__*/_jsxDEV(Server, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this);\n        break;\n    }\n\n    return component;\n  };\n\n  const authSuccess = () => {\n    return /*#__PURE__*/_jsxDEV(\"dir\", {\n      className: \"userHomeLayout\",\n      children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n        className: \"userHomesideMenu\",\n        children: /*#__PURE__*/_jsxDEV(SideMenu, {\n          setState: changeState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), getPage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  };\n\n  const authFaliure = () => {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/user/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n\n  console.log(\"userdata: \", userData[0].auth);\n\n  switch (userData.auth) {\n    case true:\n      return authSuccess();\n\n    default:\n      return authFaliure();\n  }\n};\n\n_s2(UserHomePage, \"OppuzNnjCJ4q/h8B729Fomj4i1w=\");\n\n_c = UserHomePage;\nexport default UserHomePage; // import React, { Component } from 'react';\n// import { Redirect, useHistory } from \"react-router-dom\"\n// import axios from \"axios\"\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n// import CheckUserAuth from \"../auth/checkAuth\"\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n// class UserHomePage extends Component {\n//     constructor (props){\n//         super(props)\n//         this.state = { \n//             page: [\"server\"],\n//             userData: [store.getState()]\n//         }\n//     }\n//     componentDidMount(){        \n//         // store.dispatch(fetchUserData)\n//         // store.dispatch(checkUserAuth)\n//         // this.setState({\n//         //     userData: store.getState()\n//         // }) \n//         // const cookieValue = document.cookie\n//         // .split('; ')\n//         // .find(row => row.startsWith('loginAuth='))\n//         // .split('=')[1];\n//         // this.axiosCancelSource = axios.CancelToken.source()\n//         // this._asyncRequest = axios.get(\"http://192.168.1.247:3001/api/user/auth\", { \n//         //     cancelToken: this.axiosCancelSource.token,\n//         //     withCredentials: true,\n//         //     headers: {\n//         //         'Accept': 'application/json',\n//         //         'Content-Type': 'application/json',\n//         //         \"Authorization\": cookieValue\n//         //     }\n//         // })\n//         // .then((response)=>{\n//         //     console.log(\"req success!\")\n//         //     this._asyncRequest = null;\n//         //     this.setState({\n//         //         userPage: true\n//         //     })\n//         // })\n//         // .catch(err => console.log(err))\n//         console.log(\"1\",store.getState())\n//         this.auth()\n//         console.log(\"cookie: \", document.cookie)\n//     }\n//     auth = async ()=>{\n//         await store.dispatch(fetchUserData)\n//         await store.dispatch(checkUserAuth)\n//         const history = useHistory()\n//         history.push(\"/\")\n//         if(!store.getState()){\n//             this.render(\n//                 <dir>\n//                     <h1>hello</h1>\n//                 </dir>\n//             )\n//         }\n//         console.log(\"hello\")\n//         this.setState({\n//             userData: store.getState()\n//         }) \n//     }\n//     // componentWillUnmount() {\n//     //     if (this._asyncRequest) {\n//     //         this.axiosCancelSource.cancel('Axios request canceled.')\n//     //     }\n//     // }\n//     // componentDidUpdate(prevProps, prevState, snapshot){\n//     //     console.log(\"component update\")\n//     // }\n//     changeState = (data)=>{\n//         this.setState({\n//             page:data\n//         })\n//      }\n//     getPage = ()=>{\n//          let component\n//          switch (this.state.page){\n//             case \"server\":\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={this.state.userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             }\n//         return component\n//     }\n//     authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={this.changeState}/>\n//                 </dir>\n//                 {this.getPage()}\n//             </dir> \n//         )\n//     }\n//     authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n//     render() { \n//         console.log(\"userdata: \", this.state.userData)\n//         switch (this.state.userData) {\n//             case false:\n//                 return this.authSuccess()\n//             default:\n//                 return this.authSuccess()\n//         }\n//     }\n// }\n// export default UserHomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserHomePage\");","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/pages/userHome.jsx"],"names":["React","Component","useState","useEffect","useRef","Redirect","axios","useAsync","SideMenu","Server","Options","CheckUserAuth","store","fetchUserData","checkUserAuth","UserHomePage","page","setPage","userData","setUserData","getState","auth","dispatch","history","useHistory","push","console","log","setState","changeState","data","getPage","component","authSuccess","authFaliure"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useAsync } from \"react-async\"\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\"\nimport Options from \"../components/userHome/options\"\n\nimport CheckUserAuth from \"../auth/checkAuth\"\n\nimport { store } from \"../index\"\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\nconst UserHomePage = ()=> {\n\n    const [page, setPage] = useState([\"server\"])\n    const [userData, setUserData] = useState([store.getState()])\n\n    // useAsync(store.dispatch(fetchUserData))\n    // useAsync(store.dispatch(checkUserAuth))\n\n    // console.log(\"1\",store.getState())\n\n\n    auth = async ()=>{\n        await store.dispatch(fetchUserData)\n        await store.dispatch(checkUserAuth)\n        const history = useHistory()\n        history.push(\"/\")\n        console.log(\"hello\")\n        this.setState({\n            userData: store.getState()\n        }) \n    }\n\n    const changeState = (data)=>{\n        setPage(data)\n    }\n\n    const getPage = ()=>{\n         let component\n         switch (page){\n            case \"server\":\n                component = <Server userData={userData} />\n                break;\n            case \"options\":\n                component = <Options userData={userData} />\n                break;\n            default:\n                component = <Server userData={userData} />\n                break;\n            }\n        return component\n    }\n\n    const authSuccess = ()=>{\n        return(\n            <dir className=\"userHomeLayout\">\n                <dir className=\"userHomesideMenu\">\n                    <SideMenu setState={changeState}/>\n                </dir>\n                {getPage()}\n            </dir> \n        )\n    }\n\n    const authFaliure = ()=>{\n        return(\n            <Redirect to=\"/user/login\"/>\n        )\n    }\n\n        console.log(\"userdata: \", userData[0].auth)\n        switch (userData.auth) {\n            case true:\n                return authSuccess()\n            default:\n                return authFaliure()\n        }\n}\n \nexport default UserHomePage;\n\n\n\n\n// import React, { Component } from 'react';\n// import { Redirect, useHistory } from \"react-router-dom\"\n// import axios from \"axios\"\n\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n\n// import CheckUserAuth from \"../auth/checkAuth\"\n\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\n// class UserHomePage extends Component {\n//     constructor (props){\n//         super(props)\n//         this.state = { \n//             page: [\"server\"],\n//             userData: [store.getState()]\n//         }\n//     }\n\n//     componentDidMount(){        \n//         // store.dispatch(fetchUserData)\n//         // store.dispatch(checkUserAuth)\n//         // this.setState({\n//         //     userData: store.getState()\n//         // }) \n\n\n//         // const cookieValue = document.cookie\n//         // .split('; ')\n//         // .find(row => row.startsWith('loginAuth='))\n//         // .split('=')[1];\n        \n//         // this.axiosCancelSource = axios.CancelToken.source()\n\n//         // this._asyncRequest = axios.get(\"http://192.168.1.247:3001/api/user/auth\", { \n//         //     cancelToken: this.axiosCancelSource.token,\n//         //     withCredentials: true,\n//         //     headers: {\n//         //         'Accept': 'application/json',\n//         //         'Content-Type': 'application/json',\n//         //         \"Authorization\": cookieValue\n//         //     }\n//         // })\n//         // .then((response)=>{\n//         //     console.log(\"req success!\")\n//         //     this._asyncRequest = null;\n//         //     this.setState({\n//         //         userPage: true\n//         //     })\n//         // })\n//         // .catch(err => console.log(err))\n\n\n//         console.log(\"1\",store.getState())\n//         this.auth()\n//         console.log(\"cookie: \", document.cookie)\n//     }\n\n//     auth = async ()=>{\n//         await store.dispatch(fetchUserData)\n//         await store.dispatch(checkUserAuth)\n//         const history = useHistory()\n//         history.push(\"/\")\n//         if(!store.getState()){\n//             this.render(\n//                 <dir>\n//                     <h1>hello</h1>\n//                 </dir>\n//             )\n//         }\n//         console.log(\"hello\")\n//         this.setState({\n//             userData: store.getState()\n//         }) \n//     }\n\n//     // componentWillUnmount() {\n//     //     if (this._asyncRequest) {\n//     //         this.axiosCancelSource.cancel('Axios request canceled.')\n//     //     }\n//     // }\n\n//     // componentDidUpdate(prevProps, prevState, snapshot){\n//     //     console.log(\"component update\")\n//     // }\n    \n//     changeState = (data)=>{\n//         this.setState({\n//             page:data\n//         })\n//      }\n\n//     getPage = ()=>{\n//          let component\n//          switch (this.state.page){\n//             case \"server\":\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={this.state.userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={this.state.userData} />\n//                 break;\n//             }\n//         return component\n//     }\n\n//     authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={this.changeState}/>\n//                 </dir>\n//                 {this.getPage()}\n//             </dir> \n//         )\n//     }\n\n//     authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n\n//     render() { \n//         console.log(\"userdata: \", this.state.userData)\n//         switch (this.state.userData) {\n//             case false:\n//                 return this.authSuccess()\n//             default:\n//                 return this.authSuccess()\n//         }\n//     }\n// }\n \n// export default UserHomePage;"]},"metadata":{},"sourceType":"module"}