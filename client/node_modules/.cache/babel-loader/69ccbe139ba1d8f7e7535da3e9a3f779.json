{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { store } from \"../../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeServerConfig = () => {\n  _s();\n\n  // stateful settings\n  const state = useSelector(state => state);\n  const [change, setChange] = useState(false);\n  const [whitelist, setWhitelist] = useState(state.env[6].value.split(\",\"));\n  const [opslist, setOpslist] = useState(state.env[7].value.split(\",\"));\n  let i = 0;\n\n  const toggle = () => {\n    setChange(prev => !prev);\n  }; //data for Difficulty and Versions\n\n\n  const versions = [state.env[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\", \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\", \"1.12.2\", \"1.12.1\", \"1.12\"];\n  let versionBoiler = versions.map(d => {\n    i++;\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  });\n  const difficulties = [state.env[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"];\n  const difficultiesBoiler = difficulties.map(d => {\n    i++;\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }); //data for Whitelist\n\n  const changeWhite = async data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (whitelist.includes(data.target.value)) {\n          throw \"name already given\";\n        } // if (whitelist = [\"\"]) {\n        //     console.log(\"hello\")\n        // }\n        //await setWhitelist(state.env[6].value.split(\",\"))\n        //let test = state.env[6].value.split(\",\")\n\n\n        console.log(\"whitelistTest: \", whitelist); // test.concat(data.target.value)\n        // data.target.value = \"\"\n\n        console.log(\"whitelistTest: \", whitelist);\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const WhitelistList = () => {\n    if (state.env[6].value === null) {\n      return null;\n    } else {\n      let whiteArray = whitelist;\n      let i = 0;\n      return state.env[6].value.split(\",\").map(e => {\n        i += 1;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  };\n\n  const WhitelistListChange = () => {\n    if (state.env[6].value === null) {\n      return null;\n    } else {\n      let whiteArray = state.env[6].value.split(\",\");\n      let i = 0;\n      return whiteArray.map(e => {\n        i += 1;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"whiteArray\",\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  }; //data for Ops\n\n\n  const changeOps = data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (opslist.includes(data.target.value)) {\n          throw \"name already given\";\n        }\n\n        setOpslist(opslist.concat(data.target.value));\n        data.target.value = \"\";\n        console.log(opslist);\n        console.log(opslist.length);\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const OpslistList = () => {\n    if (state.env[7].value === null) {\n      return null;\n    } else {\n      let whiteArray = state.env[6].value.split(\",\");\n      let i = 0;\n      return whiteArray.map(e => {\n        i += 1;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"whiteArray\",\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  };\n\n  const OpslistListChange = () => {\n    if (state.env[7].value === null) {\n      return null;\n    } else {\n      let whiteArray = state.env[6].value.split(\",\");\n      let i = 0;\n      return whiteArray.map(e => {\n        i += 1;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"opsArray\",\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  };\n\n  const defaultFunc = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userHomeSegment userHomeChangeConfig\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: state.env[4].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: state.env[3].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: state.env[5].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"whitelist: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ops: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(OpslistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeBtn userHomeChangeDefaults\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggle,\n          children: \"change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  };\n\n  const changeFunc = () => {\n    let configSize = \"userHomeChangeConfig userHomeSegment\";\n\n    if (opslist.length > 4) {\n      configSize = \"userHomeChangeConfigExtendOne userHomeSegment\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: configSize,\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"userHomeChangeServer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          children: versionBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          children: difficultiesBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Whitelists:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WhitelistListChange, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: changeWhite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ops:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OpslistListChange, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: changeOps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeBtn userHomeChangeDefaults\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggle,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  };\n\n  switch (change) {\n    case true:\n      return changeFunc();\n\n    default:\n      return defaultFunc();\n  }\n};\n\n_s(ChangeServerConfig, \"etzn/GMPm63Pm+3cMLAyJNR9VLs=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChangeServerConfig;\nexport default ChangeServerConfig; // import React, {\n//     Component\n// } from \"react\"\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n//     }\n//     changeFunc = () => {\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n// export default ChangeServerConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeServerConfig\");","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx"],"names":["React","useState","useSelector","store","ChangeServerConfig","state","change","setChange","whitelist","setWhitelist","env","value","split","opslist","setOpslist","i","toggle","prev","versions","versionBoiler","map","d","difficulties","difficultiesBoiler","changeWhite","data","key","preventDefault","target","includes","console","log","result","WhitelistList","whiteArray","e","WhitelistListChange","changeOps","concat","length","OpslistList","OpslistListChange","defaultFunc","changeFunc","configSize"],"mappings":"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sourcesContent":["import React, { useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { store } from \"../../index\";\n\nconst ChangeServerConfig = () => {\n    // stateful settings\n    const state = useSelector(state => state)\n    const [change, setChange] = useState(false)\n    const [whitelist, setWhitelist] = useState(state.env[6].value.split(\",\"))\n    const [opslist, setOpslist] = useState(state.env[7].value.split(\",\"))\n    let i = 0;\n\n    const toggle = () => {\n        setChange((prev) => !prev)\n    }\n\n    //data for Difficulty and Versions\n    const versions = [state.env[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n        \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n        \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    let versionBoiler = versions.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    const difficulties = [state.env[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"]\n\n    const difficultiesBoiler = difficulties.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    //data for Whitelist\n    const changeWhite = async (data) => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (whitelist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                // if (whitelist = [\"\"]) {\n                //     console.log(\"hello\")\n                // }\n\n                //await setWhitelist(state.env[6].value.split(\",\"))\n                //let test = state.env[6].value.split(\",\")\n                console.log(\"whitelistTest: \", whitelist)\n                // test.concat(data.target.value)\n                // data.target.value = \"\"\n                console.log(\"whitelistTest: \", whitelist)\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const WhitelistList = () => {\n        if (state.env[6].value === null) {\n            return null\n        } else {\n            let whiteArray = whitelist\n            let i = 0;\n            return state.env[6].value.split(\",\").map((e) => {\n                i += 1\n                return <span key={i}>{e}</span>\n            })\n        }\n    }\n\n    const WhitelistListChange = () => {\n        if (state.env[6].value === null) {\n            return null\n        } else {\n            let whiteArray = state.env[6].value.split(\",\")\n            let i = 0;\n            return whiteArray.map((e) => {\n                i += 1\n                return <span className=\"whiteArray\" key={i}>{e}</span>\n            })\n        }\n    }\n\n    //data for Ops\n    const changeOps = data => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (opslist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setOpslist(opslist.concat(data.target.value))\n                data.target.value = \"\"\n                console.log(opslist)\n                console.log(opslist.length)\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const OpslistList = () => {\n        if (state.env[7].value === null) {\n            return null\n        } else {\n            let whiteArray = state.env[6].value.split(\",\")\n            let i = 0;\n            return whiteArray.map((e) => {\n                i += 1\n                return <span className=\"whiteArray\" key={i}>{e}</span>\n            })\n        }\n    }\n\n    const OpslistListChange = () => {\n        if (state.env[7].value === null) {\n            return null\n        } else {\n            let whiteArray = state.env[6].value.split(\",\")\n            let i = 0;\n            return whiteArray.map((e) => {\n                i += 1\n                return <span className=\"opsArray\" key={i}>{e}</span>\n            })\n        }\n    }\n\n    const defaultFunc = () => {\n        return (\n            <div className=\"userHomeSegment userHomeChangeConfig\">\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <span>{state.env[4].value}</span>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Version: </p>\n                    <span>{state.env[3].value}</span>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Difficulty: </p>\n                    <span>{state.env[5].value}</span>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>whitelist: </p>\n                    <span><WhitelistList /></span>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>ops: </p>\n                    <span><OpslistList /></span>\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>change</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    const changeFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <form className={configSize} onSubmit={e => { e.preventDefault(); }}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <input type=\"text\" className=\"userHomeChangeServer\" />\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Server Version: </p>\n                    <select name=\"\" id=\"\">\n                        {versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Server Difficulty: </p>\n                    <select name=\"\" id=\"\">\n                        {difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>Whitelists:</p>\n                    <WhitelistListChange />\n                    <input type=\"text\" onKeyPress={changeWhite} />\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>Ops:</p>\n                    <OpslistListChange />\n                    <input type=\"text\" onKeyPress={changeOps} />\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>save</button>\n                </div>\n            </form>\n        );\n    }\n\n    switch (change) {\n        case true:\n            return changeFunc()\n        default:\n            return defaultFunc()\n    }\n}\n\nexport default ChangeServerConfig\n\n\n\n// import React, {\n//     Component\n// } from \"react\"\n\n\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n\n//     }\n\n\n//     changeFunc = () => {\n\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n\n// export default ChangeServerConfig;"]},"metadata":{},"sourceType":"module"}