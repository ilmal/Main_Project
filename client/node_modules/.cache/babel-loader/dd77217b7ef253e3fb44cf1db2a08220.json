{"ast":null,"code":"import axios from \"axios\";\nexport const fetchUserData = async (dispatch, getState) => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  axios.defaults.headers.common['Access-Control-Allow-Origin'] = \"*\";\n  await axios.post(\"https://192.168.1.247:3001/api/user\", {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"FETCH_USER_SUCCESS\",\n      payload: res.data\n    });\n  });\n};\nexport const checkUserAuth = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('loginAuth=')).split('=')[1];\n  }\n\n  await axios.get(\"https://192.168.1.247:3001/api/user/auth\", {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": cookieValue\n    }\n  }).then(response => {\n    dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: response.data.auth\n    });\n  });\n};\nexport const authSucess = dispatch => {\n  dispatch({\n    type: \"AUTH_SUCCESS\"\n  });\n};\nexport const createMcConfig = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"https://192.168.1.247:3001/api/mcConf/create\", {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const startServer = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"https://192.168.1.247:3001/api/server\", {\n    id: cookieValue,\n    action: \"start\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const stopServer = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"https://192.168.1.247:3001/api/server\", {\n    id: cookieValue,\n    action: \"stop\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const serverPodsInfo = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"https://192.168.1.247:3001/api/k8s/pods\", {\n    id: cookieValue\n  }).then(res => {\n    console.log(res);\n    dispatch({\n      type: \"SERVER_PODS_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverSVCInfo = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"https://192.168.1.247:3001/api/k8s/svc\", {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"SERVER_SVC_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const mcConfGetData = async dispatch => {\n  let cookieValue = null;\n\n  if (document.cookie) {\n    cookieValue = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n  }\n\n  await axios.post(\"https://192.168.1.247:3001/api/mcConf/getData\", {\n    id: cookieValue\n  }).then(res => {\n    dispatch({\n      type: \"MC_CONF_GET_DATA\",\n      payload: res.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/redux/actions/index.jsx"],"names":["axios","fetchUserData","dispatch","getState","cookieValue","document","cookie","split","find","row","startsWith","defaults","headers","common","post","id","then","res","type","payload","data","checkUserAuth","get","withCredentials","response","auth","authSucess","createMcConfig","startServer","action","stopServer","serverPodsInfo","console","log","serverSVCInfo","mcConfGetData"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nexport const fetchUserData = async (dispatch, getState) => {\n\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n    axios.defaults.headers.common['Access-Control-Allow-Origin'] = \"*\";\n    await axios.post(\"https://192.168.1.247:3001/api/user\", {\n        id: cookieValue,\n    })\n        .then(res => {\n            dispatch({\n                type: \"FETCH_USER_SUCCESS\",\n                payload: res.data\n            })\n        })\n}\n\nexport const checkUserAuth = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('loginAuth='))\n            .split('=')[1];\n    }\n\n    await axios.get(\"https://192.168.1.247:3001/api/user/auth\", {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": cookieValue\n        }\n    })\n        .then(response => {\n            dispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: response.data.auth\n            })\n        })\n}\n\nexport const authSucess = (dispatch) => {\n    dispatch({\n        type: \"AUTH_SUCCESS\"\n    })\n}\n\nexport const createMcConfig = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"https://192.168.1.247:3001/api/mcConf/create\", {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const startServer = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"https://192.168.1.247:3001/api/server\", {\n        id: cookieValue,\n        action: \"start\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const stopServer = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"https://192.168.1.247:3001/api/server\", {\n        id: cookieValue,\n        action: \"stop\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const serverPodsInfo = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"https://192.168.1.247:3001/api/k8s/pods\", {\n        id: cookieValue\n    })\n        .then(res => {\n            console.log(res)\n            dispatch({\n                type: \"SERVER_PODS_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverSVCInfo = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"https://192.168.1.247:3001/api/k8s/svc\", {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"SERVER_SVC_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const mcConfGetData = async (dispatch) => {\n    let cookieValue = null\n    if (document.cookie) {\n        cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n    }\n\n    await axios.post(\"https://192.168.1.247:3001/api/mcConf/getData\", {\n        id: cookieValue\n    })\n        .then(res => {\n            dispatch({\n                type: \"MC_CONF_GET_DATA\",\n                payload: res.data\n            })\n        })\n}"]},"metadata":{},"sourceType":"module"}