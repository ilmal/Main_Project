{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { store } from \"../../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeServerConfig = () => {\n  _s();\n\n  // stateful settings\n  const [userData, updateUserData] = useState(store.getState());\n  const [change, setChange] = useState(false);\n  const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"]);\n  const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"]);\n  store.subscribe(() => {\n    updateUserData(store.getState());\n  });\n\n  const toggle = () => {\n    setChange(prev => !prev);\n  }; //data for Difficulty and Versions\n\n\n  const versions = [userData.env.env[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\", \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\", \"1.12.2\", \"1.12.1\", \"1.12\"];\n  let versionBoiler = versions.map(d => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, d, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  });\n  const difficulties = [userData.env.env[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"];\n  const difficultiesBoiler = difficulties.map(d => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: d,\n      children: d\n    }, d, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }); //data for Whitelist\n\n  const changeWhite = data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (whitelist.includes(data.target.value)) {\n          throw \"name already given\";\n        }\n\n        setWhitelist(userData.env.env[6].value.concat(data.target.value));\n        data.target.value = \"\";\n        console.log(userData.env.env[6].value);\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const WhitelistList = () => {\n    if (userData.env.env[6].value === null) {\n      return null;\n    } else {\n      let whiteArray = userData.env.env[6].value.split(\",\");\n      return whiteArray.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: e\n        }, e, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  };\n\n  const WhitelistListChange = () => {\n    if (userData.env.env[6].value === null) {\n      return null;\n    } else {\n      let whiteArray = userData.env.env[6].value.split(\",\");\n      let i = 0;\n      return whiteArray.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"whiteArray\",\n          children: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this);\n        i += 1;\n      });\n    }\n  }; //data for Ops\n\n\n  const changeOps = data => {\n    if (data.key === \"Enter\") {\n      data.preventDefault();\n\n      try {\n        if (data.target.value === \"\") {\n          throw \"empty value\";\n        }\n\n        if (opslist.includes(data.target.value)) {\n          throw \"name already given\";\n        }\n\n        setOpslist(opslist.concat(data.target.value));\n        data.target.value = \"\";\n        console.log(opslist);\n        console.log(opslist.length);\n      } catch (result) {\n        console.log(result);\n      }\n    }\n  };\n\n  const OpslistList = () => {\n    if (userData.env.env[7].value === null) {\n      return null;\n    } else {\n      let whiteArray = userData.env.env[6].value.split(\",\");\n      return whiteArray.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"whiteArray\",\n          children: e\n        }, e, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  };\n\n  const OpslistListChange = () => {\n    if (userData.env.env[7].value === null) {\n      return null;\n    } else {\n      let whiteArray = userData.env.env[6].value.split(\",\");\n      return whiteArray.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"opsArray\",\n          children: e\n        }, e, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  };\n\n  const defaultFunc = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userHomeSegment userHomeChangeConfig\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: userData.env.env[4].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: userData.env.env[3].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: userData.env.env[5].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"whitelist: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(WhitelistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ops: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(OpslistList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeBtn userHomeChangeDefaults\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggle,\n          children: \"change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  };\n\n  const changeFunc = () => {\n    let configSize = \"userHomeChangeConfig userHomeSegment\";\n    console.log(\"helloOne\");\n\n    if (opslist.length > 4) {\n      configSize = \"userHomeChangeConfigExtendOne userHomeSegment\";\n      console.log(\"hello\");\n    }\n\n    console.log(configSize);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: configSize,\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeServerName userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"userHomeChangeServer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeVersion userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Version: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          children: versionBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeDifficulty userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server Difficulty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          children: difficultiesBoiler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeWhitelist userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Whitelists:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WhitelistListChange, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: changeWhite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeOps userHomeChangeDefaults\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ops:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OpslistListChange, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: changeOps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHomeChangeBtn userHomeChangeDefaults\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggle,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  };\n\n  switch (change) {\n    case true:\n      return changeFunc();\n\n    default:\n      return defaultFunc();\n  }\n};\n\n_s(ChangeServerConfig, \"zIcAgWtIlVPGauq3/2jeEia5Hnw=\");\n\n_c = ChangeServerConfig;\nexport default ChangeServerConfig; // import React, {\n//     Component\n// } from \"react\"\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n//     }\n//     changeFunc = () => {\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n// export default ChangeServerConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeServerConfig\");","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx"],"names":["React","useState","store","ChangeServerConfig","userData","updateUserData","getState","change","setChange","whitelist","setWhitelist","opslist","setOpslist","subscribe","toggle","prev","versions","env","value","versionBoiler","map","d","difficulties","difficultiesBoiler","changeWhite","data","key","preventDefault","target","includes","concat","console","log","result","WhitelistList","whiteArray","split","e","WhitelistListChange","i","changeOps","length","OpslistList","OpslistListChange","defaultFunc","changeFunc","configSize"],"mappings":"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AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH,GA5CD;;AA8CA,UAAQP,MAAR;AACI,SAAK,IAAL;AACI,aAAOsC,UAAU,EAAjB;;AACJ;AACI,aAAOD,WAAW,EAAlB;AAJR;AAMH,CA1MD;;GAAMzC,kB;;KAAAA,kB;AA4MN,eAAeA,kBAAf,C,CAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from \"react\"\nimport { store } from \"../../index\";\n\nconst ChangeServerConfig = () => {\n    // stateful settings\n    const [userData, updateUserData] = useState(store.getState());\n    const [change, setChange] = useState(false)\n    const [whitelist, setWhitelist] = useState([\"nils\", \"miniPancookies\"])\n    const [opslist, setOpslist] = useState([\"nils\", \"miniPancookies\"])\n\n    store.subscribe(() => {\n        updateUserData(store.getState());\n    });\n\n    const toggle = () => {\n        setChange((prev) => !prev)\n    }\n\n    //data for Difficulty and Versions\n    const versions = [userData.env.env[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n        \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n        \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    let versionBoiler = versions.map((d) => {\n        return <option value={d} key={d}>{d}</option>\n    })\n\n    const difficulties = [userData.env.env[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"]\n\n    const difficultiesBoiler = difficulties.map((d) => {\n        return <option value={d} key={d}>{d}</option>\n    })\n\n    //data for Whitelist\n    const changeWhite = data => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (whitelist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setWhitelist(userData.env.env[6].value.concat(data.target.value))\n                data.target.value = \"\"\n                console.log(userData.env.env[6].value)\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const WhitelistList = () => {\n        if (userData.env.env[6].value === null) {\n            return null\n        } else {\n            let whiteArray = userData.env.env[6].value.split(\",\")\n            return whiteArray.map((e) => {\n                return <span key={e}>{e}</span>\n            })\n        }\n    }\n\n    const WhitelistListChange = () => {\n        if (userData.env.env[6].value === null) {\n            return null\n        } else {\n            let whiteArray = userData.env.env[6].value.split(\",\")\n            let i = 0;\n            return whiteArray.map((e, i) => {\n                return <span className=\"whiteArray\" key={i}>{e}</span>\n                i += 1\n            })\n        }\n    }\n\n    //data for Ops\n    const changeOps = data => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (opslist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setOpslist(opslist.concat(data.target.value))\n                data.target.value = \"\"\n                console.log(opslist)\n                console.log(opslist.length)\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const OpslistList = () => {\n        if (userData.env.env[7].value === null) {\n            return null\n        } else {\n            let whiteArray = userData.env.env[6].value.split(\",\")\n            return whiteArray.map((e) => {\n                return <span className=\"whiteArray\" key={e}>{e}</span>\n            })\n        }\n    }\n\n    const OpslistListChange = () => {\n        if (userData.env.env[7].value === null) {\n            return null\n        } else {\n            let whiteArray = userData.env.env[6].value.split(\",\")\n            return whiteArray.map((e) => {\n                return <span className=\"opsArray\" key={e}>{e}</span>\n            })\n        }\n    }\n\n    const defaultFunc = () => {\n        return (\n            <div className=\"userHomeSegment userHomeChangeConfig\">\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <span>{userData.env.env[4].value}</span>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Version: </p>\n                    <span>{userData.env.env[3].value}</span>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Difficulty: </p>\n                    <span>{userData.env.env[5].value}</span>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>whitelist: </p>\n                    <span><WhitelistList /></span>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>ops: </p>\n                    <span><OpslistList /></span>\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>change</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    const changeFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        console.log(\"helloOne\")\n        if (opslist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n            console.log(\"hello\")\n        }\n\n        console.log(configSize)\n\n        return (\n            <form className={configSize} onSubmit={e => { e.preventDefault(); }}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <input type=\"text\" className=\"userHomeChangeServer\" />\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Server Version: </p>\n                    <select name=\"\" id=\"\">\n                        {versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Server Difficulty: </p>\n                    <select name=\"\" id=\"\">\n                        {difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>Whitelists:</p>\n                    <WhitelistListChange />\n                    <input type=\"text\" onKeyPress={changeWhite} />\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>Ops:</p>\n                    <OpslistListChange />\n                    <input type=\"text\" onKeyPress={changeOps} />\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>save</button>\n                </div>\n            </form>\n        );\n    }\n\n    switch (change) {\n        case true:\n            return changeFunc()\n        default:\n            return defaultFunc()\n    }\n}\n\nexport default ChangeServerConfig\n\n\n\n// import React, {\n//     Component\n// } from \"react\"\n\n\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n\n//     }\n\n\n//     changeFunc = () => {\n\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n\n// export default ChangeServerConfig;"]},"metadata":{},"sourceType":"module"}