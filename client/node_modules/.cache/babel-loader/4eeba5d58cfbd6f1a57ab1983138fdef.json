{"ast":null,"code":"export default (async () => {\n  await store.dispatch(checkUserAuth);\n  await store.dispatch(getQuaryParams);\n  await store.dispatch(getCookies);\n  await store.dispatch(productInfo);\n\n  if (store.getState().cookies.userID !== undefined && store.getState().cookies.userID !== \"\") {\n    // cheking if user is logged in\n    await store.dispatch(fetchUserData);\n\n    if (store.getState().user.past_servers.length > 0) {\n      // cheking if user have/ had a server\n      await store.dispatch(createMcConfig);\n      await store.dispatch(serverPodsInfo);\n      await store.dispatch(serverSVCInfo);\n      await store.dispatch(serverInfo);\n    }\n  }\n\n  console.log(\"data after fetch func: \", store.getState()); // check if loginReset is true, if case, resetting cookies\n\n  if (store.getState().resetLogin) {\n    const cookieKey = [\"loginAuth\", \"userID\"];\n    cookieKey.forEach(element => {\n      document.cookie = `${element}=;path=/;expires=Thu, 01 Jan 1970T00:00:00Z;`;\n    });\n    store.dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: {\n        auth: store.getState().auth,\n        resetLogin: false\n      }\n    });\n  }\n\n  setLoading(false);\n});\n\n(async function () {})();","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/components/loadBaseData.jsx"],"names":["store","dispatch","checkUserAuth","getQuaryParams","getCookies","productInfo","getState","cookies","userID","undefined","fetchUserData","user","past_servers","length","createMcConfig","serverPodsInfo","serverSVCInfo","serverInfo","console","log","resetLogin","cookieKey","forEach","element","document","cookie","type","payload","auth","setLoading"],"mappings":"AAAA,gBAAe,YAAY;AACvB,QAAMA,KAAK,CAACC,QAAN,CAAeC,aAAf,CAAN;AACA,QAAMF,KAAK,CAACC,QAAN,CAAeE,cAAf,CAAN;AACA,QAAMH,KAAK,CAACC,QAAN,CAAeG,UAAf,CAAN;AACA,QAAMJ,KAAK,CAACC,QAAN,CAAeI,WAAf,CAAN;;AACA,MAAIL,KAAK,CAACM,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoCC,SAApC,IAAiDT,KAAK,CAACM,QAAN,GAAiBC,OAAjB,CAAyBC,MAAzB,KAAoC,EAAzF,EAA6F;AAAE;AAC3F,UAAMR,KAAK,CAACC,QAAN,CAAeS,aAAf,CAAN;;AACA,QAAIV,KAAK,CAACM,QAAN,GAAiBK,IAAjB,CAAsBC,YAAtB,CAAmCC,MAAnC,GAA4C,CAAhD,EAAmD;AAAE;AACjD,YAAMb,KAAK,CAACC,QAAN,CAAea,cAAf,CAAN;AACA,YAAMd,KAAK,CAACC,QAAN,CAAec,cAAf,CAAN;AACA,YAAMf,KAAK,CAACC,QAAN,CAAee,aAAf,CAAN;AACA,YAAMhB,KAAK,CAACC,QAAN,CAAegB,UAAf,CAAN;AACH;AACJ;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCnB,KAAK,CAACM,QAAN,EAAvC,EAduB,CAgBvB;;AACA,MAAIN,KAAK,CAACM,QAAN,GAAiBc,UAArB,EAAiC;AAC7B,UAAMC,SAAS,GAAG,CAAC,WAAD,EAAc,QAAd,CAAlB;AACAA,IAAAA,SAAS,CAACC,OAAV,CAAkBC,OAAO,IAAI;AACzBC,MAAAA,QAAQ,CAACC,MAAT,GAAmB,GAAEF,OAAQ,8CAA7B;AACH,KAFD;AAGAvB,IAAAA,KAAK,CAACC,QAAN,CAAe;AACXyB,MAAAA,IAAI,EAAE,cADK;AAEXC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE5B,KAAK,CAACM,QAAN,GAAiBsB,IADlB;AAELR,QAAAA,UAAU,EAAE;AAFP;AAFE,KAAf;AAOH;;AAEDS,EAAAA,UAAU,CAAC,KAAD,CAAV;AACH,CAhCD;;AAmCA,CAAC,kBAAkB,CAElB,CAFD","sourcesContent":["export default async () => {\n    await store.dispatch(checkUserAuth)\n    await store.dispatch(getQuaryParams)\n    await store.dispatch(getCookies)\n    await store.dispatch(productInfo)\n    if (store.getState().cookies.userID !== undefined && store.getState().cookies.userID !== \"\") { // cheking if user is logged in\n        await store.dispatch(fetchUserData)\n        if (store.getState().user.past_servers.length > 0) { // cheking if user have/ had a server\n            await store.dispatch(createMcConfig)\n            await store.dispatch(serverPodsInfo)\n            await store.dispatch(serverSVCInfo)\n            await store.dispatch(serverInfo)\n        }\n    }\n    console.log(\"data after fetch func: \", store.getState())\n\n    // check if loginReset is true, if case, resetting cookies\n    if (store.getState().resetLogin) {\n        const cookieKey = [\"loginAuth\", \"userID\"]\n        cookieKey.forEach(element => {\n            document.cookie = `${element}=;path=/;expires=Thu, 01 Jan 1970T00:00:00Z;`\n        })\n        store.dispatch({\n            type: \"AUTH_SUCCESS\",\n            payload: {\n                auth: store.getState().auth,\n                resetLogin: false\n            }\n        })\n    }\n\n    setLoading(false)\n}\n\n\n(async function () {\n\n})();"]},"metadata":{},"sourceType":"module"}