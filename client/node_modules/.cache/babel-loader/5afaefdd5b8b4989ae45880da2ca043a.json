{"ast":null,"code":"import _regeneratorRuntime from\"/home/main-pc/programing/react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/main-pc/programing/react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/main-pc/programing/react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useSelector}from\"react-redux\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChangeServerConfig=function ChangeServerConfig(){// stateful settings\nvar state=useSelector(function(state){return state;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),change=_useState2[0],setChange=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),whitelist=_useState4[0],setWhitelist=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),opslist=_useState6[0],setOpslist=_useState6[1];var i=0;var toggle=function toggle(){setChange(function(prev){return!prev;});};useEffect(function(){if(state.env[6].value!=null){setWhitelist(state.env[6].value.split(\",\"));}if(state.env[7].value!=null){setOpslist(state.env[7].value.split(\",\"));}},[state]);//data for Difficulty and Versions\nvar versions=[state.env[3].value,\"latest\",\"1.16.4\",\"1.16.3\",\"1.16.2\",\"1.16\",\"1.15.2\",\"1.15.1\",\"1.15\",\"1.14.4\",\"1.14.3\",\"1.14.2\",\"1.14.1\",\"1.14\",\"1.13.2\",\"1.13.1\",\"1.13\",\"1.12.2\",\"1.12.1\",\"1.12\"];var versionBoiler=versions.map(function(d){i++;return/*#__PURE__*/_jsx(\"option\",{value:d,children:d},i);});var difficulties=[state.env[5].value,\"hard\",\"normal\",\"easy\",\"peaceful\"];var difficultiesBoiler=difficulties.map(function(d){i++;return/*#__PURE__*/_jsx(\"option\",{value:d,children:d},i);});//data for Whitelist\nvar changeWhite=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(data.key===\"Enter\")){_context.next=14;break;}data.preventDefault();_context.prev=2;if(!(data.target.value===\"\")){_context.next=5;break;}throw\"empty value\";case 5:if(!whitelist.includes(data.target.value)){_context.next=7;break;}throw\"name already given\";case 7:setWhitelist(whitelist.concat(data.target.value));data.target.value=\"\";_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[2,11]]);}));return function changeWhite(_x){return _ref.apply(this,arguments);};}();var WhitelistList=function WhitelistList(){if(state.env[6].value===null){return null;}else{var _i=0;return whitelist.map(function(e){_i+=1;return/*#__PURE__*/_jsx(\"span\",{children:e},_i);});}};var WhitelistListChange=function WhitelistListChange(){if(state.env[6].value===null){return null;}else{var _i2=0;return whitelist.map(function(e){_i2+=1;return/*#__PURE__*/_jsx(\"span\",{className:\"whiteArray\",onClick:removeFromWhiteList,children:e},_i2);});}};//data for Ops\nvar changeOps=function changeOps(data){if(data.key===\"Enter\"){data.preventDefault();try{if(data.target.value===\"\"){throw\"empty value\";}if(opslist.includes(data.target.value)){throw\"name already given\";}setOpslist(opslist.concat(data.target.value));data.target.value=\"\";}catch(result){console.log(result);}}};var OpslistList=function OpslistList(){if(opslist===null){return null;}else{var _i3=0;return opslist.map(function(e){_i3+=1;return/*#__PURE__*/_jsx(\"span\",{children:e},_i3);});}};var OpslistListChange=function OpslistListChange(){if(opslist===null){return null;}else{var _i4=0;return opslist.map(function(e){_i4+=1;return/*#__PURE__*/_jsx(\"span\",{className:\"opsArray\",onClick:removeFromOpsList,children:e},_i4);});}};var removeFromOpsList=function removeFromOpsList(e){var newOpsList=opslist.filter(function(item){return item!==e.target.innerText;});setOpslist(newOpsList);};var removeFromWhiteList=function removeFromWhiteList(e){var newwhitelist=whitelist.filter(function(item){return item!==e.target.innerText;});setWhitelist(newwhitelist);};var saveData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var whitelistString,opslistString,cookieValue;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();console.log(\"saving data\");console.log(\"serverName: \",e.target.serverName.value);console.log(\"serverVersion: \",e.target.serverVersion.value);console.log(\"serverDifficulty: \",e.target.serverDifficulty.value);console.log(\"serverWhitelist: \",whitelist);console.log(\"serverOpsList: \",opslist);// reformatting whitelist and op-list\nwhitelistString=whitelist.join(\",\");opslistString=opslist.join(\",\");// sending data to backend\ncookieValue=document.cookie.split('; ').find(function(row){return row.startsWith('userID=');}).split('=')[1];_context2.next=12;return axios.post(\"http://localhost:3001/api/mcConf/updateData\",{id:cookieValue,serverName:e.target.serverName.value,serverVersion:e.target.serverVersion.value,serverDifficulty:e.target.serverDifficulty.value,serverWhitelist:whitelistString,serverOpsList:opslistString}).then(function(response){console.log(\"response from updateData: \",response.data.data);});case 12:window.location.reload();case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function saveData(_x2){return _ref2.apply(this,arguments);};}();var defaultFunc=function defaultFunc(){var configSize=\"userHomeChangeConfig userHomeSegment\";if(opslist.length>4||whitelist.length>4){configSize=\"userHomeChangeConfigExtendOne userHomeSegment\";}return/*#__PURE__*/_jsxs(\"div\",{className:configSize,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeServerName userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Server Name: \"}),/*#__PURE__*/_jsx(\"span\",{children:state.env[4].value})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeVersion userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Version: \"}),/*#__PURE__*/_jsx(\"span\",{children:state.env[3].value})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeDifficulty userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Difficulty: \"}),/*#__PURE__*/_jsx(\"span\",{children:state.env[5].value})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeWhitelist userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"whitelist: \"}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(WhitelistList,{})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeOps userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"ops: \"}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(OpslistList,{})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"userHomeChangeBtn userHomeChangeDefaults\",children:/*#__PURE__*/_jsx(\"button\",{onClick:toggle,children:\"change\"})})]});};var changeFunc=function changeFunc(){var configSize=\"userHomeChangeConfig userHomeSegment\";if(opslist.length>4||whitelist.length>4){configSize=\"userHomeChangeConfigExtendOne userHomeSegment\";}return/*#__PURE__*/_jsxs(\"form\",{className:configSize,onSubmit:saveData,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeServerName userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Server Name: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"serverName\",className:\"userHomeChangeServer\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeVersion userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Server Version: \"}),/*#__PURE__*/_jsx(\"select\",{name:\"serverVersion\",id:\"\",children:versionBoiler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeDifficulty userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Server Difficulty: \"}),/*#__PURE__*/_jsx(\"select\",{name:\"serverDifficulty\",id:\"\",children:difficultiesBoiler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeWhitelist userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Whitelists:\"}),/*#__PURE__*/_jsx(WhitelistListChange,{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"serverWhitelist\",onKeyPress:changeWhite})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userHomeChangeOps userHomeChangeDefaults\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Ops:\"}),/*#__PURE__*/_jsx(OpslistListChange,{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"serverOps\",onKeyPress:changeOps})]}),/*#__PURE__*/_jsx(\"div\",{className:\"userHomeChangeBtn userHomeChangeDefaults\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"save\"})})]});};switch(change){case true:return changeFunc();default:return defaultFunc();}};export default ChangeServerConfig;// import React, {\n//     Component\n// } from \"react\"\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n//         }\n//     }\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n//     }\n//     changeFunc = () => {\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n// export default ChangeServerConfig;","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/components/userHome/changeServerConfig.jsx"],"names":["React","useEffect","useState","useSelector","axios","ChangeServerConfig","state","change","setChange","whitelist","setWhitelist","opslist","setOpslist","i","toggle","prev","env","value","split","versions","versionBoiler","map","d","difficulties","difficultiesBoiler","changeWhite","data","key","preventDefault","target","includes","concat","console","log","WhitelistList","e","WhitelistListChange","removeFromWhiteList","changeOps","result","OpslistList","OpslistListChange","removeFromOpsList","newOpsList","filter","item","innerText","newwhitelist","saveData","serverName","serverVersion","serverDifficulty","whitelistString","join","opslistString","cookieValue","document","cookie","find","row","startsWith","post","id","serverWhitelist","serverOpsList","then","response","window","location","reload","defaultFunc","configSize","length","changeFunc"],"mappings":"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":["import React, { useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\n\nconst ChangeServerConfig = () => {\n    // stateful settings\n    const state = useSelector(state => state)\n    const [change, setChange] = useState(false)\n    const [whitelist, setWhitelist] = useState([])\n    const [opslist, setOpslist] = useState([])\n    let i = 0;\n\n    const toggle = () => {\n        setChange((prev) => !prev)\n    }\n\n    useEffect(() => {\n        if (state.env[6].value != null) {\n            setWhitelist(state.env[6].value.split(\",\"))\n        }\n        if (state.env[7].value != null) {\n            setOpslist(state.env[7].value.split(\",\"))\n        }\n    }, [state])\n\n    //data for Difficulty and Versions\n    const versions = [state.env[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n        \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n        \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    let versionBoiler = versions.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    const difficulties = [state.env[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"]\n\n    const difficultiesBoiler = difficulties.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    //data for Whitelist\n    const changeWhite = async (data) => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (whitelist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setWhitelist(whitelist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const WhitelistList = () => {\n        if (state.env[6].value === null) {\n            return null\n        } else {\n            let i = 0;\n            return whitelist.map((e) => {\n                i += 1\n                return <span key={i}>{e}</span>\n            })\n        }\n    }\n\n    const WhitelistListChange = () => {\n        if (state.env[6].value === null) {\n            return null\n        } else {\n            let i = 0;\n            return whitelist.map((e) => {\n                i += 1\n                return <span className=\"whiteArray\" onClick={removeFromWhiteList} key={i}>{e}</span>\n            })\n        }\n    }\n\n    //data for Ops\n    const changeOps = data => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (opslist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setOpslist(opslist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const OpslistList = () => {\n        if (opslist === null) {\n            return null\n        } else {\n            let i = 0;\n            return opslist.map((e) => {\n                i += 1\n                return <span key={i}>{e}</span>\n            })\n        }\n    }\n\n    const OpslistListChange = () => {\n        if (opslist === null) {\n            return null\n        } else {\n            let i = 0;\n            return opslist.map((e) => {\n                i += 1\n                return <span className=\"opsArray\" onClick={removeFromOpsList} key={i}>{e}</span>\n            })\n        }\n    }\n\n    const removeFromOpsList = (e) => {\n        let newOpsList = opslist.filter(item => item !== e.target.innerText)\n        setOpslist(newOpsList)\n    }\n\n    const removeFromWhiteList = (e) => {\n        let newwhitelist = whitelist.filter(item => item !== e.target.innerText)\n        setWhitelist(newwhitelist)\n    }\n\n    const saveData = async (e) => {\n        e.preventDefault()\n        console.log(\"saving data\")\n\n        console.log(\"serverName: \", e.target.serverName.value)\n        console.log(\"serverVersion: \", e.target.serverVersion.value)\n        console.log(\"serverDifficulty: \", e.target.serverDifficulty.value)\n        console.log(\"serverWhitelist: \", whitelist)\n        console.log(\"serverOpsList: \", opslist)\n\n        // reformatting whitelist and op-list\n        const whitelistString = whitelist.join(\",\")\n        const opslistString = opslist.join(\",\")\n\n        // sending data to backend\n        const cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n\n        await axios.post(\"http://localhost:3001/api/mcConf/updateData\", {\n            id: cookieValue,\n            serverName: e.target.serverName.value,\n            serverVersion: e.target.serverVersion.value,\n            serverDifficulty: e.target.serverDifficulty.value,\n            serverWhitelist: whitelistString,\n            serverOpsList: opslistString\n        }).then(response => {\n            console.log(\"response from updateData: \", response.data.data)\n        })\n        window.location.reload()\n    }\n\n    const defaultFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <div className={configSize}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <span>{state.env[4].value}</span>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Version: </p>\n                    <span>{state.env[3].value}</span>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Difficulty: </p>\n                    <span>{state.env[5].value}</span>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>whitelist: </p>\n                    <span><WhitelistList /></span>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>ops: </p>\n                    <span><OpslistList /></span>\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>change</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    const changeFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <form className={configSize} onSubmit={saveData}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <input type=\"text\" name=\"serverName\" className=\"userHomeChangeServer\" />\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Server Version: </p>\n                    <select name=\"serverVersion\" id=\"\">\n                        {versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Server Difficulty: </p>\n                    <select name=\"serverDifficulty\" id=\"\">\n                        {difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>Whitelists:</p>\n                    <WhitelistListChange />\n                    <input type=\"text\" name=\"serverWhitelist\" onKeyPress={changeWhite} />\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>Ops:</p>\n                    <OpslistListChange />\n                    <input type=\"text\" name=\"serverOps\" onKeyPress={changeOps} />\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button type=\"submit\">save</button>\n                </div>\n            </form>\n        );\n    }\n\n    switch (change) {\n        case true:\n            return changeFunc()\n        default:\n            return defaultFunc()\n    }\n}\n\nexport default ChangeServerConfig\n\n\n\n// import React, {\n//     Component\n// } from \"react\"\n\n\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n\n//     }\n\n\n//     changeFunc = () => {\n\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n\n// export default ChangeServerConfig;"]},"metadata":{},"sourceType":"module"}