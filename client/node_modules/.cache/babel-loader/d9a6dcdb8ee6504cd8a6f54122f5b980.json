{"ast":null,"code":"import axios from \"axios\";\nimport { store } from \"../../\";\nlet cookieValueUserID = null;\n\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n  cookieValueUserID = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n}\n\nlet cookieValueAuth = null;\n\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n  cookieValueAuth = document.cookie.split('; ').find(row => row.startsWith('loginAuth=')).split('=')[1];\n}\n\nexport const fetchUserData = async dispatch => {\n  await axios.post(`/user`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"FETCH_USER_SUCCESS\",\n      payload: res.data\n    });\n  });\n};\nexport const login = (name, pass, dispatch) => {\n  axios.post(\"/user/login\", {\n    withCredentials: true,\n    name: name,\n    password: pass\n  }).then(async response => {\n    if (response.data.message === \"Success!\") {\n      await checkUserAuth(dispatch);\n      createMcConfig(dispatch);\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          loginAuth: response.data.loginAuth,\n          userID: response.data.userID\n        }\n      });\n      window.location.reload();\n    } else {\n      console.log(\"response.data: \", response.data);\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const signup = async (name, email, password, dispatch) => {\n  axios.post(\"/user/insert\", {\n    data: {\n      name,\n      email,\n      password\n    }\n  }).then(async response => {\n    if (response.data === \"User created\") {\n      login(name, password, dispatch);\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const checkUserAuth = async dispatch => {\n  await axios.get(`/user/auth`, {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": cookieValueAuth,\n      \"Id\": cookieValueUserID\n    }\n  }).then(response => {\n    dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: response.data.auth\n    });\n  });\n};\nexport const authSucess = dispatch => {\n  dispatch({\n    type: \"AUTH_SUCCESS\"\n  });\n};\nexport const createMcConfig = async dispatch => {\n  await axios.post(`/mcConf/create`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const startServer = async dispatch => {\n  await axios.post(`/server`, {\n    id: cookieValueUserID,\n    action: \"start\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const stopServer = async dispatch => {\n  await axios.post(`/server`, {\n    id: cookieValueUserID,\n    action: \"stop\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const serverPodsInfo = async () => {\n  await axios.post(`/k8s/pods`, {\n    id: cookieValueUserID\n  }).then(res => {\n    console.log(res);\n    store.dispatch({\n      type: \"SERVER_PODS_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverSVCInfo = async dispatch => {\n  await axios.post(`/k8s/svc`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"SERVER_SVC_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const mcConfGetData = async dispatch => {\n  await axios.post(`/mcConf/getData`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"MC_CONF_GET_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const confirmation = async () => {\n  await axios.post(`/confirmation`, {\n    id: cookieValueUserID\n  });\n};\nexport const resendConfirmationMail = async dispatch => {\n  await axios.post(`/user/resendconfirmationmail`, {\n    id: cookieValueUserID\n  }).then(response => {\n    if (response.data.type === \"err\") {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data.payload\n      });\n    } else {\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data.payload\n      });\n      dispatch({\n        type: \"MESSAGE\",\n        payload: \"response.data\"\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/redux/actions/index.jsx"],"names":["axios","store","cookieValueUserID","document","cookie","search","split","find","row","startsWith","cookieValueAuth","fetchUserData","dispatch","post","id","then","res","type","payload","data","login","name","pass","withCredentials","password","response","message","checkUserAuth","createMcConfig","loginAuth","userID","window","location","reload","console","log","signup","email","get","headers","auth","authSucess","startServer","action","stopServer","serverPodsInfo","serverSVCInfo","mcConfGetData","confirmation","resendConfirmationMail"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { store } from \"../../\"\n\nlet cookieValueUserID = null\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n    cookieValueUserID = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('userID='))\n        .split('=')[1];\n}\n\nlet cookieValueAuth = null\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n    cookieValueAuth = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('loginAuth='))\n        .split('=')[1];\n}\n\nexport const fetchUserData = async (dispatch) => {\n    await axios.post(`/user`, {\n        id: cookieValueUserID,\n    })\n        .then(res => {\n            dispatch({\n                type: \"FETCH_USER_SUCCESS\",\n                payload: res.data\n            })\n        })\n}\n\nexport const login = (name, pass, dispatch) => {\n    axios.post(\"/user/login\", {\n        withCredentials: true,\n        name: name,\n        password: pass\n    }).then(async (response) => {\n        if (response.data.message === \"Success!\") {\n            await checkUserAuth(dispatch)\n            createMcConfig(dispatch)\n            dispatch({\n                type: \"LOGIN\",\n                payload: {\n                    loginAuth: response.data.loginAuth,\n                    userID: response.data.userID\n                }\n            })\n            window.location.reload();\n        } else {\n            console.log(\"response.data: \", response.data)\n            dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: response.data\n            })\n        }\n    })\n}\n\nexport const signup = async (name, email, password, dispatch) => {\n    axios.post(\"/user/insert\", {\n        data: {\n            name,\n            email,\n            password\n        }\n    })\n        .then(async (response) => {\n            if (response.data === \"User created\") {\n                login(name, password, dispatch)\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data\n                })\n            } else {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data\n                })\n            }\n        })\n}\n\nexport const checkUserAuth = async (dispatch) => {\n    await axios.get(`/user/auth`, {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": cookieValueAuth,\n            \"Id\": cookieValueUserID\n        }\n    })\n        .then(response => {\n            dispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: response.data.auth\n            })\n        })\n}\n\nexport const authSucess = (dispatch) => {\n    dispatch({\n        type: \"AUTH_SUCCESS\"\n    })\n}\n\nexport const createMcConfig = async (dispatch) => {\n    await axios.post(`/mcConf/create`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const startServer = async (dispatch) => {\n    await axios.post(`/server`, {\n        id: cookieValueUserID,\n        action: \"start\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const stopServer = async (dispatch) => {\n    await axios.post(`/server`, {\n        id: cookieValueUserID,\n        action: \"stop\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const serverPodsInfo = async () => {\n    await axios.post(`/k8s/pods`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            console.log(res)\n            store.dispatch({\n                type: \"SERVER_PODS_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverSVCInfo = async (dispatch) => {\n    await axios.post(`/k8s/svc`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"SERVER_SVC_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const mcConfGetData = async (dispatch) => {\n    await axios.post(`/mcConf/getData`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"MC_CONF_GET_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const confirmation = async () => {\n    await axios.post(`/confirmation`, {\n        id: cookieValueUserID\n    })\n}\n\nexport const resendConfirmationMail = async (dispatch) => {\n    await axios.post(`/user/resendconfirmationmail`, {\n        id: cookieValueUserID\n    })\n        .then(response => {\n            if (response.data.type === \"err\") {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data.payload\n                })\n            } else {\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data.payload\n                })\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: \"response.data\"\n                })\n            }\n        })\n}\n\n"]},"metadata":{},"sourceType":"module"}