{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/components/topMessages/err.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Err = () => {\n  _s();\n\n  const state = useSelector(state => state);\n  const [errMessage, changeErrMessage] = useState(\"\");\n\n  const noErr = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topMessageTest\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This is test thingy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  };\n\n  switch (errMessage) {\n    case \"test\":\n      break;\n\n    default:\n      return null;\n  }\n};\n\n_s(Err, \"mlz5C1Kfrf3b+UOxv8GQKtBmZmQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Err;\n\nvar _c;\n\n$RefreshReg$(_c, \"Err\");","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/components/topMessages/err.jsx"],"names":["React","useEffect","useState","useSelector","Err","state","errMessage","changeErrMessage","noErr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACrB,QAAMC,KAAK,GAAGF,WAAW,CAACE,KAAK,IAAIA,KAAV,CAAzB;AAEA,QAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCL,QAAQ,CAAC,EAAD,CAA/C;;AAIA,QAAMM,KAAK,GAAG,MAAM;AAChB,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQA,UAAQF,UAAR;AACI,SAAK,MAAL;AAEI;;AAEJ;AACI,aAAO,IAAP;AANR;AAQH,CAvBM;;GAAMF,G;UACKD,W;;;KADLC,G","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\n\nexport const Err = () => {\n    const state = useSelector(state => state)\n\n    const [errMessage, changeErrMessage] = useState(\"\")\n\n\n\n    const noErr = () => {\n        return (\n            <div className=\"topMessageTest\">\n                <span>This is test thingy</span>\n            </div>\n        )\n    }\n\n    switch (errMessage) {\n        case \"test\":\n\n            break;\n\n        default:\n            return null;\n    }\n}"]},"metadata":{},"sourceType":"module"}