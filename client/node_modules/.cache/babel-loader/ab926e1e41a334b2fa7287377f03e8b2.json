{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/react/client/src/pages/userHome.jsx\";\n// import React, { Component, useState } from 'react';\n// import { Redirect } from \"react-router-dom\"\n// import axios from \"axios\"\n// import { useAsync } from \"react-async\"\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n// import CheckUserAuth from \"../auth/checkAuth\"\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n// const UserHomePage = ()=> {\n//     const [page, setPage] = useState([\"server\"])\n//     const [userData, setUserData] = useState([store.getState()])\n//     useAsync(store.dispatch(fetchUserData))\n//     useAsync(store.dispatch(checkUserAuth))\n//     console.log(\"1\",store.getState())\n//     const changeState = (data)=>{\n//         setPage(data)\n//      }\n//     const getPage = ()=>{\n//          let component\n//          switch (page){\n//             case \"server\":\n//                 component = <Server userData={userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={userData} />\n//                 break;\n//             }\n//         return component\n//     }\n//     const authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={changeState}/>\n//                 </dir>\n//                 {getPage()}\n//             </dir> \n//         )\n//     }\n//     const authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n//         console.log(\"userdata: \", userData[0].auth)\n//         switch (userData.auth) {\n//             case true:\n//                 return authSuccess()\n//             default:\n//                 return authFaliure()\n//         }\n// }\n// export default UserHomePage;\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\nimport CheckUserAuth from \"../auth/checkAuth\";\nimport { store } from \"../index\";\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeState = data => {\n      this.setState({\n        page: data\n      });\n    };\n\n    this.getPage = () => {\n      let component;\n\n      switch (this.state.page) {\n        case \"server\":\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this);\n          break;\n\n        case \"options\":\n          component = /*#__PURE__*/_jsxDEV(Options, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this);\n          break;\n\n        default:\n          component = /*#__PURE__*/_jsxDEV(Server, {\n            userData: this.state.userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this);\n          break;\n      }\n\n      return component;\n    };\n\n    this.authSuccess = () => {\n      return /*#__PURE__*/_jsxDEV(\"dir\", {\n        className: \"userHomeLayout\",\n        children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"userHomesideMenu\",\n          children: /*#__PURE__*/_jsxDEV(SideMenu, {\n            setState: this.changeState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), this.getPage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.authFaliure = () => {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/user/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      page: [\"server\"],\n      userData: [store.getState()]\n    };\n  }\n\n  componentDidMount() {\n    // store.dispatch(fetchUserData)\n    // store.dispatch(checkUserAuth)\n    // this.setState({\n    //     userData: store.getState()\n    // }) \n    const cookieValue = document.cookie.split('; ').find(row => row.startsWith('loginAuth=')).split('=')[1];\n    this._asyncRequest = axios.get(\"http://192.168.1.247:3001/api/user/auth\", {\n      withCredentials: true,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": cookieValue\n      }\n    }).then(response => {\n      console.log(\"req success!\");\n      this._asyncRequest = null;\n      this.setState({\n        userPage: true\n      });\n    });\n    console.log(\"1\", store.getState());\n  }\n\n  componentWillUnmount() {\n    if (this._asyncRequest) {\n      this._asyncRequest.cancel();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"component update\");\n  }\n\n  render() {\n    console.log(\"userdata: \", this.state.userData);\n\n    switch (this.state.userData.auth) {\n      case true:\n        return this.authSuccess();\n\n      default:\n        return this.authFaliure();\n    }\n  }\n\n}\n\nexport default UserHomePage; //then you can just update state through resolving the promise.\n// useEffect(() => {\n//     fetch(\"https://blooming-bastion-30679.herokuapp.com/messages/question%22)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       setData(data);\n//       setlikes(data[data.length-1].likes); \n//       setid(data[data.length -1]._id);\n//       setAnswersYes(data[data.length -1].yes)\n//       setAnswersNo(data[data.length -1].no)\n//       console.log(\"This is a fetch function\")\n//     }).catch(err => {console.log(err)});\n// }, [id, likes,AnswersNo,AnswersYes,data]);\n//https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#fetching-external-data","map":{"version":3,"sources":["/home/main-pc/programing/react/client/src/pages/userHome.jsx"],"names":["React","Component","Redirect","axios","SideMenu","Server","Options","CheckUserAuth","store","fetchUserData","checkUserAuth","UserHomePage","constructor","props","changeState","data","setState","page","getPage","component","state","userData","authSuccess","authFaliure","getState","componentDidMount","cookieValue","document","cookie","split","find","row","startsWith","_asyncRequest","get","withCredentials","headers","then","response","console","log","userPage","componentWillUnmount","cancel","componentDidUpdate","prevProps","prevState","snapshot","render","auth"],"mappings":"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","sourcesContent":["// import React, { Component, useState } from 'react';\n// import { Redirect } from \"react-router-dom\"\n// import axios from \"axios\"\n// import { useAsync } from \"react-async\"\n\n// import SideMenu from \"../components/userHome/sideMenu\";\n// import Server from \"../components/userHome/server\"\n// import Options from \"../components/userHome/options\"\n\n// import CheckUserAuth from \"../auth/checkAuth\"\n\n// import { store } from \"../index\"\n// import { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\n// const UserHomePage = ()=> {\n\n//     const [page, setPage] = useState([\"server\"])\n//     const [userData, setUserData] = useState([store.getState()])\n\n//     useAsync(store.dispatch(fetchUserData))\n//     useAsync(store.dispatch(checkUserAuth))\n\n//     console.log(\"1\",store.getState())\n    \n//     const changeState = (data)=>{\n//         setPage(data)\n//      }\n\n//     const getPage = ()=>{\n//          let component\n//          switch (page){\n//             case \"server\":\n//                 component = <Server userData={userData} />\n//                 break;\n//             case \"options\":\n//                 component = <Options userData={userData} />\n//                 break;\n//             default:\n//                 component = <Server userData={userData} />\n//                 break;\n//             }\n//         return component\n//     }\n\n//     const authSuccess = ()=>{\n//         return(\n//             <dir className=\"userHomeLayout\">\n//                 <dir className=\"userHomesideMenu\">\n//                     <SideMenu setState={changeState}/>\n//                 </dir>\n//                 {getPage()}\n//             </dir> \n//         )\n//     }\n\n//     const authFaliure = ()=>{\n//         return(\n//             <Redirect to=\"/user/login\"/>\n//         )\n//     }\n\n//         console.log(\"userdata: \", userData[0].auth)\n//         switch (userData.auth) {\n//             case true:\n//                 return authSuccess()\n//             default:\n//                 return authFaliure()\n//         }\n// }\n \n// export default UserHomePage;\n\n\n\n\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\"\nimport Options from \"../components/userHome/options\"\n\nimport CheckUserAuth from \"../auth/checkAuth\"\n\nimport { store } from \"../index\"\nimport { fetchUserData, checkUserAuth } from \"../redux/actions/index\"\n\nclass UserHomePage extends Component {\n    constructor (props){\n        super(props)\n        this.state = { \n            page: [\"server\"],\n            userData: [store.getState()]\n        }\n    }\n\n    componentDidMount(){        \n        // store.dispatch(fetchUserData)\n        // store.dispatch(checkUserAuth)\n        // this.setState({\n        //     userData: store.getState()\n        // }) \n\n\n        const cookieValue = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('loginAuth='))\n        .split('=')[1];\n    \n        this._asyncRequest = axios.get(\"http://192.168.1.247:3001/api/user/auth\", { \n            withCredentials: true,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                \"Authorization\": cookieValue\n            }\n        })\n        .then(response=>{\n            console.log(\"req success!\")\n            this._asyncRequest = null;\n            this.setState({\n                userPage: true\n            })\n        })\n\n\n        console.log(\"1\",store.getState())\n    }\n\n    componentWillUnmount() {\n        if (this._asyncRequest) {\n          this._asyncRequest.cancel();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n        console.log(\"component update\")\n    }\n    \n    changeState = (data)=>{\n        this.setState({\n            page:data\n        })\n     }\n\n    getPage = ()=>{\n         let component\n         switch (this.state.page){\n            case \"server\":\n                component = <Server userData={this.state.userData} />\n                break;\n            case \"options\":\n                component = <Options userData={this.state.userData} />\n                break;\n            default:\n                component = <Server userData={this.state.userData} />\n                break;\n            }\n        return component\n    }\n\n    authSuccess = ()=>{\n        return(\n            <dir className=\"userHomeLayout\">\n                <dir className=\"userHomesideMenu\">\n                    <SideMenu setState={this.changeState}/>\n                </dir>\n                {this.getPage()}\n            </dir> \n        )\n    }\n\n    authFaliure = ()=>{\n        return(\n            <Redirect to=\"/user/login\"/>\n        )\n    }\n\n    render() { \n        console.log(\"userdata: \", this.state.userData)\n        switch (this.state.userData.auth) {\n            case true:\n                return this.authSuccess()\n            default:\n                return this.authFaliure()\n        }\n    }\n}\n \nexport default UserHomePage;\n\n\n//then you can just update state through resolving the promise.\n// useEffect(() => {\n\n//     fetch(\"https://blooming-bastion-30679.herokuapp.com/messages/question%22)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       setData(data);\n//       setlikes(data[data.length-1].likes); \n//       setid(data[data.length -1]._id);\n//       setAnswersYes(data[data.length -1].yes)\n//       setAnswersNo(data[data.length -1].no)\n//       console.log(\"This is a fetch function\")\n//     }).catch(err => {console.log(err)});\n\n\n// }, [id, likes,AnswersNo,AnswersYes,data]);\n\n//https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#fetching-external-data"]},"metadata":{},"sourceType":"module"}