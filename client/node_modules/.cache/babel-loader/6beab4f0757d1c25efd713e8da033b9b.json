{"ast":null,"code":"import axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { store } from \"../../\";\nlet cookieValueUserID = null;\n\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n  cookieValueUserID = document.cookie.split('; ').find(row => row.startsWith('userID=')).split('=')[1];\n}\n\nlet cookieValueAuth = null;\n\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n  cookieValueAuth = document.cookie.split('; ').find(row => row.startsWith('loginAuth=')).split('=')[1];\n} //setting ip_address to nothing if else isn't specified\n\n\nlet ip_address = \"\";\n\nif (process.env.REACT_APP_BACKENDPROXY != undefined) {\n  ip_address = process.env.REACT_APP_BACKENDPROXY;\n}\n\nexport const fetchUserData = async dispatch => {\n  await axios.post(`${ip_address}/user`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"FETCH_USER_SUCCESS\",\n      payload: res.data\n    });\n  });\n};\nexport const login = (name, pass, dispatch) => {\n  axios.post(`${ip_address}/user/login`, {\n    withCredentials: true,\n    name: name,\n    password: pass\n  }).then(async response => {\n    if (response.data.message === \"Success!\") {\n      await checkUserAuth(dispatch);\n      createMcConfig(dispatch);\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          loginAuth: response.data.loginAuth,\n          userID: response.data.userID\n        }\n      });\n      window.location.reload();\n    } else {\n      console.log(\"response.data: \", response.data);\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const signup = async (name, email, password, dispatch) => {\n  console.log(\"sending req to signup\");\n  axios.post(`${ip_address}/user/insert`, {\n    data: {\n      name,\n      email,\n      password\n    }\n  }).then(async response => {\n    console.log(\"response from signup\");\n\n    if (response.data === \"User created\") {\n      login(name, password, dispatch);\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data\n      });\n    }\n  });\n};\nexport const checkUserAuth = async dispatch => {\n  await axios.get(`${ip_address}/user/auth`, {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Authorization\": cookieValueAuth,\n      \"Id\": cookieValueUserID\n    }\n  }).then(response => {\n    dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: response.data.auth\n    });\n  });\n};\nexport const authSucess = dispatch => {\n  dispatch({\n    type: \"AUTH_SUCCESS\"\n  });\n};\nexport const createMcConfig = async dispatch => {\n  await axios.post(`${ip_address}/mcConf/create`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\nexport const StartServer = async dispatch => {\n  await axios.post(`${ip_address}/server`, {\n    id: cookieValueUserID,\n    action: \"start\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\n_c = StartServer;\nexport const StopServer = async dispatch => {\n  await axios.post(`${ip_address}/server`, {\n    id: cookieValueUserID,\n    action: \"stop\"\n  }).then(res => {\n    dispatch({\n      type: \"DUMP\"\n    });\n  });\n};\n_c2 = StopServer;\nexport const serverPodsInfo = async () => {\n  await axios.post(`${ip_address}/k8s/pods`, {\n    id: cookieValueUserID\n  }).then(res => {\n    store.dispatch({\n      type: \"SERVER_PODS_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverSVCInfo = async dispatch => {\n  await axios.post(`${ip_address}/k8s/svc`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"SERVER_SVC_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const serverTimeInfo = async (dispatch, reset, timeOfReset) => {\n  await axios.post(`${ip_address}/k8s/time`, {\n    id: cookieValueUserID,\n    reset,\n    timeOfReset\n  }).then(res => {\n    if (res.data.err) {\n      console.error(\"err occured at response from k8s/time see (actions index)\", res.data.err);\n    } else {\n      dispatch({\n        type: \"SERVER_TIME_DATA\",\n        payload: res.data\n      });\n    }\n  });\n};\nexport const mcConfGetData = async dispatch => {\n  await axios.post(`${ip_address}/mcConf/getData`, {\n    id: cookieValueUserID\n  }).then(res => {\n    dispatch({\n      type: \"MC_CONF_GET_DATA\",\n      payload: res.data\n    });\n  });\n};\nexport const confirmation = async () => {// function never called, see code /components/confirmation/index.jsx, reason is history() method. Fix when time.\n};\nexport const changePass = async () => {// function never called, see code /components/changePass/index.jsx, reason is history() method. Fix when time.\n};\nexport const resendConfirmationMail = async dispatch => {\n  await axios.post(`${ip_address}/user/resendconfirmationmail`, {\n    id: cookieValueUserID\n  }).then(response => {\n    if (response.data.type === \"err\") {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data.payload\n      });\n    } else {\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data.payload\n      });\n    }\n  });\n};\nexport const updatePassMail = async (dispatch, email) => {\n  await axios.post(`${ip_address}/user/updatepass`, {\n    email\n  }).then(response => {\n    if (response.data.type === \"err\") {\n      dispatch({\n        type: \"ERR_MESSAGE\",\n        payload: response.data.payload\n      });\n    } else {\n      dispatch({\n        type: \"MESSAGE\",\n        payload: response.data.payload\n      });\n    }\n  });\n};\nexport const getQuaryParams = dispatch => {\n  const urlSearchParams = new URLSearchParams(document.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n  dispatch({\n    type: \"QUARY_SELECTOR\",\n    payload: params\n  });\n};\nexport const getCookies = dispatch => {\n  const cookieObject = {};\n  const cookieString = document.cookie;\n  const cookieArray = cookieString.split(\";\");\n  cookieArray.forEach(element => {\n    const elementArray = element.split(\"=\");\n\n    if (elementArray[0].charAt(0) === \" \") {\n      elementArray[0] = elementArray[0].slice(1);\n      console.log(elementArray[0].split(\"\"));\n    }\n\n    cookieObject[elementArray[0]] = elementArray[1];\n  });\n  dispatch({\n    type: \"SET_COOKIES\",\n    payload: cookieObject\n  });\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StartServer\");\n$RefreshReg$(_c2, \"StopServer\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/redux/actions/index.jsx"],"names":["axios","useLocation","store","cookieValueUserID","document","cookie","search","split","find","row","startsWith","cookieValueAuth","ip_address","process","env","REACT_APP_BACKENDPROXY","undefined","fetchUserData","dispatch","post","id","then","res","type","payload","data","login","name","pass","withCredentials","password","response","message","checkUserAuth","createMcConfig","loginAuth","userID","window","location","reload","console","log","signup","email","get","headers","auth","authSucess","StartServer","action","StopServer","serverPodsInfo","serverSVCInfo","serverTimeInfo","reset","timeOfReset","err","error","mcConfGetData","confirmation","changePass","resendConfirmationMail","updatePassMail","getQuaryParams","urlSearchParams","URLSearchParams","params","Object","fromEntries","entries","getCookies","cookieObject","cookieString","cookieArray","forEach","element","elementArray","charAt","slice"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { useLocation } from \"react-router-dom\"\nimport { store } from \"../../\"\n\nlet cookieValueUserID = null\nif (document.cookie && document.cookie.search(\"userID\") > -1) {\n    cookieValueUserID = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('userID='))\n        .split('=')[1];\n}\n\nlet cookieValueAuth = null\nif (document.cookie && document.cookie.search(\"loginAuth\") > -1) {\n    cookieValueAuth = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('loginAuth='))\n        .split('=')[1];\n}\n\n//setting ip_address to nothing if else isn't specified\nlet ip_address = \"\"\nif (process.env.REACT_APP_BACKENDPROXY != undefined) {\n    ip_address = process.env.REACT_APP_BACKENDPROXY\n}\n\nexport const fetchUserData = async (dispatch) => {\n    await axios.post(`${ip_address}/user`, {\n        id: cookieValueUserID,\n    })\n        .then(res => {\n            dispatch({\n                type: \"FETCH_USER_SUCCESS\",\n                payload: res.data\n            })\n        })\n}\n\nexport const login = (name, pass, dispatch) => {\n    axios.post(`${ip_address}/user/login`, {\n        withCredentials: true,\n        name: name,\n        password: pass\n    }).then(async (response) => {\n        if (response.data.message === \"Success!\") {\n            await checkUserAuth(dispatch)\n            createMcConfig(dispatch)\n            dispatch({\n                type: \"LOGIN\",\n                payload: {\n                    loginAuth: response.data.loginAuth,\n                    userID: response.data.userID\n                }\n            })\n            window.location.reload();\n        } else {\n            console.log(\"response.data: \", response.data)\n            dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: response.data\n            })\n        }\n    })\n}\n\nexport const signup = async (name, email, password, dispatch) => {\n    console.log(\"sending req to signup\")\n    axios.post(`${ip_address}/user/insert`, {\n        data: {\n            name,\n            email,\n            password\n        }\n    })\n        .then(async (response) => {\n            console.log(\"response from signup\")\n            if (response.data === \"User created\") {\n                login(name, password, dispatch)\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data\n                })\n            } else {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data\n                })\n            }\n        })\n}\n\nexport const checkUserAuth = async (dispatch) => {\n    await axios.get(`${ip_address}/user/auth`, {\n        withCredentials: true,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": cookieValueAuth,\n            \"Id\": cookieValueUserID\n        }\n    })\n        .then(response => {\n            dispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: response.data.auth\n            })\n        })\n}\n\nexport const authSucess = (dispatch) => {\n    dispatch({\n        type: \"AUTH_SUCCESS\"\n    })\n}\n\nexport const createMcConfig = async (dispatch) => {\n    await axios.post(`${ip_address}/mcConf/create`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const StartServer = async (dispatch) => {\n    await axios.post(`${ip_address}/server`, {\n        id: cookieValueUserID,\n        action: \"start\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const StopServer = async (dispatch) => {\n    await axios.post(`${ip_address}/server`, {\n        id: cookieValueUserID,\n        action: \"stop\"\n    })\n        .then(res => {\n            dispatch({\n                type: \"DUMP\"\n            })\n        })\n}\n\nexport const serverPodsInfo = async () => {\n    await axios.post(`${ip_address}/k8s/pods`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            store.dispatch({\n                type: \"SERVER_PODS_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverSVCInfo = async (dispatch) => {\n    await axios.post(`${ip_address}/k8s/svc`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"SERVER_SVC_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const serverTimeInfo = async (dispatch, reset, timeOfReset) => {\n    await axios.post(`${ip_address}/k8s/time`, {\n        id: cookieValueUserID,\n        reset,\n        timeOfReset\n    })\n        .then(res => {\n            if (res.data.err) {\n                console.error(\"err occured at response from k8s/time see (actions index)\", res.data.err)\n            } else {\n                dispatch({\n                    type: \"SERVER_TIME_DATA\",\n                    payload: res.data\n                })\n            }\n        })\n}\n\nexport const mcConfGetData = async (dispatch) => {\n    await axios.post(`${ip_address}/mcConf/getData`, {\n        id: cookieValueUserID\n    })\n        .then(res => {\n            dispatch({\n                type: \"MC_CONF_GET_DATA\",\n                payload: res.data\n            })\n        })\n}\n\nexport const confirmation = async () => { // function never called, see code /components/confirmation/index.jsx, reason is history() method. Fix when time.\n}\n\nexport const changePass = async () => { // function never called, see code /components/changePass/index.jsx, reason is history() method. Fix when time.\n}\n\nexport const resendConfirmationMail = async (dispatch) => {\n    await axios.post(`${ip_address}/user/resendconfirmationmail`, {\n        id: cookieValueUserID\n    })\n        .then(response => {\n            if (response.data.type === \"err\") {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data.payload\n                })\n            } else {\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data.payload\n                })\n            }\n        })\n}\n\nexport const updatePassMail = async (dispatch, email) => {\n    await axios.post(`${ip_address}/user/updatepass`, {\n        email\n    })\n        .then(response => {\n            if (response.data.type === \"err\") {\n                dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: response.data.payload\n                })\n            } else {\n                dispatch({\n                    type: \"MESSAGE\",\n                    payload: response.data.payload\n                })\n            }\n        })\n}\n\nexport const getQuaryParams = (dispatch) => {\n    const urlSearchParams = new URLSearchParams(document.location.search)\n    const params = Object.fromEntries(urlSearchParams.entries());\n    dispatch({\n        type: \"QUARY_SELECTOR\",\n        payload: params\n    })\n}\n\nexport const getCookies = (dispatch) => {\n    const cookieObject = {}\n    const cookieString = document.cookie\n    const cookieArray = cookieString.split(\";\")\n    cookieArray.forEach((element) => {\n        const elementArray = element.split(\"=\")\n        if (elementArray[0].charAt(0) === \" \") {\n            elementArray[0] = elementArray[0].slice(1)\n            console.log(elementArray[0].split(\"\"))\n        }\n        cookieObject[elementArray[0]] = elementArray[1]\n    })\n    dispatch({\n        type: \"SET_COOKIES\",\n        payload: cookieObject\n    })\n}"]},"metadata":{},"sourceType":"module"}