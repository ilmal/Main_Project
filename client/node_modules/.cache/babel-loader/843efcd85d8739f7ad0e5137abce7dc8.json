{"ast":null,"code":"var _jsxFileName = \"/home/main-pc/programing/main_Project/client/src/pages/userHome.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\nimport { store } from \"../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserHomePage = () => {\n  _s();\n\n  const history = useHistory();\n  const [userData, setUserData] = useState([store.getState()]);\n  const [didMount, setDidMount] = useState(false);\n  useEffect(() => {\n    // //autorefresh logs\n    // if (store.getState().serverPods.status != \"server not running\") {\n    //   setTimeout(() => {\n    //     store.dispatch(serverPodsInfo)\n    //     console.log(\"hello!\")\n    //     setRemount(!remount)\n    //   }, 50000);\n    // }\n    //adding userHomeData to redux store\n    store.dispatch({\n      type: \"USER_HOME_DATA\",\n      payload: {\n        serverIndex: 0,\n        sideMenuSelectedTab: \"server\",\n        showServerLandingPage: true\n      }\n    }); //checking if user is logged in, if not, send to home page\n\n    if (store.getState().auth !== null && !store.getState().auth) {\n      console.log(\"Not logged in\");\n      history.push(\"/\");\n      window.location.reload();\n    } // subscribing to state updates\n\n\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, []);\n\n  if (!didMount) {\n    return null;\n  }\n\n  const getPage = () => {\n    let component;\n\n    switch (store.getState().userHomeData.sideMenuSelectedTab) {\n      case \"server\":\n        component = /*#__PURE__*/_jsxDEV(Server, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n        break;\n\n      case \"options\":\n        component = /*#__PURE__*/_jsxDEV(Options, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n        break;\n\n      default:\n        component = /*#__PURE__*/_jsxDEV(Server, {\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n        break;\n    }\n\n    return component;\n  }; //auth();\n\n\n  return /*#__PURE__*/_jsxDEV(\"dir\", {\n    className: \"userHomeLayout\",\n    id: \"random03242jcmvmj0v23cm4\",\n    children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n      className: \"userHomesideMenu\",\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), getPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserHomePage, \"CVAumvy9a3GmR/ryFIw0LxBvbCE=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserHomePage;\nexport default UserHomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserHomePage\");","map":{"version":3,"sources":["/home/main-pc/programing/main_Project/client/src/pages/userHome.jsx"],"names":["React","useState","useEffect","useHistory","SideMenu","Server","Options","store","UserHomePage","history","userData","setUserData","getState","didMount","setDidMount","dispatch","type","payload","serverIndex","sideMenuSelectedTab","showServerLandingPage","auth","console","log","push","window","location","reload","getPage","component","userHomeData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,SAASC,KAAT,QAAsB,UAAtB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAACM,KAAK,CAACK,QAAN,EAAD,CAAD,CAAxC;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAK,IAAAA,KAAK,CAACQ,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,gBADO;AAEbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE,CADN;AAEPC,QAAAA,mBAAmB,EAAE,QAFd;AAGPC,QAAAA,qBAAqB,EAAE;AAHhB;AAFI,KAAf,EAXc,CAoBd;;AACA,QAAIb,KAAK,CAACK,QAAN,GAAiBS,IAAjB,KAA0B,IAA1B,IAAkC,CAACd,KAAK,CAACK,QAAN,GAAiBS,IAAxD,EAA8D;AAC5DC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAd,MAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAzBa,CA2Bd;;;AAEAb,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,WAAO,MAAMA,WAAW,CAAC,KAAD,CAAxB;AACD,GA/BQ,EA+BN,EA/BM,CAAT;;AAiCA,MAAI,CAACD,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,QAAMe,OAAO,GAAG,MAAM;AACpB,QAAIC,SAAJ;;AACA,YAAQtB,KAAK,CAACK,QAAN,GAAiBkB,YAAjB,CAA8BX,mBAAtC;AACE,WAAK,QAAL;AACEU,QAAAA,SAAS,gBAAG,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEnB;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACA;;AACF,WAAK,SAAL;AACEmB,QAAAA,SAAS,gBAAG,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEnB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACA;;AACF;AACEmB,QAAAA,SAAS,gBAAG,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEnB;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACA;AATJ;;AAWA,WAAOmB,SAAP;AACD,GAdD,CA3CyB,CA2DzB;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,EAAE,EAAC,0BAAnC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIGD,OAAO,EAJV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApED;;GAAMpB,Y;UACYL,U;;;KADZK,Y;AAsEN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\n\nimport { store } from \"../index\";\n\nconst UserHomePage = () => {\n  const history = useHistory();\n  const [userData, setUserData] = useState([store.getState()]);\n\n  const [didMount, setDidMount] = useState(false);\n\n  useEffect(() => {\n    // //autorefresh logs\n    // if (store.getState().serverPods.status != \"server not running\") {\n    //   setTimeout(() => {\n    //     store.dispatch(serverPodsInfo)\n    //     console.log(\"hello!\")\n    //     setRemount(!remount)\n    //   }, 50000);\n    // }\n\n    //adding userHomeData to redux store\n    store.dispatch({\n      type: \"USER_HOME_DATA\",\n      payload: {\n        serverIndex: 0,\n        sideMenuSelectedTab: \"server\",\n        showServerLandingPage: true\n      }\n    })\n\n    //checking if user is logged in, if not, send to home page\n    if (store.getState().auth !== null && !store.getState().auth) {\n      console.log(\"Not logged in\");\n      history.push(\"/\");\n      window.location.reload();\n    }\n\n    // subscribing to state updates\n\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, [])\n\n  if (!didMount) {\n    return null;\n  }\n\n  const getPage = () => {\n    let component;\n    switch (store.getState().userHomeData.sideMenuSelectedTab) {\n      case \"server\":\n        component = <Server userData={userData} />;\n        break;\n      case \"options\":\n        component = <Options userData={userData} />;\n        break;\n      default:\n        component = <Server userData={userData} />;\n        break;\n    }\n    return component;\n  };\n\n  //auth();\n  return (\n    <dir className=\"userHomeLayout\" id=\"random03242jcmvmj0v23cm4\">\n      <dir className=\"userHomesideMenu\">\n        <SideMenu />\n      </dir>\n      {getPage()}\n    </dir>\n  );\n};\n\nexport default UserHomePage;\n"]},"metadata":{},"sourceType":"module"}