[{"/home/main-pc/programing/main_Project/client/src/index.jsx":"1","/home/main-pc/programing/main_Project/client/src/routing/router.jsx":"2","/home/main-pc/programing/main_Project/client/src/components/topMessages/index.jsx":"3","/home/main-pc/programing/main_Project/client/src/redux/actions/index.jsx":"4","/home/main-pc/programing/main_Project/client/src/components/header/header.jsx":"5","/home/main-pc/programing/main_Project/client/src/components/tooltips/index.jsx":"6","/home/main-pc/programing/main_Project/client/src/components/bubbleLinks/index.jsx":"7","/home/main-pc/programing/main_Project/client/src/redux/reducers/index.jsx":"8","/home/main-pc/programing/main_Project/client/src/components/topMessages/err.jsx":"9","/home/main-pc/programing/main_Project/client/src/routing/home/homeRouter.jsx":"10","/home/main-pc/programing/main_Project/client/src/components/topMessages/messages.jsx":"11","/home/main-pc/programing/main_Project/client/src/routing/user/confirmationRouter.jsx":"12","/home/main-pc/programing/main_Project/client/src/routing/user/userRouter.jsx":"13","/home/main-pc/programing/main_Project/client/src/routing/misc/notFoundPage.jsx":"14","/home/main-pc/programing/main_Project/client/src/routing/server/serverRouter.jsx":"15","/home/main-pc/programing/main_Project/client/src/routing/user/changepassRouter.jsx":"16","/home/main-pc/programing/main_Project/client/src/components/tooltips/err.jsx":"17","/home/main-pc/programing/main_Project/client/src/routing/message/index.jsx":"18","/home/main-pc/programing/main_Project/client/src/components/infoPanel/infoPanelUserHome.jsx":"19","/home/main-pc/programing/main_Project/client/src/routing/user/loginRouter.jsx":"20","/home/main-pc/programing/main_Project/client/src/routing/user/signupRouter.jsx":"21","/home/main-pc/programing/main_Project/client/src/routing/user/homeRouter.jsx":"22","/home/main-pc/programing/main_Project/client/src/pages/home.jsx":"23","/home/main-pc/programing/main_Project/client/src/components/confirmation/index.jsx":"24","/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraft.jsx":"25","/home/main-pc/programing/main_Project/client/src/pages/message.jsx":"26","/home/main-pc/programing/main_Project/client/src/components/updatePass/index.jsx":"27","/home/main-pc/programing/main_Project/client/src/pages/userHome.jsx":"28","/home/main-pc/programing/main_Project/client/src/pages/signup.jsx":"29","/home/main-pc/programing/main_Project/client/src/pages/login.jsx":"30","/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraftLevels.jsx":"31","/home/main-pc/programing/main_Project/client/src/components/userHome/options.jsx":"32","/home/main-pc/programing/main_Project/client/src/components/userHome/sideMenu.jsx":"33","/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx":"34","/home/main-pc/programing/main_Project/client/src/components/login/forgetPass.jsx":"35","/home/main-pc/programing/main_Project/client/src/components/payments/serverPlan.jsx":"36","/home/main-pc/programing/main_Project/client/src/components/userHome/options/logout.jsx":"37","/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserPass.jsx":"38","/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserOptinos.jsx":"39","/home/main-pc/programing/main_Project/client/src/components/userHome/server/refreshData.jsx":"40","/home/main-pc/programing/main_Project/client/src/components/userHome/server/startStop.jsx":"41","/home/main-pc/programing/main_Project/client/src/components/userHome/server/logsComponent.jsx":"42","/home/main-pc/programing/main_Project/client/src/components/userHome/server/playTime.jsx":"43","/home/main-pc/programing/main_Project/client/src/components/userHome/server/timeUpdate.jsx":"44","/home/main-pc/programing/main_Project/client/src/components/userHome/server/changeServerConfig.jsx":"45","/home/main-pc/programing/main_Project/client/src/components/payments/paymentHandler.jsx":"46","/home/main-pc/programing/main_Project/client/src/components/payments/payments.jsx":"47","/home/main-pc/programing/main_Project/client/src/components/payments/paymentLoginSignup.jsx":"48","/home/main-pc/programing/main_Project/client/src/components/loadBaseData.jsx":"49","/home/main-pc/programing/main_Project/client/src/store.jsx":"50"},{"size":1781,"mtime":1643399780429,"results":"51","hashOfConfig":"52"},{"size":1466,"mtime":1625743374075,"results":"53","hashOfConfig":"52"},{"size":189,"mtime":1622461763734,"results":"54","hashOfConfig":"52"},{"size":11835,"mtime":1643406949917,"results":"55","hashOfConfig":"52"},{"size":2471,"mtime":1642865231516,"results":"56","hashOfConfig":"52"},{"size":97,"mtime":1622461763734,"results":"57","hashOfConfig":"52"},{"size":3971,"mtime":1642865223368,"results":"58","hashOfConfig":"52"},{"size":2869,"mtime":1642347798980,"results":"59","hashOfConfig":"52"},{"size":869,"mtime":1642865235689,"results":"60","hashOfConfig":"52"},{"size":373,"mtime":1636199131445,"results":"61","hashOfConfig":"52"},{"size":940,"mtime":1642865236469,"results":"62","hashOfConfig":"52"},{"size":174,"mtime":1622461763846,"results":"63","hashOfConfig":"52"},{"size":622,"mtime":1622461763846,"results":"64","hashOfConfig":"52"},{"size":226,"mtime":1622461763846,"results":"65","hashOfConfig":"52"},{"size":338,"mtime":1626119797407,"results":"66","hashOfConfig":"52"},{"size":163,"mtime":1625743333914,"results":"67","hashOfConfig":"52"},{"size":214,"mtime":1622461763734,"results":"68","hashOfConfig":"52"},{"size":470,"mtime":1622461763846,"results":"69","hashOfConfig":"52"},{"size":3542,"mtime":1626087982797,"results":"70","hashOfConfig":"52"},{"size":137,"mtime":1622461763846,"results":"71","hashOfConfig":"52"},{"size":141,"mtime":1622461763846,"results":"72","hashOfConfig":"52"},{"size":1230,"mtime":1636199119749,"results":"73","hashOfConfig":"52"},{"size":5541,"mtime":1642865299998,"results":"74","hashOfConfig":"52"},{"size":800,"mtime":1625742947462,"results":"75","hashOfConfig":"52"},{"size":5801,"mtime":1642865252869,"results":"76","hashOfConfig":"52"},{"size":3670,"mtime":1642865258653,"results":"77","hashOfConfig":"52"},{"size":3470,"mtime":1642865237257,"results":"78","hashOfConfig":"52"},{"size":1872,"mtime":1643400149385,"results":"79","hashOfConfig":"52"},{"size":4146,"mtime":1642865259413,"results":"80","hashOfConfig":"52"},{"size":2430,"mtime":1642865257821,"results":"81","hashOfConfig":"52"},{"size":8172,"mtime":1642865253537,"results":"82","hashOfConfig":"52"},{"size":600,"mtime":1642865251469,"results":"83","hashOfConfig":"52"},{"size":1270,"mtime":1642865247397,"results":"84","hashOfConfig":"52"},{"size":8090,"mtime":1643406483579,"results":"85","hashOfConfig":"52"},{"size":1689,"mtime":1642865233104,"results":"86","hashOfConfig":"52"},{"size":4854,"mtime":1642865235105,"results":"87","hashOfConfig":"52"},{"size":514,"mtime":1622461763734,"results":"88","hashOfConfig":"52"},{"size":3248,"mtime":1642865238437,"results":"89","hashOfConfig":"52"},{"size":3252,"mtime":1642865237877,"results":"90","hashOfConfig":"52"},{"size":518,"mtime":1643403197318,"results":"91","hashOfConfig":"52"},{"size":588,"mtime":1642865250777,"results":"92","hashOfConfig":"52"},{"size":6706,"mtime":1643407257419,"results":"93","hashOfConfig":"52"},{"size":1745,"mtime":1625255094577,"results":"94","hashOfConfig":"52"},{"size":856,"mtime":1625257301182,"results":"95","hashOfConfig":"52"},{"size":15261,"mtime":1642865239037,"results":"96","hashOfConfig":"52"},{"size":2521,"mtime":1630003414174,"results":"97","hashOfConfig":"52"},{"size":5034,"mtime":1642865234385,"results":"98","hashOfConfig":"52"},{"size":5291,"mtime":1642865233781,"results":"99","hashOfConfig":"52"},{"size":2172,"mtime":1642959169720,"results":"100","hashOfConfig":"52"},{"size":386,"mtime":1642865359287,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a9d8zv",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/home/main-pc/programing/main_Project/client/src/index.jsx",["212"],"/home/main-pc/programing/main_Project/client/src/routing/router.jsx",[],["213","214"],"/home/main-pc/programing/main_Project/client/src/components/topMessages/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/redux/actions/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/header/header.jsx",["215"],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport store from \"../../store\"\n\nconst Header = () => {\n    const history = useHistory()\n\n    const [userData, setUserData] = useState(store.getState())\n    const [hideDemo, setHideDemo] = useState(true)\n\n    const handleClick = (source) => {\n        if (source === \"userHome\") {\n            if (store.getState().user.past_servers.length === 0) { // if user doesn't have any servers, throw err\n                console.log(\"THROW ERR\")\n                store.dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: \"Please buy a server to access server dashboard\"\n                })\n                return\n            }\n            history.push(\"/user/home\")\n            window.location.reload()\n            return\n        }\n    }\n\n    store.subscribe(() => {\n        setUserData(store.getState());\n    });\n\n    useEffect(() => {\n        if (window.location.pathname === \"/\") {\n            setHideDemo(true)\n            setTimeout(() => {\n                setHideDemo(true)\n            }, 5000)\n        }\n    }, [])\n\n    return (\n        <div className=\"headerBanner\">\n            <div className=\"headerInnerBanner\">\n                <div >\n                    <a href=\"/\" className=\"homeLink\"><span>U1</span>servers</a>\n                </div>\n                {\n                    hideDemo ?\n                        null\n                        :\n                        <div style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}>\n                            <span style={{ color: \"#fff\", fontSize: \"1.5rem\" }}>DEMO BUILD</span>\n                            <p style={{ color: \"rgba(255, 255, 255, 0.9)\", marginTop: \"10px\", fontSize: \"1.2rem\" }}>(Please help report any problems with the yellow chat function below!)</p>\n                        </div>\n                }\n\n                <div>\n                    {userData.auth ?\n                        <>\n                            <a onClick={() => handleClick(\"userHome\")} >{store.getState().user.name.charAt(0).toUpperCase() + store.getState().user.name.slice(1)}</a>\n                        </>\n                        :\n                        <>\n                            <a href=\"/user/login\">LOGIN</a>\n                        </>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n\n","/home/main-pc/programing/main_Project/client/src/components/tooltips/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/bubbleLinks/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/redux/reducers/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/topMessages/err.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/home/homeRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/topMessages/messages.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/confirmationRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/userRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/misc/notFoundPage.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/server/serverRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/changepassRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/tooltips/err.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/message/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/infoPanel/infoPanelUserHome.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/loginRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/signupRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/homeRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/home.jsx",["216"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { animateScroll as scroll, scroller } from 'react-scroll'\nimport store from \"../store\"\n\nconst HomePage = () => {\n  const [loadAnimation, changeloadAnimation] = useState(false)\n  const [i, changei] = useState(-1)\n  const [gamesAnimation, changeGamesAnimation] = useState(true)\n  const [offset, setOffset] = useState(0)\n\n  const list = [\"Minecraft\", \"ARK\", \"Terraria\", \"Unturned\", \"Rust\"];\n\n  const history = useHistory();\n\n  const changeColorArrowDown = (e) => {\n    if (e) {\n      console.log(\"changing to white\")\n      document.getElementById(\"random9034872m1f7539405\").style.color = \"#fff\"\n      document.getElementById(\"random9034872m1f7539405\").style.opacity = \"0.7\"\n      document.getElementById(\"randomf384ur4398fh34pf\").style.backgroundColor = \"#fff\"\n      document.getElementById(\"random9034872m1f7539405\").style.opacity = \"0.7\"\n    } else {\n      console.log(\"changing to dark\")\n      document.getElementById(\"random9034872m1f7539405\").style.color = \"#141618\"\n      document.getElementById(\"randomf384ur4398fh34pf\").style.backgroundColor = \"#141618\"\n    }\n  }\n\n\n  useEffect(() => {\n    const changeGame = () => {\n      if (i >= list.length - 1) {\n        changei(0)\n      } else {\n        changei(i + 1)\n      }\n    };\n    setTimeout(() => {\n      changeloadAnimation(true)\n    }, 50);\n    if (gamesAnimation) {\n      changeGame()\n      changeGamesAnimation(false)\n    }\n    setTimeout(changeGame, 3000);\n\n    window.onscroll = () => {\n      if (window.pageYOffset < 0) {\n        return\n      }\n      if (offset > window.pageYOffset) {\n        console.log(\"scroll up\")\n        scroll.scrollToTop({\n          duration: 300,\n          smooth: \"easeOutQuad\",\n        })\n        changeColorArrowDown(true)\n      } else if (offset < window.pageYOffset) {\n        console.log(\"scroll down\")\n        scroller.scrollTo(\"section2\", {\n          duration: 300,\n          smooth: \"easeOutQuad\",\n          offset: 500\n        })\n        changeColorArrowDown(false)\n      }\n      setOffset(window.pageYOffset)\n    }\n\n    // check for referals. If referal is found, add to cookie for later use\n    if (store.getState().querySelectors.ref) {\n      document.cookie = `ref=${store.getState().querySelectors.ref}`\n    }\n\n  }, [gamesAnimation, offset, i])\n\n  const gameSelect = e => {\n    switch (e.target.id) {\n      case \"minecraftSelector\":\n        localStorage.removeItem(\"isCardPressed\")\n        history.push(\"/server/minecraft\");\n        window.location.reload();\n        break;\n      default:\n        console.log(\"error with game selection, see homePage.gameSelect\")\n        break;\n    }\n  }\n\n  const scrollToPage2 = () => {\n    scroller.scrollTo(\"section2\", {\n      duration: 300,\n      smooth: \"easeOutQuad\",\n      offset: 500\n    })\n  }\n\n  return (\n    <>\n      <div id=\"section1\">\n        <div className=\"homeMainContainer\">\n          <div className=\"innerContainer\">\n            <span\n              className={\n                loadAnimation ? \"homeMainSpan\" : \"homeMainSpanAway\"\n              }\n            >\n              Host your own{\" \"}\n              <span className=\"homeChangeGameSpan nav-item\">{list[i]}</span>{\" \"}\n              server with <span>U1</span>servers\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"homePage2MainContaiener\" id=\"section2\">\n        <div className=\"homePage2TopPart\">\n          <div className=\"homePage2arrowDown\">\n            {/* <div className=\"homePage2ArrowBall\" onClick={scrollToPage2}>\n              <div className=\"homePage2ArrowBallInner\">\n                <div className=\"homePage2ArrowBallInnerRectangle\" />\n                <div className=\"homePage2ArrowBallInnerTriangle\" />\n              </div>\n            </div> */}\n            <div className=\"homePage2ArrowdownText\">\n              <span onClick={scrollToPage2} id=\"random9034872m1f7539405\">SCROLL</span>\n            </div>\n            <div className=\"homePage2ArrowStick\" id=\"randomf384ur4398fh34pf\" />\n          </div>\n        </div>\n        <div className=\"homePage2Background\" />\n        <div className=\"homePage2Title\">\n          <span>Choose your game</span>\n        </div>\n        <div id=\"homePage2Card\" className=\"homePage2Cards\">\n          <div className=\"homePage2Card1\">\n            <div className=\"whiteBack\" id=\"minecraftSelector\" onClick={gameSelect}>\n              <div className=\"textBottom\">\n                <span>Minecraft</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"homePage2Card2\">\n            <div className=\"whiteBack\" id=\"arkSelector\">\n              <div className=\"blurPartTop\" />\n              <div className=\"comingSoon\">\n                <span>COMING SOON</span>\n              </div>\n              <div className=\"blurPartBottom\" />\n              <div className=\"textBottom\">\n                <span>ARK<p>Survival Evolved</p></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"homePage2Card3\">\n            <div className=\"whiteBack\" id=\"rustSelector\">\n              <div className=\"blurPartTop\" />\n              <div className=\"comingSoon\">\n                <span>COMING</span>\n                <span>SOON</span>\n              </div>\n              <div className=\"blurPartBottom\" />\n              <div className=\"textBottom\">\n                <span>RUST</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default HomePage;\n","/home/main-pc/programing/main_Project/client/src/components/confirmation/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraft.jsx",["217","218","219","220","221","222"],"import { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\"\n\nimport MinecraftLevels from \"./minecraftLevels\"\nimport store from \"../../../store\";\nimport { availableServerTeirs } from \"../../../redux/actions\"\n\nconst MinecraftCreate = () => {\n\n    //const [isCardPressed, setisCardPressed] = useState(\"not pressed\")\n    const [isCardPressed, setisCardPressed] = useState(() => {\n        if (localStorage.getItem(\"isCardPressed\")) return localStorage.getItem(\"isCardPressed\")\n        return \"not pressed\"\n    })\n\n    useEffect(() => {\n        localStorage.setItem(\"isCardPressed\", isCardPressed)\n    }, [isCardPressed])\n\n    useEffect(async () => {\n        await store.dispatch(availableServerTeirs)\n    }, [])\n\n    const [update, setUpdate] = useState(false)\n\n    store.subscribe(() => {\n        setUpdate(!update)\n    })\n\n\n    // ----------- stripe -------------\n\n    const PUBLIC_KEY = \"pk_test_51JCk7wGWd5hOwkfP4Q7UpN498uJW5oa2q7vb97viqghzRSpqilFLqtCB161iX4LOg68mkwqwHaptGyl0rgaB5NSf0080vAPRe9\"\n\n    const stripeLoad = loadStripe(PUBLIC_KEY)\n\n    //---------------------------------\n\n    const landingPageFunc = () => {\n        // element for sold out layout. To use, add this func at the start of the element\n        // also add the className \"serverLandingPageCardSoldOutTemplate\" to the parent element\n\n        // in future make this automatic, add value in db then extract value and based on that\n        // update the parent ele class and insert this func to the element (future work)\n\n        const isSoldOut = (selectedTeir) => {\n            let result = false\n            if (store.getState().availableServerTeirs === null) return null\n            Object.keys(store.getState().availableServerTeirs).forEach((teir) => {\n                if (teir.toUpperCase() === selectedTeir && !store.getState().availableServerTeirs[teir].value) {\n                    result = true\n                }\n            })\n\n            if (result) {\n                //console.log(\"CLASSNAME: \", document.getElementsByClassName(selectedTeir.toLowerCase()))\n                return (\n                    <div className=\"serverLandingPageCardSoldOutDiv\">\n                        <div className=\"serverLandingPageCardSoldOutBlurDivTop\" />\n                        <div className=\"serverLandingPageCardSoldOutMiddleDiv\">\n                            <div className=\"serverLandingPageCardSoldOutMiddleDivInner\">\n                                <span>Sorry,</span>\n                                <span>this server is currently out of stock.</span>\n                            </div>\n                        </div>\n                        <div className=\"serverLandingPageCardSoldOutBlurDivBottom\" />\n                    </div>\n                )\n            }\n            return null\n        }\n\n\n        const element_array = []\n        Object.keys(store.getState().productInfo).forEach(element => {\n            element_array.push(\n                <div className={(isSoldOut(element.toUpperCase()) !== null) ? \"minecraftCards\" + \" \" + element + \" \" + \"serverLandingPageCardSoldOutTemplate\" : \"minecraftCards\" + \" \" + element} onClick={() => setisCardPressed(element)}>\n                    {isSoldOut(element.toUpperCase())}\n                    <div className={\"titleContainer\" + \" \" + `${element.toLowerCase()}TitleContainer`}>\n                        <span>{element.toUpperCase()}</span>\n                    </div>\n                    <div className=\"priceContainer\">\n                        <span>€{store.getState().productInfo[element].price} <span className=\"priceMonth\">/ month</span></span>\n                    </div>\n                    <div className=\"specsContainer\">\n                        <span className=\"cpuSpec\">CPU</span>\n                        <span className=\"memSpec\">MEMORY</span>\n                        <span className=\"cpuSpecValue\">{store.getState().productInfo[element].cpu} cores</span>\n                        <span className=\"memSpecValue\">{store.getState().productInfo[element].mem}gb</span>\n                    </div>\n                    <div className=\"seperationline\" />\n                    <div className=\"description\"> {/* NEED TO CHANGE THIS TO THE BD AND EXTRACT DATA FROM THERE*/}\n                        <span>The basic server is the perfect option for a small group of friends, works great for 3 players</span>\n                    </div>\n                </div>\n            )\n        })\n        return element_array\n    }\n\n    if (isCardPressed !== \"not pressed\") {\n        switch (isCardPressed) {\n            case \"test\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"test\" />\n                    </Elements>\n                )\n            case \"basic\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"basic\" />\n                    </Elements>)\n            case \"normal\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"normal\" />\n                    </Elements>)\n            case \"premium\":\n                return (\n                    <Elements stripe={stripeLoad}>\n                        <MinecraftLevels level=\"premium\" />\n                    </Elements>)\n            default:\n                //window.location.reload();\n                break;\n        }\n    } else {\n        return (\n            <div className=\"minecraftBody\">\n                <span>Choose your Minecraft Server!</span>\n                <div className=\"container\">\n                    {landingPageFunc()}\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default MinecraftCreate;\n","/home/main-pc/programing/main_Project/client/src/pages/message.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/updatePass/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/userHome.jsx",["223","224"],"/home/main-pc/programing/main_Project/client/src/pages/signup.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/login.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraftLevels.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/options.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/sideMenu.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx",["225","226","227","228"],"/home/main-pc/programing/main_Project/client/src/components/login/forgetPass.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/payments/serverPlan.jsx",["229","230","231","232","233","234","235"],"// modules\nimport { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// redux\nimport store from \"../../store\"\n\n// custom hooks\nimport usePaymentLoginSignupHook from \"./paymentLoginSignup\";\n\n// custom files\nimport { passFormPayment, failPayment } from \"./paymentHandler\"\nimport { OneTimePayment } from \"./payments\"\n\nconst ServerPlan = (props) => {\n    // const [passForm, setpassForm] = useState(\"default\")\n    const [passForm, setpassForm] = useState(\"default\")\n    const [initalPageLoad, setInitalPageLoad] = useState(true)\n    const [calcRefPrice, setCalcRefPrice] = useState(props.values.price)\n    const [discountPercentage, setDiscountPercentage] = useState(0)\n\n    // redux\n    const [userData, setUserData] = useState(store.getState())\n\n    // history\n    const history = useHistory();\n\n    //customHook\n    const paymentLoginSignupHook = usePaymentLoginSignupHook();\n\n    store.subscribe(() => {\n        setUserData(store.getState());\n    });\n\n    // enable disable scroll paymentHandler\n    useEffect(() => {\n        if (passForm != \"default\") {\n            document.body.style.overflow = \"hidden\"\n        } else if (passForm === \"default\") {\n            document.body.style.overflow = \"scroll\"\n        }\n    }, [passForm])\n\n    // checking if price should have discount\n    useEffect(async () => {\n        let discount = 0\n        if (initalPageLoad) {\n            // if there is a ref in cookies, send to backend and get back discount in percent, then calculate new price with discount and parse into \"calcRefPrice\" state\n            if (store.getState().cookies.ref) {\n                discount = await axios.post(\"/stripe/getRefPrice\", {\n                    ref: store.getState().cookies.ref\n                })\n                    .then(response => {\n                        return response.data\n                    })\n            }\n            console.log(\"REF PRICE CALCULATED: \", calcRefPrice)\n            setDiscountPercentage(discount)\n            setCalcRefPrice(parseInt(props.values.price) * (1 - (discount / 100)))\n            setInitalPageLoad(false)\n        }\n    })\n\n    useEffect(() => {\n        setInitalPageLoad(true)\n    }, [props.values])\n\n    const paymentSelection = (value) => {\n        switch (value) {\n            case \"sub\":\n                return subscriptionPayment();\n            case \"oneTime\":\n                return OneTimePayment();\n            default:\n                return OneTimePayment();\n        }\n    }\n\n    const paymentpassForm = () => {\n\n    }\n\n    const paymentFailure = () => {\n\n    }\n\n    const subscriptionPayment = () => {\n\n    }\n\n    const isLoggedInFunc = () => {\n        if (userData.auth) {\n            return (\n                OneTimePayment(props)\n            )\n        }\n        return (\n            //OneTimePayment(props)\n            paymentLoginSignupHook\n        )\n    }\n\n    const paymentHandler = () => {\n        switch (passForm) {\n            case \"passForm\":\n                return passFormPayment(history);\n            case \"fail\":\n                return failPayment();\n            case \"default\":\n                return null;\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <>\n            <div className=\"paymentInfoContainer\">\n                <div className=\"paymentInnerHeader\">\n                    <span>Info</span>\n                    <div className=\"paymentInnerHeaderSeperator\" />\n                </div>\n                <div className={props.values.plan + \" paymentInfoPriceContainer\"}>\n                    <span className=\"paymentInfoPlan\">{props.values.plan}</span>\n                    <span className=\"paymentInfoPrice\">{calcRefPrice}€</span>\n                    {\n                        discountPercentage > 0 ?\n                            <div>\n                                <span className=\"paymentInfoPriceCalculationReferal\">Discount from <span>{store.getState().cookies.ref.toUpperCase()}</span></span>\n                                <span className=\"paymentInfoPriceCalculationPrice\">{props.values.price}€ - {discountPercentage}% <span className=\"fas fa-long-arrow-alt-right\" /> {calcRefPrice}€</span>\n                            </div> : null}\n                </div>\n            </div>\n            <div className=\"paymentDataContainer\">\n                <div className=\"paymentInnerHeader\">\n                    <span>Pay</span>\n                    <div className=\"paymentInnerHeaderSeperator\" />\n                </div>\n                {isLoggedInFunc()}\n                {/* INSERT A PROPER SOLUTION TO CHOSE BETWEEN ONE TIME PAYMENT AND SUBSCRIPTION */}\n                {/* <div className=\"paymentInnerPaymentSelectionMain\">\n                </div> */}\n            </div>\n            {paymentHandler()}\n        </>\n    )\n}\n\nexport default ServerPlan\n\n\n","/home/main-pc/programing/main_Project/client/src/components/userHome/options/logout.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserPass.jsx",["236"],"import React, { useState, useEffect } from \"react\"\nimport store from \"../../../store\"\nimport { changePassUserHomeOptions } from \"../../../redux/actions\"\n\nconst ChangeUserPass = () => {\n    const [change, setChange] = useState(false)\n\n    const toggle = () => {\n        setChange(prev => !prev)\n    }\n\n    useEffect(() => {\n        if (change) {\n            document.getElementById(\"9dso8hybf\").className = \"userHomeSegment userHomeChangeDefaults userHomeLogoutContainerDefaults userHomeLogoutContainerMoved\"\n            console.log(change)\n        } else {\n            document.getElementById(\"9dso8hybf\").className = \"userHomeSegment userHomeChangeDefaults userHomeLogoutContainerDefaults userHomeLogoutContainer\"\n            console.log(change)\n        }\n    }, [change])\n\n    const sendData = async (e) => {\n        e.preventDefault()\n        console.log(\"sending data\")\n        console.log(\"oldPass: \", e.target.oldPassword.value, \"newPass1: \", e.target.newPassword1.value, \"newPass2: \", e.target.newPassword2.value)\n\n        const cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n\n        if (e.target.oldPassword.value === \"\" || e.target.newPassword1.value === \"\" || e.target.newPassword2.value === \"\") {\n            console.log(\"Fill in all values!\")\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: \"Fill in all values!\"\n            })\n            return\n        }\n\n        if (e.target.newPassword1.value != e.target.newPassword2.value) {\n            console.log(\"new passwords doesn't match!\")\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: \"The verified password must match the new password!\"\n            })\n            return\n        }\n\n        await changePassUserHomeOptions(cookieValue, e.target.oldPassword.value, e.target.newPassword1.value)\n    }\n\n    const passDefault = () => {\n        return (\n            <div className=\"userHomeSegment changePasswordDefault userHomeChangeDefaults\">\n                <button onClick={toggle}>Change Password</button>\n            </div>\n        )\n\n    }\n\n    const passChange = () => {\n        return (\n            <div className=\"userHomeSegment changePasswordChange userHomeChangeDefaults\">\n                <form className=\"inner\" onSubmit={sendData}>\n                    <div>\n                        <p>Old Password:</p>\n                        <input type=\"password\" name=\"oldPassword\" autoComplete=\"off\" required />\n                    </div>\n                    <div>\n                        <p>New Password:</p>\n                        <input type=\"password\" name=\"newPassword1\" autoComplete=\"off\" required />\n                    </div>\n                    <div>\n                        <p>Verify Password:</p>\n                        <input type=\"password\" name=\"newPassword2\" autoComplete=\"off\" required />\n                    </div>\n                    <button type=\"submit\">save</button>\n                </form>\n            </div>\n        )\n\n    }\n\n    switch (change) {\n        case true:\n            return passChange()\n        default:\n            return passDefault()\n    }\n}\n\nexport default ChangeUserPass","/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserOptinos.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/refreshData.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/startStop.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/logsComponent.jsx",["237"],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/playTime.jsx",[],["238","239"],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/timeUpdate.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/changeServerConfig.jsx",["240","241","242","243"],"import React, { useEffect, useState } from \"react\"\nimport store from \"../../../store\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\n\nconst ChangeServerConfig = (props) => {\n    // stateful settings\n    const state = useSelector(state => state)\n    const [change, setChange] = useState(false)\n    const [whitelist, setWhitelist] = useState([])\n    const [opslist, setOpslist] = useState([])\n    let i = 0;\n\n    const toggle = () => {\n        setChange((prev) => !prev)\n    }\n\n    useEffect(() => {\n        if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value != null) {\n            setWhitelist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value.split(\",\"))\n        }\n        if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value != null) {\n            setOpslist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value.split(\",\"))\n        }\n    }, [state])\n\n    //data for Difficulty and Versions\n    const versions = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n        \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n        \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    let versionBoiler = versions.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    const difficulties = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"]\n\n    const difficultiesBoiler = difficulties.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    //data for Whitelist\n    const changeWhite = async (data) => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (whitelist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setWhitelist(whitelist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const WhitelistList = () => {\n\n        let i = 0;\n        return whitelist.map((e) => {\n            i += 1\n            return <span key={i}>{e}</span>\n        })\n    }\n\n    const WhitelistListChange = () => {\n        let i = 0;\n        return whitelist.map((e) => {\n            i += 1\n            return <span className=\"whiteArray\" onClick={removeFromWhiteList} key={i}>{e}</span>\n        })\n    }\n\n    //data for Ops\n    const changeOps = data => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (opslist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setOpslist(opslist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const OpslistList = () => {\n        let i = 0;\n        return opslist.map((e) => {\n            i += 1\n            return <span key={i}>{e}</span>\n        })\n    }\n\n    const OpslistListChange = () => {\n        let i = 0;\n        return opslist.map((e) => {\n            i += 1\n            return <span className=\"opsArray\" onClick={removeFromOpsList} key={i}>{e}</span>\n        })\n    }\n\n    const removeFromOpsList = (e) => {\n        let newOpsList = opslist.filter(item => item !== e.target.innerText)\n        setOpslist(newOpsList)\n    }\n\n    const removeFromWhiteList = (e) => {\n        let newwhitelist = whitelist.filter(item => item !== e.target.innerText)\n        setWhitelist(newwhitelist)\n    }\n\n    const saveData = async (e) => {\n        e.preventDefault()\n        console.log(\"saving data\")\n\n        console.log(\"serverName: \", e.target.serverName.value)\n        console.log(\"serverVersion: \", e.target.serverVersion.value)\n        console.log(\"serverDifficulty: \", e.target.serverDifficulty.value)\n        console.log(\"serverWhitelist: \", whitelist)\n        console.log(\"serverOpsList: \", opslist)\n\n        // reformatting whitelist and op-list\n        const whitelistString = whitelist.join(\",\")\n        const opslistString = opslist.join(\",\")\n\n        await axios.post(`/mcConf/updateData`, {\n            id: store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id,\n            serverName: e.target.serverName.value,\n            serverVersion: e.target.serverVersion.value,\n            serverDifficulty: e.target.serverDifficulty.value,\n            serverWhitelist: whitelistString,\n            serverOpsList: opslistString\n        }).then(response => {\n            console.log(\"response from updateData: \", response.data.data)\n        })\n        window.location.reload()\n    }\n\n    const defaultFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <div className={configSize}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value}</span>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Version: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value}</span>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Difficulty: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value}</span>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>whitelist: </p>\n                    <span><WhitelistList /></span>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>ops: </p>\n                    <span><OpslistList /></span>\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>change</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    const changeFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <form className={configSize} onSubmit={saveData}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <input type=\"text\" name=\"serverName\" className=\"userHomeChangeServer\" />\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Server Version: </p>\n                    <select name=\"serverVersion\" id=\"\">\n                        {versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Server Difficulty: </p>\n                    <select name=\"serverDifficulty\" id=\"\">\n                        {difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>Whitelists:</p>\n                    <WhitelistListChange />\n                    <input type=\"text\" name=\"serverWhitelist\" onKeyPress={changeWhite} />\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>Ops:</p>\n                    <OpslistListChange />\n                    <input type=\"text\" name=\"serverOps\" onKeyPress={changeOps} />\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button type=\"submit\">save</button>\n                </div>\n            </form>\n        );\n    }\n\n    switch (change) {\n        case true:\n            return changeFunc()\n        default:\n            return defaultFunc()\n    }\n}\n\nexport default ChangeServerConfig\n\n\n\n// import React, {\n//     Component\n// } from \"react\"\n\n\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n\n//     }\n\n\n//     changeFunc = () => {\n\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n\n// export default ChangeServerConfig;","/home/main-pc/programing/main_Project/client/src/components/payments/paymentHandler.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/payments/payments.jsx",["244","245","246","247","248"],"// modules\nimport axios from \"axios\"\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\nimport store from \"../../store\"\nimport { useHistory } from \"react-router-dom\";\nimport { StartServer } from \"../../redux/actions\"\n\n// images\nimport amexIcon from \"../../images/stripe/amexIcon.svg\"\nimport visaIcon from \"../../images/stripe/mastercardIcon.svg\"\nimport mastercardIcon from \"../../images/stripe/visaIcon.svg\"\nimport cvcIcon from \"../../images/stripe/cvcIcon.svg\"\n\nconst CARD_OPTIONS = {\n    iconStyle: \"solid\",\n    type: \"card\",\n    style: {\n        base: {\n            iconColor: \"#c4f0ff\",\n            color: \"#fff\",\n            fontWeight: 500,\n            fontSize: \"1.3rem\",\n            \":-webkit-autofill\": { color: \"#fce883\" },\n            \"::placeholder\": { color: \"#87bbfd\" }\n        },\n        invalid: {\n            iconColor: \"#ffc7ee\",\n            color: \"#ffc7ee\"\n        }\n    }\n}\n\nexport const OneTimePayment = (props) => {\n    const elements = useElements()\n    const stripe = useStripe()\n    const history = useHistory()\n    const ref = null\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        console.log(\"useQuery: \", store.getState().querySelectors)\n        console.log(\"cookies: \", store.getState().cookies.ref)\n\n        console.log(\"EMAIL: \", e.target.email.value, store.getState().user.email)\n\n        if (e.target.email.value === !store.getState().user.email) {\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: \"The email address entered doesn't match the loged in user, make sure you use the same email\"\n            })\n        }\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardNumberElement),\n            billing_details: {\n                email: e.target.email.value\n            }\n        })\n\n        if (error) {\n            console.error(\"Error from file payments.jsx: \", error)\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: error.message\n            })\n            return\n        }\n\n        try {\n            const { id } = paymentMethod\n            const response = await axios.post(\"/stripe\", {\n                product: {\n                    game: \"minecraft\",\n                    plan: props.values.plan\n                },\n                id,\n                ref: store.getState().cookies.ref,\n                userID: store.getState().cookies.userID\n            })\n            // dispaying err if response is err\n\n            console.log(\"RESPONSEDATA: \", response.data.success)\n\n            if (!response.data.success) {\n                console.log('%c%s', 'color: red', \"payment failed\")\n                store.dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: \"Something went wrong with the payment!\"\n                })\n                return\n            }\n\n            // dispaying passForm if response is passFormful\n            console.log('%c%s', 'color: green', \"passFormful payment\")\n            store.dispatch({\n                type: \"MESSAGE\",\n                payload: \"Payment Successfull!\"\n            })\n            history.push(\"/\");\n            window.location.reload()\n            store.dispatch(StartServer)\n            return\n\n        } catch (error) {\n            console.error(error)\n        }\n\n\n        console.log(paymentMethod)\n    }\n    return (\n        <form className=\"paymentOneTimeMainContainer\" onSubmit={handleSubmit}>\n            <div className=\"paymentOneTimeEmail\">\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" autoComplete=\"off\" required />\n            </div>\n            <div className=\"paymentOneTimeCardDetails1\">\n                <div className=\"paymentCardElementCardNumber\">\n                    <div className=\"CardNumberElementDiv\">\n                        <CardNumberElement options={CARD_OPTIONS} />\n                    </div>\n                    <div className=\"cardIcons\">\n                        <img src={amexIcon} />\n                        <img src={visaIcon} />\n                        <img src={mastercardIcon} />\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"paymentOneTimeCardDetails2\">\n                <div className=\"paymentCardElementCardExpiry\">\n                    <CardExpiryElement options={CARD_OPTIONS} />\n                </div>\n                <div className=\"paymentCardElementCardCvc\">\n                    <div className=\"CardNumberElementDiv\">\n                        <CardCvcElement options={CARD_OPTIONS} />\n                    </div>\n                    <div className=\"cardIcons\">\n                        <img src={cvcIcon} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"paymentOneTimeSubmitContainer\">\n                <button type=\"submit\">Pay</button>\n            </div>\n        </form>\n    )\n}\n","/home/main-pc/programing/main_Project/client/src/components/payments/paymentLoginSignup.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/loadBaseData.jsx",["249"],"import { fetchUserData, checkUserAuth, createMcConfig, serverPodsInfo, serverSVCInfo, serverInfo, getQuaryParams, getCookies, productInfo } from \"../redux/actions/index\"\nimport store from \"../store\"\n\n// see attached link: https://stackoverflow.com/questions/50924814/node-js-wait-for-multiple-async-calls-to-finish-before-continuing-in-code for sayn execution \n\nconst basicReq = () => {\n    store.dispatch(checkUserAuth)\n    store.dispatch(getQuaryParams)\n    store.dispatch(productInfo)\n    store.dispatch(getCookies)\n    console.log(\"1\")\n}\n\n\nconst userReq = () => {\n    store.dispatch(createMcConfig)\n    store.dispatch(serverPodsInfo)\n    store.dispatch(serverSVCInfo)\n    store.dispatch(serverInfo)\n    console.log(\"4\")\n}\n\n\nexport default async () => {\n    await basicReq()\n    console.log(\"2\")\n\n    if (store.getState().cookies.userID !== undefined && store.getState().cookies.userID === \"\") return  // cheking if user is logged in\n\n    await store.dispatch(fetchUserData)\n\n    console.log(\"3\")\n\n    if (store.getState().user.past_servers.length <= 0) return  // cheking if user have/ had a server\n\n    await userReq()\n    console.log(\"5\")\n\n    console.log(\"data after fetch func: \", store.getState())\n\n    // check if loginReset is true, if case, resetting cookies\n    if (store.getState().resetLogin) {\n        const cookieKey = [\"loginAuth\", \"userID\"]\n        cookieKey.forEach(element => {\n            document.cookie = `${element}=;path=/;expires=Thu, 01 Jan 1970T00:00:00Z;`\n        })\n        store.dispatch({\n            type: \"AUTH_SUCCESS\",\n            payload: {\n                auth: store.getState().auth,\n                resetLogin: false\n            }\n        })\n    }\n}\n\n\n\n\n\n\n\n// export default Promise.all([\n\n// ]).then(async () => {\n//     console.log(\"2\")\n//     if (store.getState().cookies.userID !== undefined && store.getState().cookies.userID !== \"\") { // cheking if user is logged in\n//         await store.dispatch(fetchUserData)\n//         if (store.getState().user.past_servers.length > 0) { // cheking if user have/ had a server\n//             Promise.all([\n\n//             ]).then(() => {\n\n//             })\n//         }\n//     }\n// })\n\n","/home/main-pc/programing/main_Project/client/src/store.jsx",[],{"ruleId":"250","severity":1,"message":"251","line":23,"column":21,"nodeType":"252","endLine":28,"endColumn":6},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":60,"column":29,"nodeType":"259","endLine":60,"endColumn":73},{"ruleId":"250","severity":1,"message":"260","line":76,"column":6,"nodeType":"261","endLine":76,"endColumn":33,"suggestions":"262"},{"ruleId":"250","severity":1,"message":"251","line":21,"column":15,"nodeType":"252","endLine":23,"endColumn":6},{"ruleId":"263","severity":1,"message":"264","line":78,"column":96,"nodeType":"265","messageId":"266","endLine":78,"endColumn":97},{"ruleId":"263","severity":1,"message":"264","line":78,"column":118,"nodeType":"265","messageId":"266","endLine":78,"endColumn":119},{"ruleId":"263","severity":1,"message":"264","line":78,"column":178,"nodeType":"265","messageId":"266","endLine":78,"endColumn":179},{"ruleId":"263","severity":1,"message":"264","line":80,"column":54,"nodeType":"265","messageId":"266","endLine":80,"endColumn":55},{"ruleId":"263","severity":1,"message":"264","line":80,"column":60,"nodeType":"265","messageId":"266","endLine":80,"endColumn":61},{"ruleId":"250","severity":1,"message":"251","line":17,"column":13,"nodeType":"252","endLine":41,"endColumn":4},{"ruleId":"250","severity":1,"message":"267","line":41,"column":6,"nodeType":"261","endLine":41,"endColumn":8,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":18,"column":10,"nodeType":"271","messageId":"272","endLine":18,"endColumn":25},{"ruleId":"273","severity":1,"message":"274","line":113,"column":13,"nodeType":"259","endLine":113,"endColumn":63},{"ruleId":"263","severity":1,"message":"264","line":152,"column":64,"nodeType":"265","messageId":"266","endLine":152,"endColumn":65},{"ruleId":"263","severity":1,"message":"264","line":152,"column":70,"nodeType":"265","messageId":"266","endLine":152,"endColumn":71},{"ruleId":"269","severity":1,"message":"275","line":18,"column":22,"nodeType":"271","messageId":"272","endLine":18,"endColumn":33},{"ruleId":"276","severity":1,"message":"277","line":38,"column":22,"nodeType":"265","messageId":"278","endLine":38,"endColumn":24},{"ruleId":"250","severity":1,"message":"279","line":46,"column":5,"nodeType":"271","endLine":46,"endColumn":14,"suggestions":"280"},{"ruleId":"250","severity":1,"message":"251","line":46,"column":15,"nodeType":"252","endLine":63,"endColumn":6},{"ruleId":"269","severity":1,"message":"281","line":69,"column":11,"nodeType":"271","messageId":"272","endLine":69,"endColumn":27},{"ruleId":"269","severity":1,"message":"282","line":80,"column":11,"nodeType":"271","messageId":"272","endLine":80,"endColumn":26},{"ruleId":"269","severity":1,"message":"283","line":84,"column":11,"nodeType":"271","messageId":"272","endLine":84,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":41,"column":41,"nodeType":"265","messageId":"278","endLine":41,"endColumn":43},{"ruleId":"250","severity":1,"message":"284","line":67,"column":9,"nodeType":"285","endLine":67,"endColumn":25},{"ruleId":"253","replacedBy":"286"},{"ruleId":"255","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":50,"column":21,"nodeType":"290","messageId":"291","endLine":50,"endColumn":40},{"ruleId":"288","severity":1,"message":"289","line":53,"column":21,"nodeType":"290","messageId":"291","endLine":53,"endColumn":47},{"ruleId":"288","severity":1,"message":"289","line":87,"column":21,"nodeType":"290","messageId":"291","endLine":87,"endColumn":40},{"ruleId":"288","severity":1,"message":"289","line":90,"column":21,"nodeType":"290","messageId":"291","endLine":90,"endColumn":47},{"ruleId":"269","severity":1,"message":"292","line":37,"column":11,"nodeType":"271","messageId":"272","endLine":37,"endColumn":14},{"ruleId":"293","severity":1,"message":"294","line":123,"column":25,"nodeType":"259","endLine":123,"endColumn":47},{"ruleId":"293","severity":1,"message":"294","line":124,"column":25,"nodeType":"259","endLine":124,"endColumn":47},{"ruleId":"293","severity":1,"message":"294","line":125,"column":25,"nodeType":"259","endLine":125,"endColumn":53},{"ruleId":"293","severity":1,"message":"294","line":139,"column":25,"nodeType":"259","endLine":139,"endColumn":46},{"ruleId":"295","severity":1,"message":"296","line":24,"column":1,"nodeType":"297","endLine":55,"endColumn":2},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["298"],"no-negated-in-lhs",["299"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'list.length'. Either include it or remove the dependency array.","ArrayExpression",["300"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["301"],"no-unused-vars","'showLandingPage' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'setpassForm' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","React Hook useEffect contains a call to 'setDiscountPercentage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [initalPageLoad, calcRefPrice, props.values.price] as a second argument to the useEffect Hook.",["302"],"'paymentSelection' is assigned a value but never used.","'paymentpassForm' is assigned a value but never used.","'paymentFailure' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["298"],["299"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'ref' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},"Update the dependencies array to be: [gamesAnimation, offset, i, list.length]",{"range":"309","text":"310"},"Update the dependencies array to be: [history]",{"range":"311","text":"312"},"Add dependencies array: [initalPageLoad, calcRefPrice, props.values.price]",{"range":"313","text":"314"},[2322,2349],"[gamesAnimation, offset, i, list.length]",[1088,1090],"[history]",[2149,2149],", [initalPageLoad, calcRefPrice, props.values.price]"]