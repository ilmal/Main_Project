[{"/home/main-pc/programing/main_Project/client/src/index.jsx":"1","/home/main-pc/programing/main_Project/client/src/routing/router.jsx":"2","/home/main-pc/programing/main_Project/client/src/components/topMessages/index.jsx":"3","/home/main-pc/programing/main_Project/client/src/redux/actions/index.jsx":"4","/home/main-pc/programing/main_Project/client/src/components/header/header.jsx":"5","/home/main-pc/programing/main_Project/client/src/components/tooltips/index.jsx":"6","/home/main-pc/programing/main_Project/client/src/components/bubbleLinks/index.jsx":"7","/home/main-pc/programing/main_Project/client/src/redux/reducers/index.jsx":"8","/home/main-pc/programing/main_Project/client/src/components/topMessages/err.jsx":"9","/home/main-pc/programing/main_Project/client/src/routing/home/homeRouter.jsx":"10","/home/main-pc/programing/main_Project/client/src/components/topMessages/messages.jsx":"11","/home/main-pc/programing/main_Project/client/src/routing/user/confirmationRouter.jsx":"12","/home/main-pc/programing/main_Project/client/src/routing/user/userRouter.jsx":"13","/home/main-pc/programing/main_Project/client/src/routing/misc/notFoundPage.jsx":"14","/home/main-pc/programing/main_Project/client/src/routing/server/serverRouter.jsx":"15","/home/main-pc/programing/main_Project/client/src/routing/user/changepassRouter.jsx":"16","/home/main-pc/programing/main_Project/client/src/components/tooltips/err.jsx":"17","/home/main-pc/programing/main_Project/client/src/routing/message/index.jsx":"18","/home/main-pc/programing/main_Project/client/src/components/infoPanel/infoPanelUserHome.jsx":"19","/home/main-pc/programing/main_Project/client/src/routing/user/loginRouter.jsx":"20","/home/main-pc/programing/main_Project/client/src/routing/user/signupRouter.jsx":"21","/home/main-pc/programing/main_Project/client/src/routing/user/homeRouter.jsx":"22","/home/main-pc/programing/main_Project/client/src/pages/home.jsx":"23","/home/main-pc/programing/main_Project/client/src/components/confirmation/index.jsx":"24","/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraft.jsx":"25","/home/main-pc/programing/main_Project/client/src/pages/message.jsx":"26","/home/main-pc/programing/main_Project/client/src/components/updatePass/index.jsx":"27","/home/main-pc/programing/main_Project/client/src/pages/userHome.jsx":"28","/home/main-pc/programing/main_Project/client/src/pages/signup.jsx":"29","/home/main-pc/programing/main_Project/client/src/pages/login.jsx":"30","/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraftLevels.jsx":"31","/home/main-pc/programing/main_Project/client/src/components/userHome/options.jsx":"32","/home/main-pc/programing/main_Project/client/src/components/userHome/sideMenu.jsx":"33","/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx":"34","/home/main-pc/programing/main_Project/client/src/components/login/forgetPass.jsx":"35","/home/main-pc/programing/main_Project/client/src/components/payments/serverPlan.jsx":"36","/home/main-pc/programing/main_Project/client/src/components/userHome/options/logout.jsx":"37","/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserPass.jsx":"38","/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserOptinos.jsx":"39","/home/main-pc/programing/main_Project/client/src/components/userHome/server/refreshData.jsx":"40","/home/main-pc/programing/main_Project/client/src/components/userHome/server/startStop.jsx":"41","/home/main-pc/programing/main_Project/client/src/components/userHome/server/logsComponent.jsx":"42","/home/main-pc/programing/main_Project/client/src/components/userHome/server/playTime.jsx":"43","/home/main-pc/programing/main_Project/client/src/components/userHome/server/timeUpdate.jsx":"44","/home/main-pc/programing/main_Project/client/src/components/userHome/server/changeServerConfig.jsx":"45","/home/main-pc/programing/main_Project/client/src/components/payments/paymentHandler.jsx":"46","/home/main-pc/programing/main_Project/client/src/components/payments/payments.jsx":"47","/home/main-pc/programing/main_Project/client/src/components/payments/paymentLoginSignup.jsx":"48","/home/main-pc/programing/main_Project/client/src/components/loadBaseData.jsx":"49","/home/main-pc/programing/main_Project/client/src/store.jsx":"50"},{"size":1781,"mtime":1643399780429,"results":"51","hashOfConfig":"52"},{"size":1466,"mtime":1625743374075,"results":"53","hashOfConfig":"52"},{"size":189,"mtime":1622461763734,"results":"54","hashOfConfig":"52"},{"size":11943,"mtime":1644962277770,"results":"55","hashOfConfig":"52"},{"size":2471,"mtime":1642865231516,"results":"56","hashOfConfig":"52"},{"size":97,"mtime":1622461763734,"results":"57","hashOfConfig":"52"},{"size":3971,"mtime":1642865223368,"results":"58","hashOfConfig":"52"},{"size":2897,"mtime":1644934142378,"results":"59","hashOfConfig":"52"},{"size":869,"mtime":1642865235689,"results":"60","hashOfConfig":"52"},{"size":373,"mtime":1636199131445,"results":"61","hashOfConfig":"52"},{"size":940,"mtime":1642865236469,"results":"62","hashOfConfig":"52"},{"size":174,"mtime":1622461763846,"results":"63","hashOfConfig":"52"},{"size":622,"mtime":1622461763846,"results":"64","hashOfConfig":"52"},{"size":226,"mtime":1622461763846,"results":"65","hashOfConfig":"52"},{"size":338,"mtime":1626119797407,"results":"66","hashOfConfig":"52"},{"size":163,"mtime":1625743333914,"results":"67","hashOfConfig":"52"},{"size":214,"mtime":1622461763734,"results":"68","hashOfConfig":"52"},{"size":470,"mtime":1622461763846,"results":"69","hashOfConfig":"52"},{"size":3542,"mtime":1626087982797,"results":"70","hashOfConfig":"52"},{"size":137,"mtime":1622461763846,"results":"71","hashOfConfig":"52"},{"size":141,"mtime":1622461763846,"results":"72","hashOfConfig":"52"},{"size":1230,"mtime":1636199119749,"results":"73","hashOfConfig":"52"},{"size":5541,"mtime":1642865299998,"results":"74","hashOfConfig":"52"},{"size":800,"mtime":1625742947462,"results":"75","hashOfConfig":"52"},{"size":6518,"mtime":1648068757284,"results":"76","hashOfConfig":"52"},{"size":3670,"mtime":1642865258653,"results":"77","hashOfConfig":"52"},{"size":3470,"mtime":1642865237257,"results":"78","hashOfConfig":"52"},{"size":1872,"mtime":1643400149385,"results":"79","hashOfConfig":"52"},{"size":4146,"mtime":1642865259413,"results":"80","hashOfConfig":"52"},{"size":2430,"mtime":1642865257821,"results":"81","hashOfConfig":"52"},{"size":7854,"mtime":1647697970903,"results":"82","hashOfConfig":"52"},{"size":600,"mtime":1642865251469,"results":"83","hashOfConfig":"52"},{"size":1270,"mtime":1642865247397,"results":"84","hashOfConfig":"52"},{"size":10645,"mtime":1645556137086,"results":"85","hashOfConfig":"52"},{"size":1689,"mtime":1642865233104,"results":"86","hashOfConfig":"52"},{"size":7520,"mtime":1648070132555,"results":"87","hashOfConfig":"52"},{"size":514,"mtime":1622461763734,"results":"88","hashOfConfig":"52"},{"size":3248,"mtime":1642865238437,"results":"89","hashOfConfig":"52"},{"size":3252,"mtime":1642865237877,"results":"90","hashOfConfig":"52"},{"size":518,"mtime":1643403197318,"results":"91","hashOfConfig":"52"},{"size":588,"mtime":1642865250777,"results":"92","hashOfConfig":"52"},{"size":6800,"mtime":1643474795514,"results":"93","hashOfConfig":"52"},{"size":1745,"mtime":1625255094577,"results":"94","hashOfConfig":"52"},{"size":856,"mtime":1625257301182,"results":"95","hashOfConfig":"52"},{"size":15261,"mtime":1642865239037,"results":"96","hashOfConfig":"52"},{"size":2521,"mtime":1630003414174,"results":"97","hashOfConfig":"52"},{"size":5043,"mtime":1643407508224,"results":"98","hashOfConfig":"52"},{"size":5291,"mtime":1642865233781,"results":"99","hashOfConfig":"52"},{"size":2071,"mtime":1644961809398,"results":"100","hashOfConfig":"52"},{"size":386,"mtime":1642865359287,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"1a9d8zv",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"105"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"105"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"105"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"/home/main-pc/programing/main_Project/client/src/index.jsx",["216"],"import React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {\n    BrowserRouter as Router,\n    Route\n} from \"react-router-dom\"\nimport \"./scss/main.scss\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nimport Header from \"./components/header/header\"\nimport Boubbles from \"./components/bubbleLinks\"\nimport HomeRouter from \"./routing/router\"\nimport { Tooltips } from \"./components/tooltips\"\nimport { TopMessage } from \"./components/topMessages/index\"\n\nimport loadBaseData from \"./components/loadBaseData\"\n\n\nconst MainComponent = () => {\n    const [loading, setLoading] = useState(true)\n\n    React.useEffect(async () => {\n        if (!loading) return\n        await loadBaseData()\n        console.log(\"im a sneaky boi!\")\n        setLoading(false)\n    }, [loading])\n\n    if (loading) {\n        return (\n            <h1 className=\"loadingText\">Loading...</h1>\n        )\n    } else {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <TopMessage />\n                    <Header />\n                    <Route path=\"/\" component={HomeRouter} />\n                    <Boubbles />\n                    <Tooltips />\n                </Router>\n            </Provider>\n        )\n    }\n}\n\nReactDOM.render(\n    <MainComponent />\n    , document.querySelector(\"#root\")\n)\n\n/*\n1\"@testing-library/jest-dom\": \"^5.11.9\",\n2\"@testing-library/react\": \"^11.2.5\",\n3\"@testing-library/user-event\": \"^12.7.1\",\n4\"axios\": \"^0.21.1\",\n5\"js-cookie\": \"^2.2.1\",\n6\"node-sass\": \"^4.14.1\",\n7\"react\": \"^17.0.1\",\n8\"react-cookie\": \"^4.0.3\",\n9\"react-dom\": \"^17.0.1\",\n10\"react-redux\": \"^7.2.2\",\n11\"react-router-dom\": \"^5.2.0\",\n13\"redux\": \"^4.0.5\",\n14\"redux-devtools-extension\": \"^2.13.8\",\n15\"redux-thunk\": \"^2.3.0\",\n16\"web-vitals\": \"^0.2.4\"\n*/",["217","218"],"/home/main-pc/programing/main_Project/client/src/routing/router.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/topMessages/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/redux/actions/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/header/header.jsx",["219"],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport store from \"../../store\"\n\nconst Header = () => {\n    const history = useHistory()\n\n    const [userData, setUserData] = useState(store.getState())\n    const [hideDemo, setHideDemo] = useState(true)\n\n    const handleClick = (source) => {\n        if (source === \"userHome\") {\n            if (store.getState().user.past_servers.length === 0) { // if user doesn't have any servers, throw err\n                console.log(\"THROW ERR\")\n                store.dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: \"Please buy a server to access server dashboard\"\n                })\n                return\n            }\n            history.push(\"/user/home\")\n            window.location.reload()\n            return\n        }\n    }\n\n    store.subscribe(() => {\n        setUserData(store.getState());\n    });\n\n    useEffect(() => {\n        if (window.location.pathname === \"/\") {\n            setHideDemo(true)\n            setTimeout(() => {\n                setHideDemo(true)\n            }, 5000)\n        }\n    }, [])\n\n    return (\n        <div className=\"headerBanner\">\n            <div className=\"headerInnerBanner\">\n                <div >\n                    <a href=\"/\" className=\"homeLink\"><span>U1</span>servers</a>\n                </div>\n                {\n                    hideDemo ?\n                        null\n                        :\n                        <div style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}>\n                            <span style={{ color: \"#fff\", fontSize: \"1.5rem\" }}>DEMO BUILD</span>\n                            <p style={{ color: \"rgba(255, 255, 255, 0.9)\", marginTop: \"10px\", fontSize: \"1.2rem\" }}>(Please help report any problems with the yellow chat function below!)</p>\n                        </div>\n                }\n\n                <div>\n                    {userData.auth ?\n                        <>\n                            <a onClick={() => handleClick(\"userHome\")} >{store.getState().user.name.charAt(0).toUpperCase() + store.getState().user.name.slice(1)}</a>\n                        </>\n                        :\n                        <>\n                            <a href=\"/user/login\">LOGIN</a>\n                        </>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n\n","/home/main-pc/programing/main_Project/client/src/components/tooltips/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/bubbleLinks/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/redux/reducers/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/topMessages/err.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/home/homeRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/topMessages/messages.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/confirmationRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/userRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/misc/notFoundPage.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/server/serverRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/changepassRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/tooltips/err.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/message/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/infoPanel/infoPanelUserHome.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/loginRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/signupRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/routing/user/homeRouter.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/home.jsx",["220"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { animateScroll as scroll, scroller } from 'react-scroll'\nimport store from \"../store\"\n\nconst HomePage = () => {\n  const [loadAnimation, changeloadAnimation] = useState(false)\n  const [i, changei] = useState(-1)\n  const [gamesAnimation, changeGamesAnimation] = useState(true)\n  const [offset, setOffset] = useState(0)\n\n  const list = [\"Minecraft\", \"ARK\", \"Terraria\", \"Unturned\", \"Rust\"];\n\n  const history = useHistory();\n\n  const changeColorArrowDown = (e) => {\n    if (e) {\n      console.log(\"changing to white\")\n      document.getElementById(\"random9034872m1f7539405\").style.color = \"#fff\"\n      document.getElementById(\"random9034872m1f7539405\").style.opacity = \"0.7\"\n      document.getElementById(\"randomf384ur4398fh34pf\").style.backgroundColor = \"#fff\"\n      document.getElementById(\"random9034872m1f7539405\").style.opacity = \"0.7\"\n    } else {\n      console.log(\"changing to dark\")\n      document.getElementById(\"random9034872m1f7539405\").style.color = \"#141618\"\n      document.getElementById(\"randomf384ur4398fh34pf\").style.backgroundColor = \"#141618\"\n    }\n  }\n\n\n  useEffect(() => {\n    const changeGame = () => {\n      if (i >= list.length - 1) {\n        changei(0)\n      } else {\n        changei(i + 1)\n      }\n    };\n    setTimeout(() => {\n      changeloadAnimation(true)\n    }, 50);\n    if (gamesAnimation) {\n      changeGame()\n      changeGamesAnimation(false)\n    }\n    setTimeout(changeGame, 3000);\n\n    window.onscroll = () => {\n      if (window.pageYOffset < 0) {\n        return\n      }\n      if (offset > window.pageYOffset) {\n        console.log(\"scroll up\")\n        scroll.scrollToTop({\n          duration: 300,\n          smooth: \"easeOutQuad\",\n        })\n        changeColorArrowDown(true)\n      } else if (offset < window.pageYOffset) {\n        console.log(\"scroll down\")\n        scroller.scrollTo(\"section2\", {\n          duration: 300,\n          smooth: \"easeOutQuad\",\n          offset: 500\n        })\n        changeColorArrowDown(false)\n      }\n      setOffset(window.pageYOffset)\n    }\n\n    // check for referals. If referal is found, add to cookie for later use\n    if (store.getState().querySelectors.ref) {\n      document.cookie = `ref=${store.getState().querySelectors.ref}`\n    }\n\n  }, [gamesAnimation, offset, i])\n\n  const gameSelect = e => {\n    switch (e.target.id) {\n      case \"minecraftSelector\":\n        localStorage.removeItem(\"isCardPressed\")\n        history.push(\"/server/minecraft\");\n        window.location.reload();\n        break;\n      default:\n        console.log(\"error with game selection, see homePage.gameSelect\")\n        break;\n    }\n  }\n\n  const scrollToPage2 = () => {\n    scroller.scrollTo(\"section2\", {\n      duration: 300,\n      smooth: \"easeOutQuad\",\n      offset: 500\n    })\n  }\n\n  return (\n    <>\n      <div id=\"section1\">\n        <div className=\"homeMainContainer\">\n          <div className=\"innerContainer\">\n            <span\n              className={\n                loadAnimation ? \"homeMainSpan\" : \"homeMainSpanAway\"\n              }\n            >\n              Host your own{\" \"}\n              <span className=\"homeChangeGameSpan nav-item\">{list[i]}</span>{\" \"}\n              server with <span>U1</span>servers\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"homePage2MainContaiener\" id=\"section2\">\n        <div className=\"homePage2TopPart\">\n          <div className=\"homePage2arrowDown\">\n            {/* <div className=\"homePage2ArrowBall\" onClick={scrollToPage2}>\n              <div className=\"homePage2ArrowBallInner\">\n                <div className=\"homePage2ArrowBallInnerRectangle\" />\n                <div className=\"homePage2ArrowBallInnerTriangle\" />\n              </div>\n            </div> */}\n            <div className=\"homePage2ArrowdownText\">\n              <span onClick={scrollToPage2} id=\"random9034872m1f7539405\">SCROLL</span>\n            </div>\n            <div className=\"homePage2ArrowStick\" id=\"randomf384ur4398fh34pf\" />\n          </div>\n        </div>\n        <div className=\"homePage2Background\" />\n        <div className=\"homePage2Title\">\n          <span>Choose your game</span>\n        </div>\n        <div id=\"homePage2Card\" className=\"homePage2Cards\">\n          <div className=\"homePage2Card1\">\n            <div className=\"whiteBack\" id=\"minecraftSelector\" onClick={gameSelect}>\n              <div className=\"textBottom\">\n                <span>Minecraft</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"homePage2Card2\">\n            <div className=\"whiteBack\" id=\"arkSelector\">\n              <div className=\"blurPartTop\" />\n              <div className=\"comingSoon\">\n                <span>COMING SOON</span>\n              </div>\n              <div className=\"blurPartBottom\" />\n              <div className=\"textBottom\">\n                <span>ARK<p>Survival Evolved</p></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"homePage2Card3\">\n            <div className=\"whiteBack\" id=\"rustSelector\">\n              <div className=\"blurPartTop\" />\n              <div className=\"comingSoon\">\n                <span>COMING</span>\n                <span>SOON</span>\n              </div>\n              <div className=\"blurPartBottom\" />\n              <div className=\"textBottom\">\n                <span>RUST</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default HomePage;\n","/home/main-pc/programing/main_Project/client/src/components/confirmation/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraft.jsx",["221","222","223","224","225","226","227"],"/home/main-pc/programing/main_Project/client/src/pages/message.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/updatePass/index.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/userHome.jsx",["228","229"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport SideMenu from \"../components/userHome/sideMenu\";\nimport Server from \"../components/userHome/server\";\nimport Options from \"../components/userHome/options\";\n\nimport store from \"../store\";\nimport loadBaseData from \"../components/loadBaseData\";\n\nconst UserHomePage = () => {\n  const history = useHistory();\n  const [userData, setUserData] = useState([store.getState()]);\n\n  const [didMount, setDidMount] = useState(false);\n\n  useEffect(async () => {\n\n    //adding userHomeData to redux store\n    store.dispatch({\n      type: \"USER_HOME_DATA\",\n      payload: {\n        serverIndex: 0,\n        sideMenuSelectedTab: \"server\",\n        showServerLandingPage: true\n      }\n    })\n\n    //checking if user is logged in, if not, send to home page\n    if (!store.getState().auth) {\n      console.log(\"Not logged in\");\n      history.push(\"/\");\n      window.location.reload();\n    }\n\n    // updating state\n    await loadBaseData()\n\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, [])\n\n  if (!didMount) {\n    return null;\n  }\n\n  // subscribing to state updates\n  store.subscribe(() => {\n    setUserData(store.getState());\n  });\n\n  const getPage = () => {\n    let component;\n    switch (store.getState().userHomeData.sideMenuSelectedTab) {\n      case \"server\":\n        component = <Server userData={userData} />;\n        break;\n      case \"options\":\n        component = <Options userData={userData} />;\n        break;\n      default:\n        component = <Server userData={userData} />;\n        break;\n    }\n    return component;\n  };\n\n  //auth();\n  return (\n    <div className=\"userHomeLayout\" id=\"random03242jcmvmj0v23cm4\">\n      <div className=\"userHomesideMenu\">\n        <SideMenu />\n      </div>\n      {getPage()}\n    </div>\n  );\n};\n\nexport default UserHomePage;\n","/home/main-pc/programing/main_Project/client/src/pages/signup.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/login.jsx",[],"/home/main-pc/programing/main_Project/client/src/pages/serverCreate/minecraft/minecraftLevels.jsx",["230"],"import { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\"\nimport React, { useEffect, useState } from 'react'\nimport ServerPlan from \"../../../components/payments/serverPlan\";\nimport store from \"../../../store\";\nimport { useLocation } from 'react-router';\nimport queryString from 'query-string';\n\n\n\n\n// getting different data deplending on what server type selected\nconst levelValuesFunc = (propsLevel) => {\n    const defaultValues = {\n        \"plan\": propsLevel.toUpperCase(),\n        \"color\": \"$greenColor\",\n        \"price\": store.getState().productInfo[propsLevel].price,\n        \"cpu\": store.getState().productInfo[propsLevel].cpu,\n        \"mem\": store.getState().productInfo[propsLevel].mem,\n        \"storage\": \"Unlimited\",\n        \"players\": \"4\",\n        \"plugins\": \"Unavailable\",\n        \"mods\": \"Unavailable\"\n    }\n\n    switch (propsLevel) {\n        case \"basic\":\n            return {\n                ...defaultValues,\n                \"color\": \"$greenColor\",\n                \"players\": \"4\",\n            }\n        case \"normal\":\n            return {\n                ...defaultValues,\n                \"color\": \"$blueColor\",\n                \"players\": \"8\",\n            }\n        case \"premium\":\n            return {\n                ...defaultValues,\n                \"color\": \"$pinkolor\",\n                \"players\": \"12\",\n            }\n\n        default:\n            return {\n                ...defaultValues\n            }\n    }\n}\n\nconst useGetQuaryParams = () => {\n    const location = useLocation();\n    return queryString.parse(location.search)\n}\n\nconst MinecraftLevels = (props) => {\n    const history = useHistory();\n    const state = useSelector(state => state)\n    const queryParams = useGetQuaryParams()\n    const [values, setValues] = useState(levelValuesFunc(props.level))\n    const toServer = () => {\n        console.log(state.auth)\n        if (!state.auth) {\n            history.push(\"/user/login\");\n            window.location.reload();\n        } else {\n            history.push(\"/user/home\");\n            window.location.reload();\n        }\n    }\n\n    const handleClick = (origin) => {\n        console.log(origin)\n        // setting localstorage to the selected item for reloading persistance\n        localStorage.setItem(\"isCardPressed\", origin)\n        setValues(levelValuesFunc(origin))\n    }\n\n    const paymentOptions = (data) => {\n        let plan = \"default\"\n\n        // cheking what payment should be displayed depending on plan\n        if (data === \"BASIC\" |\n            data === \"NORMAL\" |\n            data === \"PREMIUM\"\n        ) {\n            plan = \"default\"\n        }\n\n        if (data.type === \"past_servers\") {\n            plan = data.type\n        }\n\n        if (data === \"TEST\") {\n            plan = \"free\"\n        }\n\n        switch (plan) {\n            case \"default\":\n                return (\n                    <ServerPlan values={values} />\n                )\n            case \"free\":\n                return (\n                    <div className=\"freeBody\">\n                        <button onClick={toServer}>Get FREE server</button>\n                    </div>\n                )\n            case \"past_servers\":\n                return (\n                    <ServerPlan values={data} />\n                )\n            default:\n                return (\n                    <ServerPlan values={values} />\n                )\n        }\n    }\n\n    const changeLevelFunc = () => {\n\n        const return_array = []\n        let counter = 0\n        Object.keys(store.getState().productInfo).forEach((e, idx) => {\n\n            if (e.toUpperCase() === \"\") {\n                return\n            }\n            // formula = n + (n + 1)\n            const style = {\n                gridColumn: `${2 * counter + 1}/${2 * counter + 2}`\n            }\n            counter++\n\n            return_array.push(\n                <div className={\"changeLevel\" + e.charAt(0).toUpperCase() + e.slice(1)} style={style} onClick={() => handleClick(e)}>\n                    <div className=\"changeLevelinnerContainer\">\n                        <span>{e.toUpperCase()}</span>\n                    </div>\n                </div>\n            )\n        })\n        return return_array\n    }\n\n    if (queryParams?._id) {\n        return (\n            <div className=\"minecraftBasicBody oldServer\">\n                <div className=\"paymentBody\">\n                    <div className=\"header\">\n                        <span>Payment</span>\n                    </div>\n                    {paymentOptions({\n                        type: \"past_servers\",\n                        payload: queryParams._id\n                    })}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"minecraftBasicBody\">\n            <div className=\"overviewBody\">\n                <div className=\"header\">\n                    <span>Overview</span>\n                </div>\n                <div className=\"planContainer\">\n                    <span>Selected Plan</span>\n                    <div className={values.plan + \"ContainersSeperator upperContainersSeperator\"} />\n                    <div className=\"planContainerInner\">\n                        <div className={values.plan}>\n                            <span >{values.plan}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"priceContainer\">\n                    <span>Price</span>\n                    <div className=\"upperContainersSeperator\" />\n                    <div className=\"priceContainerInner\">\n                        <span>{values.price}€</span>\n                        <p>/month</p>\n                    </div>\n                </div>\n                <div className=\"specsConatiner\">\n                    <div className=\"specHeader\">\n                        <span>Specs</span>\n                        <div className=\"specSeperator\" />\n                    </div>\n                    <div className=\"specValue cpu\">\n                        <span>CPU<span className=\"value\"> {values.cpu} CORE </span></span>\n                    </div>\n                    <div className=\"specValue mem\">\n                        <span>Memory<span className=\"value\"> {values.mem} GB </span></span>\n                    </div>\n                    <div className=\"specValue storage\">\n                        <span>Storage<span className=\"value\">{values.storage} storage</span></span>\n                    </div>\n                </div>\n                <div className=\"gameContainer\">\n                    <div className=\"specHeader\">\n                        <span>Game Features</span>\n                        <div className=\"specSeperator\" />\n                    </div>\n                    <div className=\"specValue cpu\">\n                        <span>Recomended players<span className=\"value\">{values.players}</span></span>\n                    </div>\n                    <div className=\"specValue mem\">\n                        <span>Plugins<span className=\"value\">{values.plugins}</span></span>\n                    </div>\n                    <div className=\"specValue storage\">\n                        <span>Mods<span className=\"value\">{values.mods}</span></span>\n                    </div>\n                </div>\n                <div className=\"changeLevelContainer\">\n                    <div className=\"changeLevelInnerHeader\">\n                        <span>Compare plans</span>\n                    </div>\n                    <div className=\"changeLevelSeperator\" />\n                    {changeLevelFunc()}\n                </div>\n            </div>\n            <div className=\"paymentBody\">\n                <div className=\"header\">\n                    <span>Payment</span>\n                </div>\n                {paymentOptions(values.plan)}\n            </div>\n        </div>\n    )\n};\n\nexport default MinecraftLevels","/home/main-pc/programing/main_Project/client/src/components/userHome/options.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/sideMenu.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server.jsx",["231","232","233","234","235","236","237","238"],"import ChangeServerConfig from \"./server/changeServerConfig\";\nimport LogsComponent from \"./server/logsComponent\"\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactTooltip from 'react-tooltip';\n\nimport store from \"../../store\";\nimport { serverPodsInfo, serverDataRefresh } from \"../../redux/actions\"\n\nimport refreshData from \"./server/refreshData\";\nimport StartStop from \"./server/startStop\";\n\n//images\nimport minecraftImage from \"../../images/userHomeImages/minecraftServerLandingPage.jpg\"\n\n\nconst Server = () => {\n  const [showLandingPage, setShowLandingPage] = useState(true)\n  const [update, setUpdate] = useState(false)\n  const [statusDupe, setStatusDupe] = useState(false)\n\n  const history = useHistory();\n\n  store.subscribe(() => {\n    setUpdate(!update)\n  })\n\n  useEffect(() => {\n    setTimeout(() => {\n      // updating logs\n      if (statusDupe) return\n      setStatusDupe(true)\n      store.dispatch(serverPodsInfo)\n    }, 5000);\n    setStatusDupe(false)\n  }, [statusDupe])\n\n  useEffect(() => {\n\n    // changing layout to fit server and layout\n    const layoutElement = document.getElementById(\"random03242jcmvmj0v23cm4\")\n    if (store.getState().userHomeData.showServerLandingPage && store.getState().user.past_servers.length > 1) {\n      layoutElement.style.gridTemplateRows = \"auto\"\n    } else {\n      layoutElement.style.gridTemplateRows = \" auto repeat(7, 11% 3%)\"\n      layoutElement.style.maxHeight = \"110vh\"\n    }\n  })\n\n\n  const serverStatus = (e) => {\n    switch (store.getState().serverPods.status) {\n      case \"True\":\n        return <div className=\"runningDiv defaultDiv\"><p className=\"running\">Running</p></div>\n      case \"False\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Shutting Down</p></div>\n      case \"Pending\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Starting up</p></div>\n      case \"Queuing\":\n        return <div className=\"closingDiv defaultDiv\"><p className=\"closing\">Queuing for server</p></div>\n      case \"server not running\":\n        return <div className=\"closedDiv defaultDiv\"><p className=\"closed\">Not Running</p></div>\n      default:\n        return <div className=\"closedDiv defaultDiv\"><p className=\"closed\">ERROR OCCURED</p></div>\n    }\n  }\n  const serverIP = () => {\n    if (store.getState().serverPods.status !== \"server not running\") {\n      return <span>{store.getState().serverSVC.address ? store.getState().serverSVC.address : null}</span>\n    } else {\n      return <span>----</span>\n    }\n  }\n\n  const copyText = (e) => {\n    navigator.clipboard.writeText(e.target.innerText)\n  }\n\n  const refreshDataFunc = (e) => {\n    refreshData(e)\n  }\n\n  const startStopFunc = (e) => {\n    StartStop(e.target.id, store)\n  }\n\n  const positionCalculator = (returnArray) => {\n    let start, end\n\n    //calculating the grid placement\n    start = (4 * (returnArray.length + 1)) + 3\n    end = start - 3\n\n    const row = start.toString() + \"/\" + end.toString()\n    return ({\n      gridColumn: \"3/7\",\n      gridRow: row\n    })\n  }\n\n  /*\n    -------------------------LANDING PAGE--------------------------------\n  */\n\n  const landingPageFunc = () => {\n    let returnArray = []\n\n    // logic for choosing image dependant on the game\n    const serverImageSelectorFunc = (className = \"\") => {\n      switch (\"minecraft\") {\n        case \"minecraft\":\n          return (\n            <img src={minecraftImage} className={className} alt=\"minecraft image\" />\n          )\n        default:\n          return (\n            <img src={minecraftImage} className={className} alt=\"minecraft image\" />\n          )\n          break;\n      }\n    }\n\n    //template for the server block showing servers\n    const serverBlock = (returnArray, key, element) => {\n      const handleCLick = async (e) => {\n        setShowLandingPage(false)\n        console.log(\"E.TARGET.ID: \", e)\n        document.cookie = `selectedServer=${e}`\n        // refresh server data to the new server index\n        await store.dispatch(serverDataRefresh)\n        store.dispatch({\n          type: \"USER_HOME_DATA\",\n          payload: {\n            ...store.getState().userHomeData,\n            serverIndex: e,\n            showServerLandingPage: false\n          }\n        })\n      }\n      const orderDate = new Date(element.date)\n      const endDate = orderDate.setDate(orderDate.getDate() + 30)\n      let timeLeft = (endDate - new Date()) / (1000 * 60 * 60 * 24)\n      timeLeft = timeLeft.toString().split(\".\")\n      timeLeft = timeLeft[0]\n      if (timeLeft < 0) {\n        const handleClick = (key) => {\n          history.push(`/server/minecraft?_id=${store.getState().user.past_servers[key].server_id}`)\n          window.location.reload()\n        }\n        return (\n          <>\n            <div className=\"expiredBanner\" style={positionCalculator(returnArray)} onClick={() => handleClick(key)}>\n              <div className=\"expiredBannerInner\">\n                <div className=\"title\">\n                  <span>Server Expired</span>\n                </div>\n                <div className=\"divider\" />\n                <div className=\"info\">\n                  <span>Refresh server now!</span>\n                </div>\n              </div>\n            </div>\n            <div key={key.toString()} className=\"userHomeServerBlockMainContainer userHomeServerBlockMainContainerExpired\" style={positionCalculator(returnArray)} onClick={() => handleCLick(key)}>\n              <div className=\"userHomeServerBlockImageBack\">\n                {serverImageSelectorFunc()}\n              </div>\n              <div className=\"userHomeServerBlockInfoContainer\" id={key}>\n                <div className=\"userHomeServerBlockInfoGameNameContainer\">\n                  <span className=\"userHomeServerBlockInfoGameName\">{element.game.charAt(0).toUpperCase() + element.game.slice(1)}</span>\n                </div>\n                <div className=\"userHomeServerBlockInfoGameNameSeperationLine\" />\n                <span className={\"userHomeServerBlockInfoGamePlan\" + \" \" + \"userHomeServerBlockInfoGamePlan\" + element.plan}>{element.plan}</span>\n                <span className=\"userHomeServerBlockInfoTimeLeft expired\">EXPIRED</span>\n              </div>\n            </div>\n          </>\n        )\n      }\n      return (\n        <div key={key.toString()} className=\"userHomeServerBlockMainContainer\" style={positionCalculator(returnArray)} onClick={() => handleCLick(key)}>\n          <div className=\"userHomeServerBlockImageBack\">\n            {serverImageSelectorFunc()}\n          </div>\n          <div className=\"userHomeServerBlockInfoContainer\" id={key}>\n            <div className=\"userHomeServerBlockInfoGameNameContainer\">\n              <span className=\"userHomeServerBlockInfoGameName\">{element.game.charAt(0).toUpperCase() + element.game.slice(1)}</span>\n            </div>\n            <div className=\"userHomeServerBlockInfoGameNameSeperationLine\" />\n            <span className={\"userHomeServerBlockInfoGamePlan\" + \" \" + \"userHomeServerBlockInfoGamePlan\" + element.plan}>{element.plan}</span>\n            <span className=\"userHomeServerBlockInfoTimeLeft\"> <p>Days left: </p>{timeLeft}</span>\n          </div>\n        </div>\n      )\n    }\n    // the text block shown at the end of the server list\n    const redirectTextBlock = (returnArray) => {\n      return (\n        <div key=\"redirectTextBlockKey\" style={positionCalculator(returnArray)}>\n          <span className=\"userHomeServerBlockSpecialText\">Need another server? Head on over to the <span onClick={() => { history.push(\"/\"); window.location.reload() }}> MAIN PAGE </span></span>\n        </div>\n      )\n    }\n\n    if (store.getState().user) store.getState().user.past_servers.forEach((element, index) => {\n      returnArray.push(serverBlock(returnArray, index, element))\n    })\n    returnArray.push(redirectTextBlock(returnArray))\n    return returnArray\n  }\n\n  const ifDisplayLandingPage = () => {\n    if (store.getState().user.past_servers) {\n      if (store.getState().user.past_servers.length > 1) {\n        return true\n      }\n      const orderDate = new Date(store.getState().user.past_servers[0].date)\n      const endDate = orderDate.setDate(orderDate.getDate() + 30)\n      let timeLeft = (endDate - new Date()) / (1000 * 60 * 60 * 24)\n      timeLeft = timeLeft.toString().split(\".\")\n      timeLeft = timeLeft[0]\n      if (timeLeft < 0) return true\n    }\n    return false\n  }\n\n  // showing start page with server panel where user chooses server and or is redirected to buy server\n  if (store.getState().userHomeData.showServerLandingPage) {\n    if (ifDisplayLandingPage()) return (\n      <>\n        <span className=\"userHomeLandingPageHeader\">Select your server</span>\n        {\n          landingPageFunc()\n        }\n      </>\n    )\n  }\n  // check for user auth, if case show page, else send to main page\n  if (!(document.cookie.search(\"loginAuth\") > -1)) {\n    console.log(\"User no auth\")\n    history.push(\"/\");\n    return null;\n  }\n  return (\n    <>\n      <div className=\"userHomeServerName\">\n        <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value.split(\"Server\")[0].split(\"\")[0].toUpperCase() + store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value.split(\"Server\")[0].slice(1)} Server</span>\n      </div>\n      <div className=\"userHomeSegment userHomeStatusOfServer\">\n        {serverStatus()}\n        <div className=\"checkStatus fas fa-sync\" onClick={refreshDataFunc} data-tip data-for=\"refreshInfo\">\n          <span>Check Status</span>\n        </div>\n      </div>\n      <div className=\"userHomeSegment suerhomeStartStopServer\">\n        <div className=\"innerDivStart\" id=\"startServer\" onClick={startStopFunc}>\n          <span className=\"userHomestart\">Start</span>\n        </div>\n        <div className=\"innerDivStop\" id=\"stopServer\" onClick={startStopFunc}>\n          <span className=\"userHomestop\">Stop</span>\n        </div>\n        <div id=\"random23894723\">\n          <div className=\"userHomeLineBetweenStartStop\" />\n        </div>\n      </div>\n      <div className=\"userHomeSegment userHomeIpAdress\">\n        <p>Server IP:</p>\n        <span data-tip data-for=\"copyServerAddress\" onClick={copyText}>{serverIP()}</span>\n      </div>\n\n      <ChangeServerConfig serverIndex={store.getState().userHomeData.serverIndex} />\n      <LogsComponent />\n\n      <ReactTooltip id=\"copyServerAddress\" delayShow={100}>\n        <p>Click to copy</p>\n      </ReactTooltip>\n      <ReactTooltip id=\"playtimeleft\" place=\"top\" delayShow={20}>\n        <p>play time remaining</p>\n      </ReactTooltip>\n    </>\n  );\n};\n\nexport default Server;\n","/home/main-pc/programing/main_Project/client/src/components/login/forgetPass.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/payments/serverPlan.jsx",["239","240","241","242","243","244","245"],"/home/main-pc/programing/main_Project/client/src/components/userHome/options/logout.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserPass.jsx",["246"],"import React, { useState, useEffect } from \"react\"\nimport store from \"../../../store\"\nimport { changePassUserHomeOptions } from \"../../../redux/actions\"\n\nconst ChangeUserPass = () => {\n    const [change, setChange] = useState(false)\n\n    const toggle = () => {\n        setChange(prev => !prev)\n    }\n\n    useEffect(() => {\n        if (change) {\n            document.getElementById(\"9dso8hybf\").className = \"userHomeSegment userHomeChangeDefaults userHomeLogoutContainerDefaults userHomeLogoutContainerMoved\"\n            console.log(change)\n        } else {\n            document.getElementById(\"9dso8hybf\").className = \"userHomeSegment userHomeChangeDefaults userHomeLogoutContainerDefaults userHomeLogoutContainer\"\n            console.log(change)\n        }\n    }, [change])\n\n    const sendData = async (e) => {\n        e.preventDefault()\n        console.log(\"sending data\")\n        console.log(\"oldPass: \", e.target.oldPassword.value, \"newPass1: \", e.target.newPassword1.value, \"newPass2: \", e.target.newPassword2.value)\n\n        const cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('userID='))\n            .split('=')[1];\n\n        if (e.target.oldPassword.value === \"\" || e.target.newPassword1.value === \"\" || e.target.newPassword2.value === \"\") {\n            console.log(\"Fill in all values!\")\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: \"Fill in all values!\"\n            })\n            return\n        }\n\n        if (e.target.newPassword1.value != e.target.newPassword2.value) {\n            console.log(\"new passwords doesn't match!\")\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: \"The verified password must match the new password!\"\n            })\n            return\n        }\n\n        await changePassUserHomeOptions(cookieValue, e.target.oldPassword.value, e.target.newPassword1.value)\n    }\n\n    const passDefault = () => {\n        return (\n            <div className=\"userHomeSegment changePasswordDefault userHomeChangeDefaults\">\n                <button onClick={toggle}>Change Password</button>\n            </div>\n        )\n\n    }\n\n    const passChange = () => {\n        return (\n            <div className=\"userHomeSegment changePasswordChange userHomeChangeDefaults\">\n                <form className=\"inner\" onSubmit={sendData}>\n                    <div>\n                        <p>Old Password:</p>\n                        <input type=\"password\" name=\"oldPassword\" autoComplete=\"off\" required />\n                    </div>\n                    <div>\n                        <p>New Password:</p>\n                        <input type=\"password\" name=\"newPassword1\" autoComplete=\"off\" required />\n                    </div>\n                    <div>\n                        <p>Verify Password:</p>\n                        <input type=\"password\" name=\"newPassword2\" autoComplete=\"off\" required />\n                    </div>\n                    <button type=\"submit\">save</button>\n                </form>\n            </div>\n        )\n\n    }\n\n    switch (change) {\n        case true:\n            return passChange()\n        default:\n            return passDefault()\n    }\n}\n\nexport default ChangeUserPass","/home/main-pc/programing/main_Project/client/src/components/userHome/options/changeUserOptinos.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/refreshData.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/startStop.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/logsComponent.jsx",["247","248"],"import { useState, useEffect } from \"react\"\nimport store from \"../../../store\";\nimport ReactTooltip from 'react-tooltip';\n\nimport { serverLogsOnly } from \"../../../redux/actions\"\n\nimport refreshData from \"./refreshData\";\n\nconst LogsComponent = () => {\n    const [logsExpand, setLogsExpand] = useState(false)\n    const [update, setUpdate] = useState(false)\n    const [logDupe, setLogDupe] = useState(false)\n    const [logs, setLogs] = useState(store.getState().serverPods.logs)\n\n    store.subscribe(() => {\n        setUpdate(!update)\n    })\n\n    useEffect(() => {\n        // logic for logs interaction\n        // making sure the interaction logic on fire when logs is active\n        if (store.getState().serverPods.status === \"True\") {\n            const ele = document.getElementById('logsText');\n\n            ele.style.cursor = 'grab';\n            ele.scrollTop = ele.scrollHeight;\n\n            let pos = { top: 0, left: 0, x: 0, y: 0 };\n\n            const mouseDownHandler = function (e) {\n                ele.style.cursor = 'grabbing';\n                ele.style.userSelect = 'none';\n\n                pos = {\n                    left: ele.scrollLeft,\n                    top: ele.scrollTop,\n                    // Get the current mouse position\n                    x: e.clientX,\n                    y: e.clientY,\n                };\n\n                document.addEventListener('mousemove', mouseMoveHandler);\n                document.addEventListener('mouseup', mouseUpHandler);\n            };\n\n            const mouseMoveHandler = function (e) {\n                // How far the mouse has been moved\n                const dx = e.clientX - pos.x;\n                const dy = e.clientY - pos.y;\n\n                // Scroll the element\n                ele.scrollTop = pos.top - dy;\n                ele.scrollLeft = pos.left - dx;\n            };\n\n            const mouseUpHandler = function () {\n                ele.style.cursor = 'grab';\n                ele.style.removeProperty('user-select');\n\n                document.removeEventListener('mousemove', mouseMoveHandler);\n                document.removeEventListener('mouseup', mouseUpHandler);\n            };\n\n            // Attach the handler\n            ele.addEventListener('mousedown', mouseDownHandler);\n        }\n    }, [store.getState()]);\n\n    const scrollToBottomFunc = () => {\n        if (!document.getElementById(\"logsText\")) return\n        const element = document.getElementById(\"logsText\")\n        element.scrollTop = element.scrollHeight - element.clientHeight\n    }\n\n    useEffect(() => {\n        // updating logs only, and only pushing to state if logs accually update. This helps with avoiding entire page to freeze on logs update.\n        setTimeout(async () => {\n            if (logDupe) return\n            const serverLogs = await serverLogsOnly()\n            let scroll = false\n            if (serverLogs !== logs) scroll = true\n            //console.log(\"IM RUNNING!\")\n            setLogs(serverLogs)\n            setLogDupe(true)\n            if (scroll) scrollToBottomFunc()\n        }, 5000)\n        setLogDupe(false)\n    }, [logDupe])\n\n\n    const expandLogs = () => {\n        setLogsExpand(!logsExpand)\n        console.log(\"This is the logsExpand function; \", logsExpand)\n    }\n\n    const refreshDataFunc = (e) => {\n        refreshData(e)\n    }\n\n    // ------------- functions for different pods status (default messages) -----------\n\n\n    const running = () => {\n        return (\n            <>\n                <div className={logsExpand ? \"logsMainContainer logsMainContainerHover logsMainContainerExpanded userHomeSegment\" : \"logsMainContainer logsMainContainerHover userHomeSegment\"}>\n                    <div className=\"logsExpandArrow fas fa-expand-arrows-alt\" onClick={expandLogs} data-tip data-for=\"expandLogs\" />\n                    <div className=\"logsText\" id=\"logsText\">\n                        <span>\n                            {logs}\n                            <p></p>\n                        </span>\n                    </div>\n                    <div className=\"logsTextContainer\">\n                        <span>Logs</span>\n                        <div onClick={refreshDataFunc}>\n                            <div className=\"checkStatus fas fa-sync\" data-tip data-for=\"refreshInfo\" />\n                        </div>\n                    </div>\n                </div>\n                <ReactTooltip id=\"refreshInfo\" place=\"bottom\" delayShow={100}>\n                    <p>Click to refresh logs</p>\n                </ReactTooltip>\n                <ReactTooltip id=\"expandLogs\" place=\"bottom\" delayShow={100}>\n                    <p>Click to expand/minimize logs</p>\n                </ReactTooltip>\n            </>\n        )\n    }\n\n    const logsMessageBoiler = (e) => {\n        return (\n            <>\n                <div className=\"logsMainContainer userHomeSegment\">\n\n                    <div className=\"logsMessageContainer\">\n                        {e === \"shuttingDown\" ? <ShuttingDown /> : null}\n                        {e === \"startingUp\" ? <StartingUp /> : null}\n                        {e === \"queue\" ? <Queue /> : null}\n                        {e === \"notRunning\" ? <NotRunning /> : null}\n                    </div>\n                    <div className=\"logsTextContainer\">\n                        <span>Logs</span>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const ShuttingDown = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\n                <span>Server shutting down!</span>\n            </div>\n        )\n    }\n\n    const StartingUp = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\n                <span>Server starting up!</span>\n            </div>\n        )\n    }\n\n    const Queue = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerYellow\">\n                <span>{logs}</span>\n            </div>\n        )\n    }\n\n    const NotRunning = () => {\n        return (\n            <div className=\"logsMessageBanner logsMessageBannerRed\">\n                <span>Server not running!</span>\n            </div>\n        )\n    }\n\n    // ---------------------------------------------------------------------\n\n    // what is displayed in the logs box\n    switch (store.getState().serverPods.status) {\n        case \"True\":\n            return running()\n        case \"False\":\n            return logsMessageBoiler(\"shuttingDown\")\n        case \"Pending\":\n            return logsMessageBoiler(\"startingUp\")\n        case \"Queuing\":\n            return logsMessageBoiler(\"queue\")\n        case \"server not running\":\n            return logsMessageBoiler(\"notRunning\")\n        default:\n            return running()\n    }\n}\n\nexport default LogsComponent","/home/main-pc/programing/main_Project/client/src/components/userHome/server/playTime.jsx",[],["249","250"],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/timeUpdate.jsx",[],["251","252"],"/home/main-pc/programing/main_Project/client/src/components/userHome/server/changeServerConfig.jsx",["253","254","255","256"],"import React, { useEffect, useState } from \"react\"\nimport store from \"../../../store\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\"\n\nconst ChangeServerConfig = (props) => {\n    // stateful settings\n    const state = useSelector(state => state)\n    const [change, setChange] = useState(false)\n    const [whitelist, setWhitelist] = useState([])\n    const [opslist, setOpslist] = useState([])\n    let i = 0;\n\n    const toggle = () => {\n        setChange((prev) => !prev)\n    }\n\n    useEffect(() => {\n        if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value != null) {\n            setWhitelist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[6].value.split(\",\"))\n        }\n        if (store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value != null) {\n            setOpslist(store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[7].value.split(\",\"))\n        }\n    }, [state])\n\n    //data for Difficulty and Versions\n    const versions = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value, \"latest\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n        \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n        \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n    let versionBoiler = versions.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    const difficulties = [store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value, \"hard\", \"normal\", \"easy\", \"peaceful\"]\n\n    const difficultiesBoiler = difficulties.map((d) => {\n        i++\n        return <option value={d} key={i}>{d}</option>\n    })\n\n    //data for Whitelist\n    const changeWhite = async (data) => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (whitelist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setWhitelist(whitelist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const WhitelistList = () => {\n\n        let i = 0;\n        return whitelist.map((e) => {\n            i += 1\n            return <span key={i}>{e}</span>\n        })\n    }\n\n    const WhitelistListChange = () => {\n        let i = 0;\n        return whitelist.map((e) => {\n            i += 1\n            return <span className=\"whiteArray\" onClick={removeFromWhiteList} key={i}>{e}</span>\n        })\n    }\n\n    //data for Ops\n    const changeOps = data => {\n        if (data.key === \"Enter\") {\n            data.preventDefault()\n            try {\n                if (data.target.value === \"\") {\n                    throw \"empty value\"\n                }\n                if (opslist.includes(data.target.value)) {\n                    throw \"name already given\"\n                }\n                setOpslist(opslist.concat(data.target.value))\n                data.target.value = \"\"\n            } catch (result) {\n                console.log(result)\n            }\n\n        }\n    }\n\n    const OpslistList = () => {\n        let i = 0;\n        return opslist.map((e) => {\n            i += 1\n            return <span key={i}>{e}</span>\n        })\n    }\n\n    const OpslistListChange = () => {\n        let i = 0;\n        return opslist.map((e) => {\n            i += 1\n            return <span className=\"opsArray\" onClick={removeFromOpsList} key={i}>{e}</span>\n        })\n    }\n\n    const removeFromOpsList = (e) => {\n        let newOpsList = opslist.filter(item => item !== e.target.innerText)\n        setOpslist(newOpsList)\n    }\n\n    const removeFromWhiteList = (e) => {\n        let newwhitelist = whitelist.filter(item => item !== e.target.innerText)\n        setWhitelist(newwhitelist)\n    }\n\n    const saveData = async (e) => {\n        e.preventDefault()\n        console.log(\"saving data\")\n\n        console.log(\"serverName: \", e.target.serverName.value)\n        console.log(\"serverVersion: \", e.target.serverVersion.value)\n        console.log(\"serverDifficulty: \", e.target.serverDifficulty.value)\n        console.log(\"serverWhitelist: \", whitelist)\n        console.log(\"serverOpsList: \", opslist)\n\n        // reformatting whitelist and op-list\n        const whitelistString = whitelist.join(\",\")\n        const opslistString = opslist.join(\",\")\n\n        await axios.post(`/mcConf/updateData`, {\n            id: store.getState().serverInfo[store.getState().userHomeData.serverIndex].server_id,\n            serverName: e.target.serverName.value,\n            serverVersion: e.target.serverVersion.value,\n            serverDifficulty: e.target.serverDifficulty.value,\n            serverWhitelist: whitelistString,\n            serverOpsList: opslistString\n        }).then(response => {\n            console.log(\"response from updateData: \", response.data.data)\n        })\n        window.location.reload()\n    }\n\n    const defaultFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <div className={configSize}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[4].value}</span>\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Version: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[3].value}</span>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Difficulty: </p>\n                    <span>{store.getState().serverInfo[store.getState().userHomeData.serverIndex].data[5].value}</span>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>whitelist: </p>\n                    <span><WhitelistList /></span>\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>ops: </p>\n                    <span><OpslistList /></span>\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button onClick={toggle}>change</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    const changeFunc = () => {\n\n        let configSize = \"userHomeChangeConfig userHomeSegment\"\n        if (opslist.length > 4 || whitelist.length > 4) {\n            configSize = \"userHomeChangeConfigExtendOne userHomeSegment\"\n        }\n\n        return (\n            <form className={configSize} onSubmit={saveData}>\n                <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n                    <p>Server Name: </p>\n                    <input type=\"text\" name=\"serverName\" className=\"userHomeChangeServer\" />\n                </div>\n                <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n                    <p>Server Version: </p>\n                    <select name=\"serverVersion\" id=\"\">\n                        {versionBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n                    <p>Server Difficulty: </p>\n                    <select name=\"serverDifficulty\" id=\"\">\n                        {difficultiesBoiler}\n                    </select>\n                </div>\n                <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n                    <p>Whitelists:</p>\n                    <WhitelistListChange />\n                    <input type=\"text\" name=\"serverWhitelist\" onKeyPress={changeWhite} />\n                </div>\n                <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n                    <p>Ops:</p>\n                    <OpslistListChange />\n                    <input type=\"text\" name=\"serverOps\" onKeyPress={changeOps} />\n                </div>\n                <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n                    <button type=\"submit\">save</button>\n                </div>\n            </form>\n        );\n    }\n\n    switch (change) {\n        case true:\n            return changeFunc()\n        default:\n            return defaultFunc()\n    }\n}\n\nexport default ChangeServerConfig\n\n\n\n// import React, {\n//     Component\n// } from \"react\"\n\n\n// class ChangeServerConfig extends Component {\n//     state = {\n//         change: false,\n//         whitelist: [\"nils\", \"miniPancookies\"],\n//         opslist: [\"nils\", \"miniPancookies\"]\n//     }\n\n//     toggle = () => {\n//         this.setState({ change: !this.state.change })\n//         console.log(this.state.change)\n//     }\n\n//     //data for Difficulty and Versions\n//     versions = [\"LATEST\", \"1.16.4\", \"1.16.3\", \"1.16.2\", \"1.16\", \"1.15.2\", \"1.15.1\",\n//         \"1.15\", \"1.14.4\", \"1.14.3\", \"1.14.2\", \"1.14.1\", \"1.14\", \"1.13.2\", \"1.13.1\", \"1.13\",\n//         \"1.12.2\", \"1.12.1\", \"1.12\"]\n\n//     versionBoiler = this.versions.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     difficulties = [\"peaceful\", \"easy\", \"normal\", \"hard\"]\n\n//     difficultiesBoiler = this.difficulties.map((d) => {\n//         return <option value={d} key={d}>{d}</option>\n//     })\n\n//     //data for Whitelist\n//     changeWhite = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.whitelist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ whitelist: this.state.whitelist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.whitelist)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     WhitelistList = () => {\n//         return this.state.whitelist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     //data for Ops\n//     changeOps = data => {\n//         if (data.key === \"Enter\") {\n//             data.preventDefault()\n//             try {\n//                 if (data.target.value === \"\") {\n//                     throw \"empty value\"\n//                 }\n//                 if (this.state.opslist.includes(data.target.value)) {\n//                     throw \"name already given\"\n//                 }\n//                 this.setState({ opslist: this.state.opslist.concat(data.target.value) })\n//                 data.target.value = \"\"\n//                 console.log(this.state.opslist)\n//                 console.log(this.state.opslist.length)\n//             } catch (result) {\n//                 console.log(result)\n//             }\n\n//         }\n//     }\n\n//     OpslistList = () => {\n//         return this.state.opslist.map((e) => {\n//             return <span key={e}>{e}</span>\n//         })\n//     }\n\n//     defaultFunc = () => {\n//         return (\n//             <div className=\"userHomeSegment userHomeChangeConfig\">\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <span>NilsServer</span>\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Version: </p>\n//                     <span>1.16.4</span>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Difficulty: </p>\n//                     <span>Hard</span>\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>whitelist: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>ops: </p>\n//                     <span><this.WhitelistList /></span>\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>change</button>\n//                 </div>\n//             </div>\n//         );\n\n//     }\n\n\n//     changeFunc = () => {\n\n//         let configSize = \"userHomeChangeConfig\"\n//         let layout = \"\"\n//         if (this.state.opslist.length > 4 || this.state.whitelist.length > 4) {\n//             configSize = \"userHomeChangeConfigExtendOne\"\n//         }\n//         if (this.state.opslist.length > 12 || this.state.whitelist.length > 7) {\n//             configSize = \"userHomeChangeConfigExtendTwo\"\n//         }\n\n//         return (\n//             <form className={configSize + \" userHomeSegment\"} onSubmit={e => { e.preventDefault(); }}>\n//                 <div className=\"userHomeChangeServerName userHomeChangeDefaults\">\n//                     <p>Server Name: </p>\n//                     <input type=\"text\" className=\"userHomeChangeServer\" />\n//                 </div>\n//                 <div className=\"userHomeChangeVersion userHomeChangeDefaults\">\n//                     <p>Server Version: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.versionBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeDifficulty userHomeChangeDefaults\">\n//                     <p>Server Difficulty: </p>\n//                     <select name=\"\" id=\"\">\n//                         {this.difficultiesBoiler}\n//                     </select>\n//                 </div>\n//                 <div className=\"userHomeChangeOps userHomeChangeDefaults\">\n//                     <p>Ops:</p>\n//                     <this.OpslistList />\n//                     <input type=\"text\" onKeyPress={this.changeOps} />\n//                 </div>\n//                 <div className=\"userHomeChangeWhitelist userHomeChangeDefaults\">\n//                     <p>Whitelists:</p>\n//                     <this.WhitelistList />\n//                     <input type=\"text\" onKeyPress={this.changeWhite} />\n//                 </div>\n//                 <div className=\"userHomeChangeBtn userHomeChangeDefaults\">\n//                     <button onClick={this.toggle}>save</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n\n//     render() {\n//         switch (this.state.change) {\n//             case true:\n//                 return this.changeFunc()\n//             default:\n//                 return this.defaultFunc()\n//         }\n//     }\n// }\n\n// export default ChangeServerConfig;","/home/main-pc/programing/main_Project/client/src/components/payments/paymentHandler.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/payments/payments.jsx",["257","258","259","260","261"],"// modules\nimport axios from \"axios\"\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\nimport store from \"../../store\"\nimport { useHistory } from \"react-router-dom\";\nimport { StartServer } from \"../../redux/actions\"\n\n// images\nimport amexIcon from \"../../images/stripe/amexIcon.svg\"\nimport visaIcon from \"../../images/stripe/mastercardIcon.svg\"\nimport mastercardIcon from \"../../images/stripe/visaIcon.svg\"\nimport cvcIcon from \"../../images/stripe/cvcIcon.svg\"\n\nconst CARD_OPTIONS = {\n    iconStyle: \"solid\",\n    type: \"card\",\n    style: {\n        base: {\n            iconColor: \"#c4f0ff\",\n            color: \"#fff\",\n            fontWeight: 500,\n            fontSize: \"1.3rem\",\n            \":-webkit-autofill\": { color: \"#fce883\" },\n            \"::placeholder\": { color: \"#87bbfd\" }\n        },\n        invalid: {\n            iconColor: \"#ffc7ee\",\n            color: \"#ffc7ee\"\n        }\n    }\n}\n\nexport const OneTimePayment = (props) => {\n    const elements = useElements()\n    const stripe = useStripe()\n    const history = useHistory()\n    const ref = null\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        console.log(\"useQuery: \", store.getState().querySelectors)\n        console.log(\"cookies: \", store.getState().cookies.ref)\n\n        console.log(\"EMAIL: \", e.target.email.value, store.getState().user.email)\n\n        if (e.target.email.value === !store.getState().user.email) {\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: \"The email address entered doesn't match the loged in user, make sure you use the same email\"\n            })\n        }\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardNumberElement),\n            billing_details: {\n                email: e.target.email.value\n            }\n        })\n\n        if (error) {\n            console.error(\"Error from file payments.jsx: \", error)\n            store.dispatch({\n                type: \"ERR_MESSAGE\",\n                payload: error.message\n            })\n            return\n        }\n\n        try {\n            const { id } = paymentMethod\n            const response = await axios.post(\"/stripe\", {\n                product: {\n                    game: \"minecraft\",\n                    plan: props.values.plan\n                },\n                id,\n                ref: store.getState().cookies.ref,\n                userID: store.getState().cookies.userID\n            })\n            // dispaying err if response is err\n\n            console.log(\"RESPONSEDATA: \", response.data.success)\n\n            if (!response.data.success) {\n                console.log('%c%s', 'color: red', \"payment failed\")\n                store.dispatch({\n                    type: \"ERR_MESSAGE\",\n                    payload: \"Something went wrong with the payment!\"\n                })\n                return\n            }\n\n            // dispaying passForm if response is passFormful\n            console.log('%c%s', 'color: green', \"passFormful payment\")\n            store.dispatch({\n                type: \"MESSAGE\",\n                payload: \"Payment Successfull!\"\n            })\n            history.push(\"/user/home\");\n            window.location.reload()\n            store.dispatch(StartServer)\n            return\n\n        } catch (error) {\n            console.error(error)\n        }\n\n\n        console.log(paymentMethod)\n    }\n    return (\n        <form className=\"paymentOneTimeMainContainer\" onSubmit={handleSubmit}>\n            <div className=\"paymentOneTimeEmail\">\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" autoComplete=\"off\" required />\n            </div>\n            <div className=\"paymentOneTimeCardDetails1\">\n                <div className=\"paymentCardElementCardNumber\">\n                    <div className=\"CardNumberElementDiv\">\n                        <CardNumberElement options={CARD_OPTIONS} />\n                    </div>\n                    <div className=\"cardIcons\">\n                        <img src={amexIcon} />\n                        <img src={visaIcon} />\n                        <img src={mastercardIcon} />\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"paymentOneTimeCardDetails2\">\n                <div className=\"paymentCardElementCardExpiry\">\n                    <CardExpiryElement options={CARD_OPTIONS} />\n                </div>\n                <div className=\"paymentCardElementCardCvc\">\n                    <div className=\"CardNumberElementDiv\">\n                        <CardCvcElement options={CARD_OPTIONS} />\n                    </div>\n                    <div className=\"cardIcons\">\n                        <img src={cvcIcon} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"paymentOneTimeSubmitContainer\">\n                <button type=\"submit\">Pay</button>\n            </div>\n        </form>\n    )\n}\n","/home/main-pc/programing/main_Project/client/src/components/payments/paymentLoginSignup.jsx",[],"/home/main-pc/programing/main_Project/client/src/components/loadBaseData.jsx",["262"],"import { fetchUserData, checkUserAuth, createMcConfig, serverPodsInfo, serverSVCInfo, serverInfo, getQuaryParams, getCookies, productInfo } from \"../redux/actions/index\"\nimport store from \"../store\"\n\n// see attached link: https://stackoverflow.com/questions/50924814/node-js-wait-for-multiple-async-calls-to-finish-before-continuing-in-code for sayn execution \n\nexport default async () => {\n    await Promise.all([\n        store.dispatch(checkUserAuth),\n        store.dispatch(getQuaryParams),\n        store.dispatch(productInfo),\n        store.dispatch(getCookies)\n    ])\n\n    if (store.getState().cookies.userID !== undefined && store.getState().cookies.userID === \"\") return  // cheking if user is logged in\n\n    await store.dispatch(fetchUserData)\n\n    if (store.getState()?.user?.past_servers?.length <= 0) return  // cheking if user have/ had a server\n\n    await Promise.all([\n        store.dispatch(createMcConfig),\n        store.dispatch(serverPodsInfo),\n        store.dispatch(serverSVCInfo),\n        store.dispatch(serverInfo)\n    ])\n\n    console.log(\"data after fetch func: \", store.getState())\n\n    // check if loginReset is true, if case, resetting cookies\n    if (store.getState().resetLogin) {\n        const cookieKey = [\"loginAuth\", \"userID\"]\n        cookieKey.forEach(element => {\n            document.cookie = `${element}=;path=/;expires=Thu, 01 Jan 1970T00:00:00Z;`\n        })\n        store.dispatch({\n            type: \"AUTH_SUCCESS\",\n            payload: {\n                auth: store.getState().auth,\n                resetLogin: false\n            }\n        })\n    }\n}\n\n\n\n\n\n\n\n// export default Promise.all([\n\n// ]).then(async () => {\n//     console.log(\"2\")\n//     if (store.getState().cookies.userID !== undefined && store.getState().cookies.userID !== \"\") { // cheking if user is logged in\n//         await store.dispatch(fetchUserData)\n//         if (store.getState().user.past_servers.length > 0) { // cheking if user have/ had a server\n//             Promise.all([\n\n//             ]).then(() => {\n\n//             })\n//         }\n//     }\n// })\n\n","/home/main-pc/programing/main_Project/client/src/store.jsx",[],{"ruleId":"263","severity":1,"message":"264","line":23,"column":21,"nodeType":"265","endLine":28,"endColumn":6},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":60,"column":29,"nodeType":"272","endLine":60,"endColumn":73},{"ruleId":"263","severity":1,"message":"273","line":76,"column":6,"nodeType":"274","endLine":76,"endColumn":33,"suggestions":"275"},{"ruleId":"263","severity":1,"message":"264","line":24,"column":15,"nodeType":"265","endLine":26,"endColumn":6},{"ruleId":"263","severity":1,"message":"276","line":42,"column":8,"nodeType":"274","endLine":42,"endColumn":16,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":90,"column":96,"nodeType":"280","messageId":"281","endLine":90,"endColumn":97},{"ruleId":"278","severity":1,"message":"279","line":90,"column":118,"nodeType":"280","messageId":"281","endLine":90,"endColumn":119},{"ruleId":"278","severity":1,"message":"279","line":90,"column":178,"nodeType":"280","messageId":"281","endLine":90,"endColumn":179},{"ruleId":"278","severity":1,"message":"279","line":92,"column":54,"nodeType":"280","messageId":"281","endLine":92,"endColumn":55},{"ruleId":"278","severity":1,"message":"279","line":92,"column":60,"nodeType":"280","messageId":"281","endLine":92,"endColumn":61},{"ruleId":"263","severity":1,"message":"264","line":17,"column":13,"nodeType":"265","endLine":41,"endColumn":4},{"ruleId":"263","severity":1,"message":"276","line":41,"column":6,"nodeType":"274","endLine":41,"endColumn":8,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":3,"column":17,"nodeType":"285","messageId":"286","endLine":3,"endColumn":26},{"ruleId":"283","severity":1,"message":"287","line":18,"column":10,"nodeType":"285","messageId":"286","endLine":18,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":113,"column":13,"nodeType":"272","endLine":113,"endColumn":85},{"ruleId":"288","severity":1,"message":"289","line":117,"column":13,"nodeType":"272","endLine":117,"endColumn":85},{"ruleId":"290","severity":1,"message":"291","line":119,"column":11,"nodeType":"292","messageId":"293","endLine":119,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":172,"column":68,"nodeType":"280","messageId":"281","endLine":172,"endColumn":69},{"ruleId":"278","severity":1,"message":"279","line":172,"column":74,"nodeType":"280","messageId":"281","endLine":172,"endColumn":75},{"ruleId":"278","severity":1,"message":"279","line":189,"column":64,"nodeType":"280","messageId":"281","endLine":189,"endColumn":65},{"ruleId":"278","severity":1,"message":"279","line":189,"column":70,"nodeType":"280","messageId":"281","endLine":189,"endColumn":71},{"ruleId":"283","severity":1,"message":"294","line":19,"column":22,"nodeType":"285","messageId":"286","endLine":19,"endColumn":33},{"ruleId":"295","severity":1,"message":"296","line":39,"column":22,"nodeType":"280","messageId":"297","endLine":39,"endColumn":24},{"ruleId":"263","severity":1,"message":"298","line":63,"column":5,"nodeType":"285","endLine":63,"endColumn":14,"suggestions":"299"},{"ruleId":"283","severity":1,"message":"300","line":74,"column":11,"nodeType":"285","messageId":"286","endLine":74,"endColumn":27},{"ruleId":"283","severity":1,"message":"301","line":85,"column":11,"nodeType":"285","messageId":"286","endLine":85,"endColumn":26},{"ruleId":"283","severity":1,"message":"302","line":89,"column":11,"nodeType":"285","messageId":"286","endLine":89,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":137,"column":38,"nodeType":"280","messageId":"297","endLine":137,"endColumn":40},{"ruleId":"295","severity":1,"message":"296","line":41,"column":41,"nodeType":"280","messageId":"297","endLine":41,"endColumn":43},{"ruleId":"263","severity":1,"message":"303","line":67,"column":9,"nodeType":"304","endLine":67,"endColumn":25},{"ruleId":"263","severity":1,"message":"305","line":88,"column":8,"nodeType":"274","endLine":88,"endColumn":17,"suggestions":"306"},{"ruleId":"266","replacedBy":"307"},{"ruleId":"268","replacedBy":"308"},{"ruleId":"266","replacedBy":"309"},{"ruleId":"268","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":50,"column":21,"nodeType":"313","messageId":"314","endLine":50,"endColumn":40},{"ruleId":"311","severity":1,"message":"312","line":53,"column":21,"nodeType":"313","messageId":"314","endLine":53,"endColumn":47},{"ruleId":"311","severity":1,"message":"312","line":87,"column":21,"nodeType":"313","messageId":"314","endLine":87,"endColumn":40},{"ruleId":"311","severity":1,"message":"312","line":90,"column":21,"nodeType":"313","messageId":"314","endLine":90,"endColumn":47},{"ruleId":"283","severity":1,"message":"315","line":37,"column":11,"nodeType":"285","messageId":"286","endLine":37,"endColumn":14},{"ruleId":"316","severity":1,"message":"317","line":123,"column":25,"nodeType":"272","endLine":123,"endColumn":47},{"ruleId":"316","severity":1,"message":"317","line":124,"column":25,"nodeType":"272","endLine":124,"endColumn":47},{"ruleId":"316","severity":1,"message":"317","line":125,"column":25,"nodeType":"272","endLine":125,"endColumn":53},{"ruleId":"316","severity":1,"message":"317","line":139,"column":25,"nodeType":"272","endLine":139,"endColumn":46},{"ruleId":"318","severity":1,"message":"319","line":6,"column":1,"nodeType":"320","endLine":43,"endColumn":2},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["321"],"no-negated-in-lhs",["322"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'list.length'. Either include it or remove the dependency array.","ArrayExpression",["323"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["324"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["325"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'showLandingPage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'setpassForm' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","React Hook useEffect contains a call to 'setInitalPageLoad'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [initalPageLoad, calcPrice] as a second argument to the useEffect Hook.",["326"],"'paymentSelection' is assigned a value but never used.","'paymentpassForm' is assigned a value but never used.","'paymentFailure' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'logs'. Either include it or remove the dependency array.",["327"],["321"],["322"],["321"],["322"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'ref' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [gamesAnimation, offset, i, list.length]",{"range":"338","text":"339"},"Update the dependencies array to be: [history, update]",{"range":"340","text":"341"},"Update the dependencies array to be: [history]",{"range":"342","text":"343"},"Add dependencies array: [initalPageLoad, calcPrice]",{"range":"344","text":"345"},"Update the dependencies array to be: [logDupe, logs]",{"range":"346","text":"347"},[2322,2349],"[gamesAnimation, offset, i, list.length]",[1556,1564],"[history, update]",[1088,1090],"[history]",[2220,2220],", [initalPageLoad, calcPrice]",[3093,3102],"[logDupe, logs]"]